{"version":3,"file":"lib_assistant_lib_index_js-webpack_sharing_consume_default_react-dom.afb7ad50102e42876d6c.js","mappings":";;;;;;;;;;;;;;;AAA+B;AAC/B;AACA;AACA;AACA;AACA;AACO,kCAAkC,gDAAmB,GAAG;;;;;;;;;;;;;;;;;;ACNY;AACpE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8DAAsB;AAC7D;AACA;AACA;AACA;AACO;AACP,sBAAsB,2DAAuB;AAC7C;AACA;AACA,iBAAiB;AACjB,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+DAA+D;AAC5F;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1B2B;AACiB;;;;;;;;;;;;;;;;;;;ACDb;AAC0C;AACrB;AACpD;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,mCAAmC,EAAE,6CAAgB,CAAC,iFAAyB;AAC3F;AACA;AACA,gEAAgE,gBAAgB;AAChF;AACA,kCAAkC,aAAa,EAAE,YAAY;AAC7D,8BAA8B,4DAAa,CAAC,GAAG,mBAAmB;AAClE;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE;AACA,iDAAiD,gBAAgB;AACjE,YAAY,gDAAmB,CAAC,iFAAyB,aAAa;AACtE;AACA;AACA,WAAW;AACX,QAAQ,gDAAmB,QAAQ,2DAA2D;AAC9F;;;;;;;;;;;;;;;;;;AC9B+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,IAAI,wBAAwB;AACtE;;;;;;;;;;;;;;;;;;ACV+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,IAAI,qBAAqB;AACnE;;;;;;;;;;;;;;;;;;;;;ACV2D;AAC/B;AACM;AACF;AAChC;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,yDAAyD;AACrE,gDAAgD,+CAAQ;AACxD,4CAA4C,+CAAQ;AACpD,wBAAwB,6CAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,0DAAmB,UAAU,4CAA4C;AACrF,QAAQ,0DAAmB,CAAC,2CAAM,IAAI,qGAAqG,+BAA+B,EAAE,UAAU;AACtL;AACA,eAAe;AACf,YAAY,0DAAmB,CAAC,yCAAK,IAAI,sBAAsB;AAC/D,YAAY,0DAAmB,CAAC,qCAAG,IAAI,0BAA0B;AACjE,gBAAgB,0DAAmB,CAAC,qCAAG,IAAI,sBAAsB;AACjE,gBAAgB,0DAAmB,CAAC,qCAAG,IAAI,sBAAsB;AACjE,oBAAoB,0DAAmB;AACvC,YAAY,0DAAmB,CAAC,qCAAG,IAAI,+DAA+D,2BAA2B,0DAAmB,CAAC,2CAAM,IAAI,0CAA0C,2DAA2D,wDAAwD;AAC5T;;;;;;;;;;;;;;;;;;AClK+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,IAAI,sBAAsB;AACpE;;;;;;;;;;;;;;;;;;ACV+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,IAAI,wBAAwB;AACtE;;;;;;;;;;;;;;;;;;;;;ACV0B;AAC8B;AACD;AACtB;AACY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,oEAAoE;AAChF,UAAU,OAAO;AACjB,2BAA2B,4DAAS;AACpC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,+DAAW,IAAI,wBAAwB;AACvE,QAAQ,0DAAmB,CAAC,uCAAG,IAAI,sCAAsC,YAAY,MAAM;AAC3F,YAAY,0DAAmB,CAAC,yCAAK,IAAI,sBAAsB;AAC/D,YAAY,0DAAmB,CAAC,uDAAQ,QAAQ,uDAAuD;AACvG,gBAAgB,0DAAmB,CAAC,uCAAG,IAAI,0BAA0B;AACrE,oBAAoB,0DAAmB,CAAC,uCAAG,IAAI,uBAAuB;AACtE,wBAAwB,0DAAmB,CAAC,uCAAG,IAAI,qBAAqB;AACxE,4BAA4B,0DAAmB,CAAC,uCAAG,IAAI,0BAA0B;AACjF,gCAAgC,0DAAmB,CAAC,uCAAG,IAAI,qBAAqB;AAChF,oCAAoC,0DAAmB,CAAC,yCAAK;AAC7D,4BAA4B,0DAAmB,CAAC,uCAAG,IAAI,sBAAsB;AAC7E,wBAAwB,0DAAmB,CAAC,0CAAM,IAAI,+EAA+E;AACrI,4BAA4B,0DAAmB,CAAC,yCAAK;AACrD,oBAAoB,0DAAmB,CAAC,uCAAG,IAAI,wBAAwB;AACvE,wBAAwB,0DAAmB,CAAC,uCAAG,IAAI,0BAA0B;AAC7E,4BAA4B,0DAAmB,CAAC,uCAAG,IAAI,qBAAqB;AAC5E,gCAAgC,0DAAmB,CAAC,yCAAK;AACzD,wBAAwB,0DAAmB,CAAC,uCAAG,IAAI,wBAAwB;AAC3E,oBAAoB,0DAAmB,CAAC,uCAAG,IAAI,wBAAwB;AACvE,wBAAwB,0DAAmB,CAAC,uCAAG,IAAI,wBAAwB;AAC3E,4BAA4B,0DAAmB,CAAC,uCAAG,IAAI,0BAA0B;AACjF,gCAAgC,0DAAmB,CAAC,uCAAG,IAAI,qBAAqB;AAChF,oCAAoC,0DAAmB,CAAC,yCAAK;AAC7D,4BAA4B,0DAAmB,CAAC,uCAAG,IAAI,sBAAsB;AAC7E;AACA;;;;;;;;;;;;;;;;;;AC5L+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,IAAI,wBAAwB;AACtE;;;;;;;;;;;;;;;;;;ACV+B;AACa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,gDAAmB,CAAC,qDAAW,IAAI,uBAAuB;AACrE;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,2CAA2C,KAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7B8B;AACL;AACH;AACa;AACX;AACC;AACA;AACD;AACG;;;;;;;;;;;;;;;;;;;;ACRc;AACiB;AACN;AACX;AACzC;AACA;AACA;AACA;AACO;AACP,YAAY,uIAAuI;AACnJ,IAAI,gDAAS;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,iDAAK,IAAI;AACzC,4BAA4B;AAC5B,iEAAiE,0DAAmB,CAAC,6DAAe,IAAI;AACxG;AACA;AACA;AACA,oCAAoC,sEAA8B;AAClE;AACA,eAAe,qCAAqC;AACpD;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BwE;AACrB;AACP;AACX;AACU;AACI;AACE;AACiB;AAC1B;AACK;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kBAAkB,iDAAU;AACnC,YAAY,6HAA6H;AACzI,8CAA8C,yDAAiB;AAC/D;AACA;AACA,wBAAwB,6CAAM;AAC9B;AACA;AACA;AACA,gEAAgE,+CAAQ;AACxE,8DAA8D,+CAAQ;AACtE,gFAAgF,+CAAQ;AACxF,8DAA8D,+CAAQ;AACtE;AACA,0DAA0D,+CAAQ;AAClE;AACA;AACA;AACA,KAAK,IAAI;AACT,kCAAkC,kEAAmB;AACrD;AACA;AACA,eAAe,YAAY,MAAM,0DAAmB,WAAW;AAC/D,wBAAwB;AACxB,0BAA0B;AAC1B;AACA;AACA,yBAAyB,kDAAW;AACpC;AACA;AACA;AACA;AACA,KAAK;AACL,kCAAkC,kDAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB,EAAE,MAAM;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mCAAmC,kDAAW;AAC9C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kDAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI,0DAAa;AACjB;AACA,YAAY,iEAAS;AACrB;AACA,KAAK;AACL;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,gDA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AI,sBAAsB;AACjE,YAAY,0DAAmB,CAAC,6DAAe,IAAI,kIAAkI;AACrL;;;;;;;;;;;;;;;;;;;AClGwC;AACP;AACqC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,wFAAwF;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAgC,aAAa;AACxE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,0DAAmB,sBAAsB,0HAA0H;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,+CAA+C,+CAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,+CAAG,IAAI,mCAAmC;AAC1E,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,QAAQ,0DAAmB,CAAC,kDAAM,IAAI,yJAAyJ;AAC/L,YAAY,0DAAmB,CAAC,kDAAM,IAAI,wFAAwF;AAClI,kCAAkC,0DAAmB,CAAC,kDAAM,IAAI,qDAAqD;AACrH,uBAAuB,0DAAmB,CAAC,kDAAM,IAAI,yFAAyF;AAC9I,YAAY,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAC5D,gBAAgB,0DAAmB,CAAC,yCAAK;AACzC;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9H0B;AACO;AACwC;AAC9B;AACI;AAC0B;AACxB;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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;AACA,8BAA8B,sCAAsC;AACpE;AACA;AACA,eAAe;AACf;;;;;;;;;;;;;;;;;;;;;;;AClKiC;AACD;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFN;AACM;AACT;AACA;AACK;AACG;AACN;AACE;AACK;AACA;AACF;AACL;;;;;;;;;;;;;;;;;;;;;ACXc;AACQ;AACb;AACc;AAClD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,sDAAsD;AAClE;AACA,IAAI,gDAAS;AACb;AACA,KAAK;AACL;AACA;AACA,YAAY,0DAAmB,CAAC,+CAAG,IAAI,+BAA+B;AACtE,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,wBAAwB;AAC3D,YAAY,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAC5D,gBAAgB,0DAAmB,CAAC,yCAAK;AACzC,YAAY,0DAAmB,CAAC,+CAAG,IAAI,0BAA0B;AACjE,oCAAoC,0DAAmB,CAAC,2DAAc,IAAI,qFAAqF;AAC/J;;;;;;;;;;;;;;;;;;;;;;;;;AChEwC;AACJ;AAC2B;AACvB;AACiB;AACM;AAC5B;AACnC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,2FAA2F;AACvG,gDAAgD,+CAAQ;AACxD,gDAAgD,+CAAQ;AACxD,0CAA0C,+CAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,uDAAc;AAC9C,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,iCAAiC;AACtE,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,2BAA2B;AAC9D,YAAY,0DAAmB,CAAC,4DAAS,IAAI,GAAG,8DAAY,2CAA2C,KAAK,uDAAuD,MAAM,0DAAmB,UAAU;AACtM;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B,0DAAmB,UAAU,kBAAkB,cAAc,GAAG,4BAA4B,0DAAmB,WAAW,mBAAmB,YAAY,GAAG;AAC1M,8BAA8B,0DAAmB,CAAC,+CAAG,IAAI,6BAA6B;AACtF,YAAY,0DAAmB,CAAC,kDAAM,IAAI,0BAA0B,iCAAiC,mGAAmG,iDAAS,CAAC,wEAAiB,sBAAsB,2EAA2E;AACpU,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChE,oBAAoB,0DAAmB,CAAC,yCAAK;AAC7C,gBAAgB,0DAAmB,CAAC,kDAAO,IAAI,oGAAoG;AACnJ,YAAY,0DAAmB,CAAC,kDAAM,IAAI,uDAAuD,iCAAiC,EAAE,gCAAgC,mOAAmO;AACvY,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChE,oBAAoB,0DAAmB,CAAC,yCAAK;AAC7C,gBAAgB,0DAAmB,CAAC,kDAAO,IAAI,wGAAwG;AACvJ,YAAY,0DAAmB,CAAC,kDAAM,IAAI,2BAA2B,8BAA8B,uKAAuK;AAC1Q,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChE,oBAAoB,0DAAmB,CAAC,yCAAK;AAC7C,gBAAgB,0DAAmB,CAAC,kDAAO,IAAI,qGAAqG;AACpJ;;;;;;;;;;;;;;;;;;;;;;AC9G0B;AACuB;AACb;AACe;AACD;AAClD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,8HAA8H;AAC1I;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,uDAAc;AAC9C,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,2CAA2C;AAC9E,YAAY,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAC5D,gBAAgB,0DAAmB,CAAC,yCAAK;AACzC,4CAA4C,0DAAmB,CAAC,2DAAc,IAAI,+GAA+G;AACjM,QAAQ,0DAAmB,CAAC,2DAAc,IAAI,SAAS,sBAAsB,qMAAqM;AAClR;;;;;;;;;;;;;;;;;;;;ACxC0B;AAC+B;AACrB;AACpC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,2EAA2E;AACvF;AACA;AACA;AACA;AACA;AACA,sBAAsB,0DAAmB,CAAC,uDAAc;AACxD;AACA;AACA,gBAAgB,0DAAmB,QAAQ,wFAAwF;AACnI;AACA;AACA,yBAAyB,0DAAmB,CAAC,yCAAK;AAClD,wBAAwB,0DAAmB,CAAC,yCAAK;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAmB,CAAC,yCAAK;AAClD,wBAAwB,0DAAmB,CAAC,yCAAK;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAmB,CAAC,yCAAK;AAClD,wBAAwB,0DAAmB,CAAC,yCAAK;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sBAAsB,0DAAmB;AACzC;AACA,gBAAgB,0DAAmB,QAAQ;AAC3C;AACA;AACA,uBAAuB;AACvB,oBAAoB,0DAAmB,CAAC,yCAAK;AAC7C;AACA;AACA,oCAAoC,0DAAmB,CAAC,uDAAc;AACtE,oBAAoB,0DAAmB;AACvC,oBAAoB,0DAAmB;AACvC;AACA;AACA,oBAAoB,0DAAmB,QAAQ,sFAAsF;AACrI;AACA;AACA,yBAAyB,0DAAmB,CAAC,yCAAK;AAClD,2CAA2C,0DAAmB,CAAC,yCAAK;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0DAAmB,CAAC,yCAAK;AAC9C,oBAAoB,0DAAmB,CAAC,yCAAK;AAC7C;AACA;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,+CAAG,IAAI,0DAA0D;AACjG,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,oCAAoC;AACzE,sCAAsC,0DAAmB,CAAC,+CAAG,IAAI,uBAAuB;AACxF,YAAY,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAC5D,gBAAgB,0DAAmB,CAAC,yCAAK;AACzC,YAAY,0DAAmB,CAAC,+CAAG,IAAI,sBAAsB;AAC7D,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,sBAAsB;AACzD,YAAY,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAC5D,YAAY,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAC5D,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,uBAAuB;AAC1D,gCAAgC,0DAAmB,CAAC,kDAAM,IAAI,qGAAqG;AACnK,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChE,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChE,gCAAgC,0DAAmB,CAAC,kDAAM,IAAI,kEAAkE;AAChI,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChE,oBAAoB,0DAAmB;AACvC;;;;;;;;;;;;;;;;;;;;ACpO0B;AACc;AACA;AACW;AACnD;AACA;AACA;AACA;AACO;AACP,YAAY,oDAAoD;AAChE,0BAA0B,4DAAoB;AAC9C;AACA,YAAY,0DAAmB,CAAC,uDAAc,mEAAmE,0DAAmB,CAAC,iDAAS,IAAI,kCAAkC,MAAM,0DAAmB,CAAC,iDAAS,IAAI,sNAAsN;AACjb;;;;;;;;;;;;;;;;;;;ACb0B;AACuB;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,UAAU;AACtB,YAAY,0DAAmB,CAAC,uDAAc;AAC9C,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,2BAA2B;AAC9D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BgC;AACC;AACL;AACO;AACP;AACG;;;;;;;;;;;;;;;;;;;;;;;;ACLL;AACuB;AACN;AACM;AACF;AACd;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/WC;AACQ;AACA;AACY;AACjB;AACH;AACA;AACA;AACc;AACd;AACF;;;;;;;;;;;;;;;;;;;;;;;;ACVW;AACkB;AACX;AACJ;AAC4B;AAC/B;AACjC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,6DAA6D;AACzE,wCAAwC,+CAAQ;AAChD,8CAA8C,+CAAQ;AACtD;AACA;AACA;AACA;AACA,UAAU,qCAAqC;AAC/C,UAAU;AACV;AACA,sCAAsC,+CAAQ;AAC9C;AACA;AACA;AACA,IAAI,gDAAS;AACb,4BAA4B,+CAAO;AACnC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,+CAAG,IAAI,6BAA6B;AACpE,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,sBAAsB;AACzD,8BAA8B,0DAAmB,CAAC,+CAAG,IAAI,yBAAyB;AAClF,6BAA6B,0DAAmB,CAAC,uDAAc;AAC/D,YAAY,0DAAmB,CAAC,+CAAG,IAAI,uBAAuB;AAC9D,gBAAgB,0DAAmB,YAAY,8DAA8D;AAC7G,gBAAgB,0DAAmB,CAAC,yCAAK;AACzC,YAAY,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAC5D,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB,CAAC,oDAAQ,IAAI,iGAAiG;AACjJ,YAAY,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB,6BAA6B,0DAAmB,CAAC,kDAAM,IAAI,qDAAqD,8CAA8C,0DAA0D;AACpR,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChE,oBAAoB,0DAAmB,CAAC,yCAAK;AAC7C,gBAAgB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChE,gDAAgD,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AAChG,oBAAoB,0DAAmB,CAAC,qDAAO,IAAI,yCAAyC,OAAO,0DAAmB,CAAC,kDAAM,IAAI,qCAAqC,SAAS,2EAA2E,SAAS;AACnQ;AACA;AACA,uBAAuB;AACvB,oBAAoB,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AACpE,wBAAwB,0DAAmB,CAAC,qDAAO,IAAI,yCAAyC;AAChG,oBAAoB,0DAAmB,CAAC,yCAAK;AAC7C,oBAAoB,0DAAmB,CAAC,kDAAO,IAAI,+DAA+D,SAAS,iBAAiB;AAC5I;;;;;;;;;;;;;;;;;;;;;ACvP0B;AACoB;AACkD;AAC/C;AACjD;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,qRAAqR;AACjS;AACA;AACA;AACA,gBAAgB,0DAAmB,CAAC,uDAAc;AAClD,YAAY,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC/D,YAAY,0DAAmB,CAAC,+CAAG,IAAI,mCAAmC;AAC1E,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB;AACnC,YAAY,0DAAmB,CAAC,mEAAiB,IAAI,iGAAiG;AACtJ;AACA;AACA,gBAAgB,0DAAmB,CAAC,gEAAc,IAAI,4EAA4E;AAClI;AACA;AACA,gBAAgB,0DAAmB,CAAC,qEAAmB,IAAI,mkBAAmkB;AAC9nB;AACA;AACA,gBAAgB,0DAAmB,CAAC,yDAAa,IAAI,kMAAkM;AACvP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/D0B;AACa;AACQ;AACA;AACd;AACY;AACV;AACS;AAC5C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;A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A,UAAU,4CAAQ;AAClB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACzDA;AACgD;AACzC;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B,6DAAiB;AAC5C;AACA;AACA;AACA;AACO;AACP,2BAA2B,6DAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sBAAsB;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpC+B;AACG;AACN;AACQ;AACI;AAChB;AACS;;;;;;;;;;;;;;;;;;;ACNiB;AACa;AAC/D;AACO;AACP;AACA;AACA;AACA,YAAY,8CAAM;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,yBAAyB,6DAAiB;AAC1C,2BAA2B,yDAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAO;AACrC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+CAAO,2BAA2B,8CAAM;AACnD;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEoC;AACkI;AACrI;AACQ;AAC+C;AACjF;AACP;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wBAAwB,8EAAsB;AAC9C,+BAA+B;AAC/B,SAAS;AACT;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,UAAU,+CAAO,CAAC,8CAAM;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA,YAAY,gBAAgB;AAC5B,aAAa;AACb;AACO;AACP,cAAc,kBAAkB,GAAG,WAAW;AAC9C;AACO;AACP,YAAY,YAAY;AACxB,QAAQ,wDAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,YAAY;AACxB,iBAAiB,wDAAqB;AACtC;AACA;AACA;AACA,kBAAkB,6CAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB,+CAAQ;AAC5B;AACA,uBAAuB,uDAAoB;AAC3C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACO;AACP,YAAY,0BAA0B;AACtC;AACA;AACO;AACP,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,2CAA2C;AAC3C;AACA;AACO;AACP;AACA;AACA,2CAA2C;AAC3C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,6BAA6B;AAC7B;AACA;AACA;AACA,oBAAoB,gDAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW,gDAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAgE;AACtF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,yDAAsB;AACzC;AACA;AACA,4BAA4B,OAAO;AACnC;AACA,uCAAuC,OAAO;AAC9C;AACA,8BAA8B,OAAO;AACrC;AACA,8BAA8B,OAAO;AACrC;AACA,+BAA+B,OAAO;AACtC;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,uCAAuC,sDAAuB;AAC9D,uBAAuB,mEAAgC;AACvD;AACA;AACA,0BAA0B,aAAa,SAAS,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChY2D;AACjB;AACgC;AACzB;AACkT;AAC/P;AACrC;AACyV;AACzU;AACxB;AACW;AACb;AAC9C;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iBAAiB,yEAAoB,CAAC,2DAAO,CAAC,4DAAQ,CAAC,gEAAK;AACnE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,+BAA+B,kEAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAW;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kEAAiB;AACjC;AACA,SAAS;AACT,KAAK;AACL;AACA,YAAY,kEAAiB;AAC7B;AACA,8BAA8B,kEAAiB;AAC/C,gCAAgC,kEAAiB;AACjD;AACA;AACA;AACA,+BAA+B,yDAAa;AAC5C;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,qBAAqB,yEAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,4DAAgB;AAC1C,qBAAqB,yEAAiB;AACtC;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB,yDAAa;AAClC,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,0BAA0B,wDAAY;AACtC,KAAK;AACL;AACA,0BAA0B,4DAAgB;AAC1C,KAAK;AACL;AACA,0BAA0B,iEAAqB;AAC/C;AACA,sCAAsC,iDAAc,mDAAmD,yDAAa,SAAS,6DAAiB;AAC9I,8BAA8B,6DAAiB;AAC/C;AACA;AACA,8BAA8B,iEAAqB;AACnD,8BAA8B,+DAAmB;AACjD;AACA,KAAK;AACL;AACA,0BAA0B,mEAAuB;AACjD,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,6BAA6B,+BAA+B;AAC5D,qBAAqB,yDAAa;AAClC,gDAAgD;AAChD,sCAAsC,wCAAwC;AAC9E,KAAK;AACL;AACA,qBAAqB,yDAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8BAA8B,wCAAwC;AACtE,8BAA8B,kEAAiB;AAC/C;AACA;AACA;AACA,qBAAqB,oEAAwB;AAC7C,0CAA0C,8EAAyB;AACnE;AACA,+BAA+B,yDAAa;AAC5C;AACA;AACA;AACA,gBAAgB,6DAAiB;AACjC,aAAa;AACb,SAAS;AACT,gBAAgB,iCAAiC,EAAE,4DAAgB;AACnE,oBAAoB,kEAAiB;AACrC,sBAAsB,kDAAe,CAAC,yDAAa,SAAS,6DAAiB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAe;AAC/B;AACA,oBAAoB,kEAAiB;AACrC,iBAAiB;AACjB,aAAa;AACb,+BAA+B,yDAAa;AAC5C;AACA;AACA,0CAA0C,+CAAY;AACtD;AACA;AACA;AACA,qBAAqB;AACrB;AACA,2CAA2C,yDAAa;AACxD;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,wBAAwB;AAC3F,6BAA6B,sDAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,yBAAyB,wDAAY;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,qBAAqB,yDAAa;AAClC,qBAAqB,2DAAe;AACpC;AACA,oCAAoC,8DAA8D;AAClG,KAAK;AACL;AACA;AACA,+BAA+B,yDAAa;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,0DAAc;AACxC,wBAAwB,yDAAa;AACrC;AACA,kBAAkB,+CAAY,CAAC,kEAAiB,wBAAwB,mBAAmB;AAC3F,KAAK;AACL;AACA,0BAA0B,yDAAa;AACvC;AACA;AACA;AACA,yBAAyB,gEAAoB;AAC7C,oCAAoC,sBAAsB;AAC1D;AACA,KAAK;AACL;AACA,0BAA0B,4DAAgB;AAC1C,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,oBAAoB,kEAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,6BAA6B,6DAAiB;AAC9C;AACA,gBAAgB,kEAAiB;AACjC;AACA;AACA;AACA,SAAS;AACT,QAAQ,kEAAiB;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,SAAS;AACT,KAAK;AACL;AACA;AACA,YAAY,kEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6DAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC,MAAM,SAAS,aAAoB,qBAAqB;AACzD;AACA;AACA;AACA,aAAa,qEAAiB,QAAQ,yDAAU,KAAK,gEAAiB;AACtE,8BAA8B,gEAAgB;AAC9C,CAAC,GAAG,qDAAO;AACX;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,QAAQ,8CAAe;AACvB,QAAQ,6EAAwB;AAChC,QAAQ,qFAAgC;AACxC,QAAQ,oFAA+B;AACvC,QAAQ,8FAAyC;AACjD,QAAQ,qFAAgC;AACxC,QAAQ,6EAAwB;AAChC,QAAQ,6FAAwC;AAChD,QAAQ,6FAAwC;AAChD,QAAQ,qFAAgC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9YA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,YAAY,+EAA+E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjDA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChB0B;AACnB;AACP;AACA;AACA;AACA;AACO;AACP,iCAAiC,cAAc,GAAG,WAAW,GAAG,UAAU;AAC1E;AACA;AACA;AACA,oBAAoB,0DAAmB,YAAY,wBAAwB,2BAA2B,cAAc,GAAG,UAAU,MAAM,cAAc,GAAG,WAAW,GAAG,UAAU;AAChL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACf0B;AAC4B;AACrB;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,6BAA6B;AACzC,YAAY,0DAAmB,CAAC,kDAAM,IAAI,2FAA2F;AACrI,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,sBAAsB;AACzD,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,qBAAqB;AACxD,YAAY,0DAAmB,CAAC,yCAAK;AACrC;;;;;;;;;;;;;;;;;;;;;;ACxEyC;AACK;AACE;AACN;AACG;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,2LAA2L;AACvM,YAAY,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0DAAmB,CAAC,wDAAY,IAAI,2JAA2J,MAAM,0DAAmB,CAAC,+CAAG,IAAI,kDAAkD;AACtS,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,QAAQ,0DAAmB,CAAC,+CAAG,IAAI,uBAAuB;AAC1D,uBAAuB,0DAAmB,SAAS,6DAA6D;AAChH;AACA;AACA;AACA,uDAAuD,yDAAiB,qBAAqB,OAAO,0DAAmB;AACvH,mCAAmC,sCAAsC,YAAY,qBAAqB;AAC1G;AACA,YAAY,0DAAmB,CAAC,+CAAG,IAAI,2FAA2F;AAClI;AACA;AACA,kDAAkD,0DAAmB,CAAC,mDAAU,IAAI,sEAAsE;AAC1J;;;;;;;;;;;;;;;;;;;;AC9G0B;AACkB;AACmB;AAC/D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,uQAAuQ;AACnR;AACA,gBAAgB,0DAAmB,CAAC,uEAAa,IAAI,0LAA0L;AAC/O;AACA,6BAA6B,0DAAmB,CAAC,qDAAW,IAAI,wWAAwW;AACxa;;;;;;;;;;;;;;;;;;;;ACnB0B;AACoB;AACJ;AAC1C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,2BAA2B;AACvC;AACA,0BAA0B,WAAW,uCAAuC,eAAe;AAC3F;AACA,YAAY,0DAAmB,CAAC,+CAAG,IAAI,oDAAoD;AAC3F,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,QAAQ,0DAAmB;AAC3B,uCAAuC,0DAAmB,CAAC,mDAAU,IAAI,gFAAgF;AACzJ;;;;;;;;;;;;;;;;;;;;AClC0B;AACoB;AACJ;AAC1C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,gDAAgD;AAC5D;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,+CAAG,IAAI,yDAAyD;AAChG,QAAQ,0DAAmB,CAAC,iDAAK,IAAI,sBAAsB;AAC3D,wDAAwD,0DAAmB,CAAC,uDAAc,IAAI,UAAU,6BAA6B,0DAAmB,CAAC,+CAAG,IAAI,wBAAwB;AACxL,YAAY,0DAAmB;AAC/B,yDAAyD,0DAAmB,CAAC,uDAAc,IAAI,UAAU,gCAAgC,0DAAmB,CAAC,mDAAU,IAAI;AAC3K;AACA,mCAAmC,uCAAuC;AAC1E;AACA,qBAAqB;AACrB,mDAAmD;AACnD;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CoC;AACN;AACQ;AACL;;;;;;;;;;;;;;;ACHjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAA2D;AACjF;AACA;;;;;;;;;;;;;;;;;;;ACjB6C;AACe;AACf;AACtC;AACP;AACA;AACA;AACA;AACA,8CAA8C,iCAAiC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gDAAQ,mCAAmC,aAAa,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA,mCAAmC,qEAAuB;AAC1D;AACA;AACA;AACA,yCAAyC,iDAAS,CAAC,yDAAiB;AACpE;AACA,yBAAyB,kBAAkB,EAAE,aAAa;AAC1D,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yCAAyC,MAAM,0BAA0B;AACvF;;;;;;;;;;;;;;;;;ACrDyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,wBAAwB;AACpC;AACA;AACA,gCAAgC,qDAAc;AAC9C;AACA,uBAAuB,mDAAY;AACnC,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL,WAAW,0DAAmB,CAAC,uDAAc;AAC7C;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP,eAAe,wBAAwB;AACvC;AACA,aAAa,4BAA4B,EAAE,KAAK,8BAA8B;AAC9E,2BAA2B,QAAQ,EAAE,OAAO;AAC5C,wBAAwB;AACxB;AACA;AACA;AACA;AACO;AACP,eAAe,wBAAwB;AACvC;AACA,aAAa,uBAAuB,EAAE,KAAK,WAAW,KAAK,sBAAsB,QAAQ;AACzF;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mEAAmE,KAAK,MAAM,yBAAyB;AACvG;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtD2F;AACrB;AAC/D;AACP;AACA;AACA;AACA,2BAA2B,mEAAiB;AAC5C;AACA;AACA;AACA,uBAAuB,+DAAa,CAAC,uCAAQ;AAC7C;AACA;AACA;AACA,4BAA4B,uCAAQ;AACpC;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA,+BAA+B,4DAAyB;AACxD;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA,gEAAgE,QAAQ;AACxE;AACA,mCAAmC,iEAA8B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK;AAC3C;AACA;AACA,+DAA+D,SAAS;AACxE;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5DO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVkC;AACA;AACJ;AACG;AACF;AACH;AACH;AACM;AACE;AACF;;;;;;;;;;;;;;;;ACTxB,8BAA8B;AACrC,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClDoC;AACM;AACnC;AACP;AACA;AACA,qBAAqB;AACrB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iDAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,sBAAsB,mDAAc;AACpC,cAAc,iDAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3CO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mCAAmC,sCAAsC,aAAa;AACtF,qCAAqC,6CAA6C;AAClF,sCAAsC,sDAAsD;AAC5F,mCAAmC,6BAA6B;AAChE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,oCAAoC;AACpC;AACA,iBAAiB;AACjB,mCAAmC;AACnC;AACA;AACA;AACA,oBAAoB,kFAAkF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AAC+C;AACxC;AACP,WAAW,6DAAM;AACjB;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCoE;AACL;AACV;AACD;AACU;AACqB;AACnB;AACJ;AACF;AACsB;AACtB;AACY;AACgK;AACxL;AACvC;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gFAAqC;AAC3E;AACA,QAAQ,4DAAc;AACtB;AACA;AACA;AACA,+BAA+B,6EAAmC;AAClE;AACA;AACA,SAAS;AACT,oCAAoC,wEAAyB;AAC7D,yBAAyB,8DAA2B;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+CAA+C;AACpF,SAAS;AACT;AACA;AACA,eAAe,iEAAW;AAC1B;AACA,SAAS;AACT;AACA;AACA,eAAe,gGAA8B;AAC7C;AACA,SAAS;AACT;AACA;AACA,eAAe,wEAAc;AAC7B;AACA;AACA,qBAAqB,iFAA8B;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB,6EAAiB;AACtC;AACA;AACA,yBAAyB,gFAA6B;AACtD;AACA,aAAa;AACb;AACA;AACA,qBAAqB,uEAAc;AACnC;AACA;AACA,yBAAyB,6EAA0B;AACnD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,2EAAgB;AAClD;AACA;AACA,qBAAqB,mFAAgC;AACrD;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,6FAAyB;AACxC;AACA;AACA,qBAAqB,sFAAmC;AACxD;AACA,SAAS;AACT;AACA;AACA,eAAe,yEAAe;AAC9B;AACA;AACA,qBAAqB,kFAA+B;AACpD,SAAS;AACT;AACA;;;;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzDmH;AACnH;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA,uCAAuC,aAAa,EAAE,KAAK;AAC3D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8BAA8B,iEAAuB,SAAS,mBAAmB;AACjF;AACA,0BAA0B,iEAAuB,+EAA+E,mBAAmB;AACnJ;AACA,qBAAqB;AACrB;AACA;AACA,2BAA2B,yEAA+B;AAC1D;AACA;AACA,sBAAsB,kEAAwB,+EAA+E,SAAS;AACtI;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDoG;AACrC;AACV;AACL;AAClB;;;;;;;;;;;;;;;;ACJ2B;AACzD;AACA;AACA;AACA;AACO;AACP,YAAY,OAAO;AACnB,YAAY,oBAAoB;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AC3BgJ;AAChJ;AACA;AACA;AACA;AACO;AACP,YAAY,0CAA0C;AACtD,IAAI,6DAAe,UAAU,4EAAkC;AAC/D,YAAY,kCAAkC;AAC9C;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;ACrC2F;AAC3F;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,OAAO;AACnB,YAAY,oBAAoB;AAChC;AACA;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;AC5B8G;AAC9G;AACA;AACA;AACA;AACO;AACP,YAAY,yBAAyB;AACrC,IAAI,6DAAe,UAAU,4EAAkC;AAC/D,YAAY,kCAAkC;AAC9C;AACA,kBAAkB,QAAQ;AAC1B;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzBuH;AACT;AAC9G;AACA;AACA;AACA;AACO;AACP,YAAY,0CAA0C;AACtD,IAAI,6DAAe,UAAU,4EAAkC;AAC/D;AACA,YAAY,kCAAkC;AAC9C;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,KAAK;AACL;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA,aAAa,mEAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA,2BAA2B,gEAAe;AAC1C,8BAA8B,mEAAkB;AAChD;AACA,yBAAyB,iEAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9CuH;AACT;AAC9G;AACA;AACA;AACA;AACO;AACP,YAAY,0CAA0C;AACtD,IAAI,6DAAe,UAAU,4EAAkC;AAC/D;AACA,YAAY,kCAAkC;AAC9C;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA,KAAK;AACL;AACA,kBAAkB,0EAAgC;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA,aAAa,mEAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA,2BAA2B,gEAAe;AAC1C,8BAA8B,mEAAkB;AAChD;AACA,yBAAyB,iEAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9C8G;AAC9G;AACA;AACA;AACA;AACO;AACP,YAAY,0CAA0C;AACtD,IAAI,6DAAe,UAAU,4EAAkC;AAC/D,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;ACrB8G;AAC9G;AACA;AACA;AACA;AACO;AACP,YAAY,yBAAyB;AACrC,IAAI,6DAAe,UAAU,4EAAkC;AAC/D,YAAY,kCAAkC;AAC9C;AACA,kBAAkB,QAAQ;AAC1B;AACA,KAAK;AACL;AACA,kBAAkB,iEAAuB;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF;AACjF;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB;AAC7D;AACA,qCAAqC,qBAAqB;AAC1D;AACA,mBAAmB,UAAU,IAAI,cAAc,EAAE,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU,IAAI,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sEAAsE,QAAQ,wBAAwB,6BAA6B;AACnI;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;AC5MA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACjaAAa;AACb;AACA;AACA;;;;;;;;;;;;;;;;;AC3GsG;AAC/F;AACP;AACA;AACA;AACO;AACP;AACA,kBAAkB,+EAAqC;AACvD,kBAAkB,wEAA8B,qBAAqB,IAAI;AACzE;AACA;;;;;;;;;;;;;;;;;ACVuD;AACJ;AAC5C;AACP;AACA,kCAAkC,mEAAc;AAChD;AACA;AACA;AACA,oBAAoB,+DAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjBgE;AACb;AAC5C;AACP;AACA,qBAAqB,+DAAe;AACpC;AACA;AACA,kBAAkB,0EAAc;AAChC;AACA;;;;;;;;;;;;;;;;;;ACT4D;AACN;AACtD;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,sEAAiB;AACxC;AACA,kCAAkC,mEAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBkD;AACc;AACU;AAC2B;AACsB;AACvD;AACU;AAClB;AACQ;AAC1B;AACgF;AACrC;AACV;AACnC;AACoB;AACO;AACd;AACQ;AAC7D;AACO;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACf;AACA,gBAAgB,kEAAkE;AAClF,cAAc,qEAAU;AACxB,aAAa,qEAAU;AACvB;AACA;AACA;AACA,QAAQ,2FAA6B;AACrC,uBAAuB,qEAAU;AACjC,cAAc,gEAAgB;AAC9B,2BAA2B,mDAAc;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT,cAAc,kFAAkB;AAChC,2BAA2B;AAC3B,wBAAwB;AACxB,6BAA6B;AAC7B,+BAA+B;AAC/B,sBAAsB;AACtB,gCAAgC;AAChC,sCAAsC;AACtC,6BAA6B,uEAAiB;AAC9C,gCAAgC,qEAAU;AAC1C,SAAS;AACT,YAAY,oEAAQ;AACpB,YAAY,+DAAe;AAC3B;AACA;AACA;AACA,cAAc,kFAAoB;AAClC,QAAQ,sFAAwB;AAChC;AACA,QAAQ,yFAAyB;AACjC,2CAA2C,mFAAsB;AACjE;AACA;AACA;AACA,SAAS;AACT,oCAAoC,yEAAe;AACnD,QAAQ,iFAAmB,GAAG,yDAAyD;AACvF;AACA,kBAAkB,2DAAa;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qBAAqB,wIAAgD;AACrE;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,qBAAqB,wIAAgD;AACrE;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,qBAAqB,wIAAgD;AACrE;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B,wDAAwD;AAClF;AACA;AACA,kBAAkB,2DAAa;AAC/B,qBAAqB,kHAAqC;AAC1D;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,oEAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0BAA0B,oEAAQ;AAClC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oEAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;AClN0B;AAC6B;AACZ;AACY;AAChD;AACP;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAmB,UAAU,2BAA2B;AACpE,QAAQ,0DAAmB,UAAU,SAAS,iBAAiB;AAC/D,QAAQ,0DAAmB,UAAU,uCAAuC;AAC5E,YAAY,0DAAmB,UAAU,kCAAkC;AAC3E,gBAAgB,0DAAmB,CAAC,iEAAK;AACzC,YAAY,0DAAmB,UAAU,4BAA4B;AACrE;AACA,gBAAg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CA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnD0B;AAC6D;AAC5B;AACJ;AACuB;AACvE;AACP,+GAA+G,wEAAQ;AACvH;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA,kBAAkB,yDAAW;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB,wEAAgB;AACvC;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAmB,CAAC,qDAAa,IAAI,cAAc;AAC/D,QAAQ,0DAAmB,CAAC,wEAAY,IAAI,8QAA8Q,wEAAgB,IAAI;AAC9U;;;;;;;;;;;;;;;;;;;;;;;ACtC4D;AACP;AAC9C;AACA;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA,gBAAgB,kEAAU;AAC1B;AACA;AACA,iCAAiC,qEAAU;AAC3C;AACA;AACA;AACA;AACA;AACA,wBAAwB,qEAAU;AAClC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,uCAAuC,cAAc;AACrD;AACA;AACA;;;;;;;;;;;;;;;;AC/CiD;AACtB;;;;;;;;;;;;;;;;ACDqD;AACzE;AACP;AACA,gBAAgB,6BAA6B;AAC7C,QAAQ,6FAA6B;AACrC;AACA;AACA;;;;;;;;;;;;;;;;;ACP0D;AACsB;AACzE;AACP;AACA,gBAAgB,sCAAsC;AACtD,6BAA6B,6FAA6B;AAC1D;AACA,QAAQ,oEAAQ;AAChB,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;ACnB6D;AACV;AACW;AACc;AACE;AACvE,qCAAqC,mDAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wDAAW;AACrD;AACA,2BAA2B,kDAAK;AAChC,yCAAyC,oFAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0FAAoB,GAAG,kDAAkD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;;;;;;;;;;;;;;;;;;;;AC9C8E;AACZ;AAClB;AACA;AACqB;AACrE;AACA;AACP;AACA;AACA,+BAA+B,sFAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oCAAoC,mEAAmB;AACvD;AACA;AACA;AACA,6GAA6G,yEAAa;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,+DAA+D,oEAAQ;AACvE;AACA;AACA,oBAAoB,oEAAQ;AAC5B;AACA,0BAA0B,mEAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iGAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAQ;AACxB;AACA;AACA,wDAAwD,oEAAQ;AAChE,iBAAiB,oEAAQ;AACzB;AACA,gBAAgB,oEAAQ;AACxB;AACA;AACA;AACA;AACA,uCAAuC,cAAc,WAAW,cAAc;AAC9E,gBAAgB,oEAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;ACrJ6C;AAC0B;AACb;AACnD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAsB;AAC/C;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA,8BAA8B,uDAAQ;AACtC;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC,mBAAmB;AACnB,SAAS;AACT;AACA,6BAA6B,mFAAsB;AACnD,QAAQ,oEAAQ;AAChB;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7B0D;AACnC;AACoC;AAC3D;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS,yBAAyB,GAAG,UAAU;AACrF;AACA;AACA,+BAA+B,oEAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oEAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAAQ;AAC9B;AACA,YAAY,oEAAQ;AACpB;AACA,gDAAgD,wCAAwC,EAAE,mEAAkB;AAC5G;AACA;AACA;AACA,+BAA+B,sDAAU;AACzC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7DyE;AAClB;AACA;AACvD;AACA;AACA;AACA;AACA;AACA;AACO;AACP,8BAA8B,mEAAc;AAC5C;AACA;AACA;AACA;AACA,qBAAqB,oEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mEAAmB;AACvB,mBAAmB,4CAA4C;AAC/D;AACA;AACA;AACA,qBAAqB,yEAAa;AAClC,SAAS;AACT,KAAK;AACL;AACO;AACP,8BAA8B,mEAAc;AAC5C;AACA;AACA;AACA;AACA,IAAI,mEAAmB;AACvB,mBAAmB,4CAA4C;AAC/D;AACA,+BAA+B;AAC/B,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;AC/C0D;AACR;AACF;AACN;AACiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,oBAAoB,sDAAS;AAC7B;AACA,YAAY,oEAAQ;AACpB;AACA;AACA;AACA,kBAAkB,oEAAQ;AAC1B;AACA;AACA;AACA;AACA,cAAc,+DAAc,CAAC,uEAAkB;AAC/C,cAAc,6DAAa;AAC3B;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACrD0D;AACnD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qCAAqC,uEAAqB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uEAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AChIO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,IAAI,EAAE,QAAQ,EAAE,QAAQ;AACzD,6BAA6B,IAAI,EAAE,qBAAqB,EAAE,QAAQ;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrF6D;AAC7D;AACA;AACA,gCAAgC,qEAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChD4F;AAC5C;AACA;AACG;AACnD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,8BAA8B,6DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,kBAAkB,oEAAQ;AAC1B;AACA;AACA;AACA;AACA,WAAW,oEAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,8BAA8B,6DAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,8BAA8B,6DAAmB;AACjD;AACA,gBAAgB,sBAAsB;AACtC,sBAAsB,oEAAQ;AAC9B,+BAA+B,iFAAiB;AAChD,2BAA2B,6EAAa;AACxC;AACA;AACA;AACA;AACA;AACA,YAAY,oEAAQ;AACpB;AACA;AACA;AACO;AACP;AACA;AACA,6BAA6B,6DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6DAAmB;AACjD,uBAAuB,6CAA6C;AACpE;AACA;AACA,kCAAkC,+DAAe;AACjD,8BAA8B,+DAAe;AAC7C,iCAAiC,+DAAe;AAChD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvFA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChB2D;AACY;AACP;AACxB;AACxC;AACA;AACA;AACA;AACA;AACA;AACO;AACP,QAAQ,uEAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kCAAkC,qDAAc;AAChD;AACA;AACA;AACA,sCAAsC,6DAAmB;AACzD,uBAAuB;AACvB,SAAS;AACT,8BAA8B,8DAAoB;AAClD,8BAA8B,+DAAgB;AAC9C,0BAA0B,2DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEiD;AACS;AACH;AACI;AACL;AACkC;AACsC;AACjE;AACF;AACpD;AACP;AACA;AACA;AACA;AACO;AACP;AACO;AACP,QAAQ,uEAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,kBAAkB,sEAAc;AAChC;AACA;AACA;AACA;AACA,QAAQ,oEAA0B;AAClC,QAAQ,wDAAiB;AACzB;AACA,kBAAkB,6DAAmB;AACrC;AACA;AACA;AACA;AACA,QAAQ,oEAAQ;AAChB;AACA;AACA;AACA;AACA;AACO;AACP,IAAI,uFAA0B;AAC9B,IAAI,oEAA0B;AAC9B,IAAI,wDAAiB;AACrB,UAAU,6DAAmB;AAC7B,8BAA8B,qDAAc;AAC5C;AACA;AACA;AACA,gBAAgB,+DAAe;AAC/B;AACA,0BAA0B,iGAA8B;AACxD,kBAAkB,oEAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oEAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,UAAU,iFAAoB;AAC9B;AACA,IAAI,qFAAwB;AAC5B;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;AC7G0D;AACf;AAC8C;AACtD;AACnC;AACA;AACA;AACA;AACA,yBAAyB,wCAAG,gCAAgC;AAC5D;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D,mCAAmC,6BAA6B;AAChE,SAAS;AACT,KAAK;AACL;AACA;AACA,yBAAyB,wCAAG,yBAAyB;AACrD;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA,+BAA+B,uDAAU;AACzC,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,yBAAyB,wCAAG,iCAAiC;AAC7D;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA,+BAA+B,uDAAU;AACzC,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2BAA2B,QAAQ,iDAAO;AACtD;AACA;AACA,aAAa;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA,+BAA+B,6DAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACO;AACP;AACA,QAAQ,4DAAU;AAClB;AACA;AACA;AACA,QAAQ,kEAAgB;AACxB;AACA;AACA;AACA,QAAQ,uEAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACvH+C;AACS;AACE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACO,2DAA2D;AAClE;AACA,qBAAqB,kEAAgB;AACrC,uBAAuB,yDAAM,wBAAwB,kEAA6B;AAClF;AACA;AACA;AACA,yBAAyB,kEAAgB;AACzC;AACA;AACA,kBAAkB,kEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kEAAgB;AAClC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wDAAwD,iBAAiB,WAAW,KAAK;AACzF;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACO;AACP;AACA,8CAA8C,6BAA6B,WAAW,qBAAqB;AAC3G;AACA;AACA;;;;;;;;;;;;;;;;;ACrDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@anaconda/assistant/../../lib/assistant-components/lib/AssistantComponentContext.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/api/assistantRequestGenerator.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/api/feedback.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/api/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/BaseElement.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Button.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Div.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Dropdown.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Form.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Option.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Popup.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Select.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/Style.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/baseElementUtils.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/base-elements/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/AddContextPopup.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/ChatInput.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/ChatPanelFooter.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/ErrorPopup.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/Footer.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/Header.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/MessageButtons.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/SelectContext.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/SelectDataframe.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/UserMessage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/feedback/CompletedThumbs.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/feedback/FeedbackButton.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/feedback/FeedbackButtonsWrapper.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/feedback/FeedbackModal.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/feedback/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/response/ActiveMessage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/response/CodeBlock.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/response/CompletedMessage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/response/ErrorMessage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/response/ResponseBlocks.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/response/TextBlock.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/chat-elements/response/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/contents/TermsAndConditions.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/contents/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/icons.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/HistoryPage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/HomeScreen.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/SettingsPage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/TermsAndConditionsPage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/childFixer.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/pages/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/store/AssistantStore.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/store/home-screen-state-fns.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/store/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/store/rehydration-utils.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/store/state-fns.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/store/store.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/store/suggestions-fns.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/store/test-storage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/style/styleUtils.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/suggestion-elements/CodeOption.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/suggestion-elements/CodeOptions.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/suggestion-elements/GenerateSuggestions.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/suggestion-elements/LoadADataframe.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/suggestion-elements/SelectChatStarter.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/suggestion-elements/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/types.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/CodeCleaner.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/ContextMessage.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/RemoveAfterHide.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/SpecialPrefixes.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/contextUtils.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/errors.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/index.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/summaryUtils.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/testStoreUtils.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/testUtils.js","webpack://@anaconda/assistant/../../lib/assistant-components/lib/utils/tokenCounter.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/accessToken.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/assistant.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/environmentTypes.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/http.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/index.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/fetchAccess.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/fetchSuggestions.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/fetchTermsAndConditions.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/proFetchSummary.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/proStreamResponse.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/streamResponse.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/submitCodeExecutionResult.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/methods/submitFeedback.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/publicTypes.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/responseTokens.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/transformations.js","webpack://@anaconda/assistant/../../lib/assistant-sdk/lib/validators.js","webpack://@anaconda/assistant/../../lib/assistant/lib/api/access.js","webpack://@anaconda/assistant/../../lib/assistant/lib/api/terms-and-conditions-version.js","webpack://@anaconda/assistant/../../lib/assistant/lib/assistant-sdk.js","webpack://@anaconda/assistant/../../lib/assistant/lib/assistant_plugin.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/access-screen.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-button.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-in-cell-widget.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-login.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-panel-container.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-panel-widget.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/assistant-panel.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/back-button.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/chat-messages.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/chat-panel.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/error-screen.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/icon.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/notebook-error-helper.js","webpack://@anaconda/assistant/../../lib/assistant/lib/components/settings.js","webpack://@anaconda/assistant/../../lib/assistant/lib/config.js","webpack://@anaconda/assistant/../../lib/assistant/lib/index.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/activateAssistantWithCodeSelection.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/activateContextMenuAssistantWithCodeSelection.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/assistantSidebarWidget.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/extension-load-utils.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/fetchDiskState.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/getSelectedTextAndUpdateStore.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/initializeAssistant.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/syncDiskState.js","webpack://@anaconda/assistant/../../lib/assistant/lib/jupyter/syncStateDebounced.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/ChatStarters.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/dataframe-checker.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/environmentType.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/fileSummarizationUtils.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/getCookies.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/nucleus/account.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/nucleus/accountUtils.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/nucleus/auth.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/request.js","webpack://@anaconda/assistant/../../lib/assistant/lib/utils/text-selection-utils.js"],"sourcesContent":["import * as React from 'react';\n/**\n * Context for AssistantComponent\n * - Used to pass parentClassName to children\n * @alpha\n */\nexport const AssistantComponentContext = React.createContext({});\n","import { attachmentMessagePrefix, chatMessagesUnderLimit } from '../utils';\nexport function generateRequest(activeChat, activeNotebook) {\n    if (!activeNotebook?.activeChatKey ||\n        !activeChat ||\n        !hasActiveCodeResponse(activeChat.inProgress)) {\n        throw new Error('No active request');\n    }\n    return {\n        session: activeChat.session,\n        // If there is a summary in the active chat,\n        // And if the total tokens of the chat + the summary tokens exceed the max tokens of the model,\n        // we remove the oldest messages until the total tokens are under the limit.\n        messages: cleanSpecialPrefixes(chatMessagesUnderLimit(activeChat)),\n        chatContext: convertToSDKContext(activeChat.context),\n        responseMessageId: activeChat.inProgress.message_id\n    };\n}\nexport function cleanSpecialPrefixes(messages) {\n    const prefixes = [attachmentMessagePrefix];\n    return messages.map(message => {\n        const content = prefixes.reduce((acc, prefix) => acc.replace(prefix, ''), message.content);\n        return { ...message, content };\n    });\n}\nexport function hasActiveCodeResponse(active) {\n    return active?.type === 'active';\n}\nfunction convertToSDKContext(context) {\n    const variables = convertVariables(context);\n    return { type: context.type, variables };\n}\nfunction convertVariables(context) {\n    switch (context.type) {\n        case 'graph-dataframe':\n            return {\n                name: context.variables.dataframe.name,\n                dtypes_str: context.variables.dataframe.dtypesStr\n            };\n        case 'describe-dataframe':\n            return {\n                name: context.variables.dataframe.name,\n                dtypes_str: context.variables.dataframe.dtypesStr\n            };\n        case 'explain-code':\n            return {\n                active_code_cell: context.variables.active_cell_code,\n                selected_code: context.variables.selected_code\n            };\n        case 'comment-code':\n            return {\n                active_code_cell: context.variables.active_cell_code,\n                selected_code: context.variables.selected_code\n            };\n        case 'improve-code':\n            return {\n                active_code_cell: context.variables.active_cell_code,\n                selected_code: context.variables.selected_code\n            };\n        case 'debug-error':\n            return context.variables;\n        case 'suggestions-chat':\n            return context.variables;\n        case 'default-python':\n            return {};\n        default:\n            return context.variables;\n    }\n}\n","export async function postFeedback(assistantSdk, request) {\n    try {\n        return await assistantSdk.submitFeedback(request);\n    }\n    catch (e) {\n        console.error('Error posting feedback: ', e);\n    }\n}\nexport async function postExecutionResult(assistantSdk, executingCode, success, error) {\n    try {\n        return await assistantSdk.submitCodeExecutionResult(createExecutionResult(executingCode, success, error));\n    }\n    catch (e) {\n        console.error('Error posting feedback: ', e);\n    }\n}\nfunction createExecutionResult(executingCode, success, error) {\n    return {\n        session: executingCode.session,\n        executionResult: {\n            code: executingCode.code,\n            success,\n            messageId: executingCode.activeMessageId,\n            error: error ? { message: error.message, stack: error.stack, name: error.name } : null\n        }\n    };\n}\n","export * from './feedback';\nexport * from './assistantRequestGenerator';\n","import * as React from 'react';\nimport { AssistantComponentContext } from '../AssistantComponentContext';\nimport { rootClassName } from '../style/styleUtils';\n/**\n * Assistant BaseElement component.\n * - Adds a class name to the div based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function BaseElement(props) {\n    const { parentClassName, replaceChildren } = React.useContext(AssistantComponentContext);\n    const Tag = props.as || 'div';\n    const MainContainer = props.mainContainer || false;\n    const parentPrefix = parentClassName && !MainContainer ? `${parentClassName}-` : '';\n    const asChildName = props.asChildName || Tag;\n    const newParentClassName = `${parentPrefix}${asChildName}`;\n    const childClassName = `${rootClassName}-${newParentClassName}`;\n    const replacement = replaceChildren?.(childClassName);\n    if (replacement) {\n        return replacement;\n    }\n    // Remove mainContainer, asChildName and as from props\n    const { mainContainer, asChildName: _, as: __, ...cleanProps } = props;\n    // Add the child class name to the className prop if it exists\n    const addedClassName = props.className ? ` ${props.className}` : '';\n    return (React.createElement(AssistantComponentContext.Provider, { value: {\n            parentClassName: newParentClassName,\n            replaceChildren\n        } },\n        React.createElement(Tag, { ...cleanProps, className: childClassName + addedClassName })));\n}\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Button component.\n * - Adds a class name to the div based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Button(props) {\n    return React.createElement(BaseElement, { ...props, as: \"button\" });\n}\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Div component.\n * - Adds a class name to the div based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Div(props) {\n    return React.createElement(BaseElement, { ...props, as: \"div\" });\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Div } from './Div';\nimport { Button } from './Button';\nimport { Style } from './Style';\n/**\n * Style for the Dropdown component.\n * @alpha\n */\nexport const styleOfDropdown = `\n\n[class^='anaconda-assistant-'][class$='-dropdown'],\n[class^='anaconda-assistant'][class*='-dropdown '] {\n  background-color: transparent;\n  border-radius: 4px;\n  border: 1px solid #dfe3e7;\n  padding: 0;\n}\n\n[class^='anaconda-assistant'][class$='-dropdown'],\n[class^='anaconda-assistant'][class*='-dropdown is-open '],\n[class^='anaconda-assistant'][class$='-dropdown is-open'] {\n  position: relative;\n}\n\n[class^='anaconda-assistant-'][class$='-dropdown-selection'] {\n  display: flex;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  align-items: center;\n  padding: 7px 30px 7px 12px;\n  cursor: pointer;\n  min-width: 200px;\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n  outline: none;\n  color: var(--as-main-font-color, #2c303a);\n}\n\n[class^='anaconda-assistant-'][class$='-dropdown-selection'] [class^='anaconda-assistant-'][class$='-dropdown-selection-arrow'] {\n  border-color: #999 transparent transparent;\n  border-style: solid;\n  border-width: 5px 5px 0;\n  content: ' ';\n  display: block;\n  height: 0;\n  margin-top: -ceil(2.5);\n  position: absolute;\n  right: 10px;\n  top: 14px;\n  width: 0;\n}\n\n[class^='anaconda-assistant-'][class*='-dropdown is-open '] [class^='anaconda-assistant-'][class$='-dropdown-selection'] [class^='anaconda-assistant-'][class$='-dropdown-selection-arrow'],\n[class^='anaconda-assistant-'][class$='-dropdown is-open'] [class^='anaconda-assistant-'][class$='-dropdown-selection'] [class^='anaconda-assistant-'][class$='-dropdown-selection-arrow'] {\n  border-color: transparent transparent #999;\n  border-width: 0 5px 5px;\n}\n\n[class^='anaconda-assistant-'][class$='-dropdown-menu'],\n[class^='anaconda-assistant-'][class$='-dropdown-menu is-open'] {\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n  margin-top: -1px;\n  overflow-y: auto;\n  position: absolute;\n  top: 100%;\n  width: 100%;\n  z-index: 1000;\n  -webkit-overflow-scrolling: touch;\n  border-radius: 4px;\n  border: 1px solid #dfe3e7;\n  background: #fff;\n  box-shadow: 0px 4px 12px 0px rgba(0, 0, 0, 0.25);\n  min-width: 200px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n  color: #2c303a;\n  display: none;\n}\n\n[class^='anaconda-assistant-'][class$='-dropdown-menu is-open'] {\n  display: block;\n}\n\n[class^='anaconda-assistant-'][class$='-dropdown-menu-option'],\n[class^='anaconda-assistant-'][class*='-dropdown-menu-option'] {\n  box-sizing: border-box;\n  cursor: pointer;\n  display: block;\n  padding: 10px;\n  background: var(--as-main-bg-color-secondary, #fff);\n  color: var(--as-main-font-color, #2c303a);\n  border: none;\n  width: 100%;\n  text-align: left;\n}\n\n[class^='anaconda-assistant-'][class*='-dropdown-menu-option']:last-child {\n  border-bottom-right-radius: 2px;\n  border-bottom-left-radius: 2px;\n}\n\n[class^='anaconda-assistant-'][class*='-dropdown-menu-option'] {\n  &:hover,\n  &:focus {\n    background-color: var(--as-main-bg-color-third, #ced2d9);\n  }\n}\n\n[class^='anaconda-assistant-'][class*='-dropdown-menu-option is-selected'] {\n  background-color: #0cca4a;\n}\n`;\n/**\n * Dropdown component.\n * @alpha\n */\nexport const Dropdown = (props) => {\n    const { className, defaultSelection, options, selectionChanged } = props;\n    const [selectedOption, setSelectedOption] = useState(defaultSelection ?? options[0]);\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const dropdownRef = useRef(null);\n    const handleChange = (option) => {\n        setSelectedOption(option);\n        selectionChanged(option);\n    };\n    const handleKeyDown = (e) => {\n        if (e.key === 'Escape') {\n            setDropdownOpen(false);\n        }\n    };\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setDropdownOpen(false);\n            }\n        }\n        if (dropdownOpen) {\n            document.addEventListener('mousedown', handleClickOutside);\n        }\n        else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [dropdownOpen]);\n    return (React.createElement(\"div\", { ref: dropdownRef, onKeyDown: handleKeyDown },\n        React.createElement(Button, { \"data-testid\": \"anaconda-assistant-dropdown\", asChildName: \"dropdown\", role: \"button\", className: `${dropdownOpen ? 'is-open' : ''} ${className}`, onClick: () => {\n                setDropdownOpen(!dropdownOpen);\n            } },\n            React.createElement(Style, { asChildName: \"style\" }, styleOfDropdown),\n            React.createElement(Div, { asChildName: \"selection\" },\n                React.createElement(Div, { asChildName: \"label\" }, selectedOption.label),\n                React.createElement(Div, { asChildName: \"arrow\" },\n                    React.createElement(\"span\", null))),\n            React.createElement(Div, { asChildName: \"menu\", className: dropdownOpen ? 'is-open' : '' }, options.map((option) => (React.createElement(Button, { key: option.value, asChildName: `option ${selectedOption.value === option.value ? 'is-selected' : ''}`, role: \"option\", onClick: () => handleChange(option) }, option.label)))))));\n};\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Form component.\n * - Adds a class name to the form element based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Form(props) {\n    return React.createElement(BaseElement, { ...props, as: \"form\" });\n}\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Option component.\n * - Adds a class name to the option based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Option(props) {\n    return React.createElement(BaseElement, { ...props, as: \"option\" });\n}\n","import React from 'react';\nimport { animated, useSpring } from '@react-spring/web';\nimport { RemoveAfter } from '../utils/RemoveAfterHide';\nimport { Icons } from '../icons';\nimport { Button, Div, Style } from './index';\n/**\n * Style for the Popup component.\n * @alpha\n */\nconst styleOfPopup = `\n.anaconda-assistant-popup {\n  position: fixed;\n  width: 480px;\n  right: 32px;\n  bottom: 80px;\n}\n\n.as-animated-popup {\n  position: absolute;\n  border: 2px solid rgba(219, 105, 112, 0.4);\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  background: var(--as-main-bg-color-primary, #fff);\n  z-index: 1;\n}\n\n.anaconda-assistant-popup-container {\n  padding: 0 16px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.anaconda-assistant-popup-container-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 13px;\n  font-weight: bold;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  color: var(--as-main-font-color-black, #212121);\n}\n\n.anaconda-assistant-popup-container-header-logo {\n  display: flex;\n  align-items: center;\n  color: var(--as-main-font-color, #2c303a);\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n}\n\n.anaconda-assistant-popup-container-header-logo-container {\n  background: #4fab4f;\n  border-radius: 4px;\n  margin-right: 10px;\n  padding: 8px 4px 5px 4px;\n}\n\n.anaconda-assistant-popup-container-header-logo-container-icon {\n  width: 20px;\n  height: 16px;\n  color: white;\n}\n\n.anaconda-assistant-popup-container-header-close-icon {\n  color: var(--as-main-font-color-black, #212121);\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  svg {\n    height: 14px;\n    font-weight: 700;\n  }\n}\n\n.anaconda-assistant-popup-container-warning {\n  margin-bottom: 20px;\n  color: #757575;\n  background: #fcfccc;\n  padding: 10px;\n  font-size: 11px;\n  border-radius: 4px;\n  border: 1px solid #ebebbe;\n  display: flex;\n}\n\n.anaconda-assistant-popup-container-warning-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0 12px 0 3px;\n}\n\n.anaconda-assistant-popup-container-warning-container-icon {\n  width: 23px;\n  color: #ffba0a;\n}\n\n.anaconda-assistant-popup-container-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-bottom: 15px;\n}\n\n.anaconda-assistant-popup-container-buttons-wrapper {\n  display: flex;\n  align-items: center;\n  font-size: 13px;\n  font-weight: 590;\n  letter-spacing: 0.02em;\n}\n\n.anaconda-assistant-popup-container-buttons-wrapper-container {\n  width: 26px;\n  height: 26px;\n  background: rgba(0, 178, 255, 0.1);\n  border-radius: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 10px;\n}\n\n.anaconda-assistant-popup-container-buttons-wrapper-container-icon {\n  width: 13px;\n  color: #00b2ff;\n}\n\n.anaconda-assistant-popup-container-buttons-button-icon {\n  color: var(--as-main-font-color-secondary, rgba(33, 33, 33, 0.5));\n  width: 8px;\n  height: 12px;\n}\n\n.anaconda-assistant-popup-container-buttons-button:hover {\n  background: var(--as-background-hover, #eaeaea);\n  color: var(--as-main-font-color-black, rgba(0, 0, 0, 0.87));\n}\n\n.anaconda-assistant-popup-container-buttons-button  {\n  background: var(--as-main-bg-color-primary, white);\n  border: 1px solid var(--as-border-color-light, #e6e6e6);\n}\n`;\n/**\n * Popup component.\n * @alpha\n */\nexport const Popup = (props) => {\n    const { width, headerTitle, warningMessage, bodyTitle, body, dialogClosed } = props;\n    let { show } = props;\n    const animationProps = useSpring({\n        right: 10,\n        bottom: show ? 70 : -275,\n        width: width ? width - 80 : 360\n    });\n    function closeDialog() {\n        show = false;\n        dialogClosed();\n    }\n    return (React.createElement(RemoveAfter, { delay: 500, show: show },\n        React.createElement(Div, { asChildName: \"popup\", style: show ? { zIndex: 2 } : {} },\n            React.createElement(Style, { asChildName: \"style\" }, styleOfPopup),\n            React.createElement(animated.div, { className: \"as-animated-popup\", style: animationProps },\n                React.createElement(Div, { asChildName: \"container\" },\n                    React.createElement(Div, { asChildName: \"header\" },\n                        React.createElement(Div, { asChildName: \"logo\" },\n                            React.createElement(Div, { asChildName: \"container\" },\n                                React.createElement(Div, { asChildName: \"icon\" },\n                                    React.createElement(Icons.ChatBot, null))),\n                            React.createElement(Div, { asChildName: \"title\" }, headerTitle ?? 'Anaconda Assistant')),\n                        React.createElement(Button, { asChildName: \"close-icon\", onClick: closeDialog, \"aria-label\": \"Close dialog\" },\n                            React.createElement(Icons.Close, null))),\n                    React.createElement(Div, { asChildName: \"warning\" },\n                        React.createElement(Div, { asChildName: \"container\" },\n                            React.createElement(Div, { asChildName: \"icon\" },\n                                React.createElement(Icons.Warning, null))),\n                        React.createElement(Div, { asChildName: \"message\" }, warningMessage)),\n                    React.createElement(Div, { asChildName: \"buttons\" },\n                        React.createElement(Div, { asChildName: \"wrapper\" },\n                            React.createElement(Div, { asChildName: \"container\" },\n                                React.createElement(Div, { asChildName: \"icon\" },\n                                    React.createElement(Icons.Code, null))),\n                            React.createElement(Div, { asChildName: \"title\" }, bodyTitle)),\n                        body))))));\n};\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Select component.\n * - Adds a class name to the select based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Select(props) {\n    return React.createElement(BaseElement, { ...props, as: \"select\" });\n}\n","import * as React from 'react';\nimport { BaseElement } from './BaseElement';\n/**\n * Assistant Style component.\n * - Adds a class name to the div based on the parent component's class name.\n * - Allows for a custom replacement component to be provided by the context.\n * @alpha\n */\nexport function Style(props) {\n    return React.createElement(BaseElement, { ...props, as: \"style\" });\n}\n","/**\n * Utility function to match a child name with a callback\n * @alpha\n */\nexport function matchChildName(name, callback) {\n    return childClassName => {\n        if (childClassName === name ||\n            childClassName.lastIndexOf(`-${name}`) !== -1 ||\n            childClassName.match(name)) {\n            return callback(childClassName);\n        }\n        return null;\n    };\n}\n/**\n * Utility function to match multiple child names with callbacks\n * @alpha\n */\nexport function matchMultipleChildNames(...childNamePairs) {\n    return childClassName => {\n        for (const childNamePair of childNamePairs) {\n            const [name, callback] = childNamePair;\n            const match = matchChildName(name, callback)(childClassName);\n            if (match) {\n                return match;\n            }\n        }\n        return null;\n    };\n}\n","export * from './BaseElement';\nexport * from './Button';\nexport * from './Div';\nexport * from './baseElementUtils';\nexport * from './Popup';\nexport * from './Option';\nexport * from './Select';\nexport * from './Style';\nexport * from './Dropdown';\n","import React, { useEffect } from 'react';\nimport { attachmentDataframeInstruction } from '../utils';\nimport { SelectDataFrame } from './SelectDataframe';\nimport { Popup } from '../base-elements';\n/**\n * Add Context Popup component.\n * @alpha\n */\nexport const AddContextPopup = (props) => {\n    const { width, onAddContext, dataFrames, activeChatAvailable, setAttachContextOpen, attachContextOpen, makeChatRequest, enableDataCollection } = props;\n    useEffect(() => {\n        if (!dataFrames?.length) {\n            setAttachContextOpen(false);\n        }\n    }, [dataFrames, setAttachContextOpen]);\n    function closeExplainDialog() {\n        setAttachContextOpen(false);\n    }\n    return (React.createElement(Popup, { width: width, show: attachContextOpen, headerTitle: 'Anaconda Assistant', warningMessage: `By attaching a dataframe to the conversation, the dataframe column names and types will be\n                  sent to ${enableDataCollection ? 'the Anaconda Servers and to ' : ''}\n                  OpenAI.`, bodyTitle: 'Select Dataframe', body: React.createElement(SelectDataFrame, { makeChatRequest: makeChatRequest, dataFrames: dataFrames, buttonLabel: activeChatAvailable\n                ? 'Attach dataframe to current chat'\n                : 'Attach dataframe to new chat', onSubmit: dataframe => {\n                setAttachContextOpen(false);\n                const instruction = attachmentDataframeInstruction(dataframe.name, dataframe.cols);\n                onAddContext(instruction);\n            } }), dialogClosed: closeExplainDialog }));\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { subscribe } from '@github/paste-markdown';\nimport { useEffectOnce } from 'usehooks-ts';\nimport { Icons } from '../icons';\nimport { Div } from '../base-elements/Div';\nimport { Style } from '../base-elements/Style';\nimport { Button } from '../base-elements/Button';\nimport { RichTextarea, createRegexRenderer } from 'rich-textarea';\nimport { Tooltip } from 'react-tooltip';\nimport { getAssistantStore } from '../store';\n/**\n * Style for the ChatInput component.\n * @alpha\n */\nexport const styleOfChatInput = `\n.anaconda-assistant-chat-input {\n  --background-color: var(--as-main-bg-color-secondary, #fff);\n  --border-color: var(--as-border-color, #2c303a);\n  --text-color: var(--as-main-font-color, #2c303a);\n  --text-color-disabled: #f00;\n  --button-bg-color-default: #0cca4a;\n  --button-color-default: white;\n  --button-bg-color-hover: #4fab4f;\n  --button-color-hover: #06262d;\n  --button-bg-color-disabled: rgba(67, 176, 73, 0.50);\n  display: flex;\n  position: relative;\n}\n\n.anaconda-assistant-chat-input form {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 35px;\n  max-height: 215px;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  background: var(--background-color);\n  z-index: 100;\n}\n\n.anaconda-assistant-chat-input form textarea {\n  color: var(--text-color);\n  border: none;\n  resize: none;\n  flex: 1;\n  font-family: 'Inter', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 20px;\n  min-height: 20px;\n  max-height: 200px;\n  background-color: red;\n\n}\n\n.anaconda-assistant-chat-input form textarea:disabled {\n  cursor: not-allowed;\n}\n\n.anaconda-assistant-chat-input form textarea::placeholder:disabled {\n  cursor: not-allowed;\n  color: var(--text-color-disabled);\n}\n\n.anaconda-assistant-chat-input form textarea::placeholder {\n  color: #6a718a;\n  font-style: italic;\n}\n\n.anaconda-assistant-chat-input-submit-button,\n.anaconda-assistant-chat-input-stop-button {\n  border: none;\n  background: var(--button-bg-color-default);\n  color: var(--button-color-default);\n  border-radius: 4px;\n  cursor: pointer;\n  height: calc(100% - 16px);\n  padding: 7px 10px;\n  z-index: 10;\n  margin-left: -48px;\n}\n.anaconda-assistant-chat-input-submit-button {\n  &:hover,\n  &:focus {\n    background: var(--button-bg-color-hover);\n    color: var(--button-color-hover);\n  }\n}\n\n.anaconda-assistant-chat-input-stop-button {\n  background: #6A718A;\n}\n\n.anaconda-assistant-chat-input-submit-button-send-icon {\n  width: 20px;\n}\n\n[class^='anaconda-assistant-'][class$='-context-selector'],\n[class^='anaconda-assistant-'][class$='-context-selector is-open'] {\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n  margin-bottom: -1px;\n  margin-left: -16px;\n  position: absolute;\n  bottom: 100%;\n  width: 100%;\n  z-index: 1000;\n  -webkit-overflow-scrolling: touch;\n  border-radius: 4px;\n  border: 1px solid #dfe3e7;\n  background: #fff;\n  box-shadow: 0px 4px 12px 0px rgba(0, 0, 0, 0.25);\n  min-width: 200px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n  color: #2c303a;\n  display: none;\n}\n\n[class^='anaconda-assistant-'][class$='-context-selector is-open'] {\n  display: block;\n}\n\n[class^='anaconda-assistant-'][class$='-context-selector-list'] {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n[class^='anaconda-assistant-'][class$='-context-selector-list']::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 7px;\n}\n\n[class^='anaconda-assistant-'][class$='-context-selector-list']::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: #ced2d9;\n  margin: 2px;\n}\n\n[class^='anaconda-assistant-'][class*='-context-selector-list-option'],\n[class^='anaconda-assistant-'][class$='-context-selector-title'] {\n  box-sizing: border-box;\n  display: flex;\n  padding: 8px 10px;\n  flex-direction: row;\n  align-items: center;\n}\n\n[class^='anaconda-assistant-'][class$='-context-selector-title'] {\n  display: flex;\n  flex-direction: column;\n  background: #e9e6fe;\n  border-radius: 8px;\n  color: #2C303A;\n  font-family: Inter;\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 20px;\n  margin: 8px;\n}\n\n[class^='anaconda-assistant-'][class*='-context-selector-list-label'] {\n  flex-grow: 1;\n}\n[class^='anaconda-assistant-'][class*='-context-selector-list-description'] {\n  display: none;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: min-content;\n}\n\n[class^='anaconda-assistant-'][class*='-context-selector-list-option']:last-child {\n  border-bottom-right-radius: 2px;\n  border-bottom-left-radius: 2px;\n}\n\n[class^='anaconda-assistant-'][class*='-context-selector-list-option']:focus-visible {\n  outline: none;\n}\n\n\n[class^='anaconda-assistant-'][class*='-context-selector-list-option']:focus,\n[class^='anaconda-assistant-'][class*='-context-selector-list-option']:hover {\n  background-color: #ced2d9;\n}\n\n[class^='anaconda-assistant-'][class*='-context-selector-list-option']:focus [class^='anaconda-assistant-'][class*='-context-selector-list-description'],\n[class^='anaconda-assistant-'][class*='-context-selector-list-option']:hover [class^='anaconda-assistant-'][class*='-context-selector-list-description']{\n  display: flex;\n}\n\n[class^='anaconda-assistant-'][class*='-context-selector-list-option is-selected'] {\n  background-color: #0cca4a;\n}\n`;\n/**\n * Chat Input component.\n * @alpha\n */\nexport const ChatInput = React.memo((props) => {\n    const { msg, setMsg, sendMessage, loading, onInstructionUpdate, placeholder, maxTokens, setHidePopups, contextSelectorOptions = [] } = props;\n    const contextSelectorFeatureFlagEnabled = getAssistantStore().getFeatureFlagBool('assistant-show-context-selector', false);\n    const placeholderIfLoading = loading ? 'Press \"Enter\" to stop the response' : placeholder;\n    const textAreaID = 'as-instruction-input-textarea';\n    const textareaRef = useRef(null);\n    // const contextSelectorRef = useRef<HTMLDivElement>(null);\n    // Tokens are generally 3 characters long, so we limit the input to 1/3 of the total limit\n    const maxTextareaInputLength = maxTokens;\n    const [contextSelectorEnabled, setContextSelectorEnabled] = useState(false);\n    const [contextSelectorFilter, setContextSelectorFilter] = useState('');\n    const [contextSelectorOptionsFiltered, setContextSelectorOptionsFiltered] = useState(contextSelectorOptions);\n    const [currentCursorPosition, setCurrentCursorPosition] = useState(0);\n    const contextOptionsRefs = [];\n    const [contextOptionsIndex, setContextOptionsIndex] = useState(0);\n    const contextDescriptionMap = contextSelectorOptions.reduce((map, option) => {\n        map[option.value] = option.description;\n        return map;\n    }, {});\n    const contextStringRenderer = createRegexRenderer([\n        [\n            /@([^\\s]+)/g,\n            ({ key, value }) => (React.createElement(\"span\", { key: key, style: Object.keys(contextDescriptionMap).some(context => context === value.replace('@', ''))\n                    ? { color: '#6c5af6' }\n                    : {} }, value))\n        ]\n    ]);\n    const handleSubmit = useCallback((e) => {\n        if (msg.trim() !== '') {\n            sendMessage(msg.trim());\n        }\n        e.preventDefault();\n    }, [msg, sendMessage]);\n    const handleTextareaKeyDown = useCallback((e) => {\n        const isCharacterKey = e.key.length === 1 && e.key.match(/\\S/);\n        if (e.key === 'Enter' && !e.shiftKey) {\n            handleSubmit(e);\n            setHidePopups(true);\n            setContextSelectorEnabled(false);\n            setContextSelectorFilter('');\n        }\n        else if (e.key === '@' && contextSelectorFeatureFlagEnabled) {\n            setContextSelectorFilter('');\n            setContextSelectorEnabled(true);\n        }\n        else if ((e.key === ' ' || e.key === 'Tab' || e.key === 'Escape') &&\n            contextSelectorFeatureFlagEnabled) {\n            setContextSelectorEnabled(false);\n            setContextSelectorFilter('');\n        }\n        else {\n            if (contextSelectorEnabled && contextSelectorFeatureFlagEnabled) {\n                if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n                    e.preventDefault();\n                    setCurrentCursorPosition(textareaRef.current?.selectionStart ?? 0);\n                    contextOptionsRefs[0]?.focus();\n                }\n                if (isCharacterKey) {\n                    setContextSelectorFilter(`${contextSelectorFilter}${e.key}`);\n                }\n                if (e.key === ' ' || e.key === 'Tab') {\n                    setContextSelectorEnabled(false);\n                    setContextSelectorFilter('');\n                }\n                else if (e.key === 'Backspace') {\n                    if (contextSelectorFilter.length > 0) {\n                        setContextSelectorFilter(contextSelectorFilter.slice(0, -1));\n                    }\n                    else {\n                        setContextSelectorEnabled(false);\n                        setContextSelectorFilter('');\n                    }\n                }\n            }\n        }\n    }, [handleSubmit, setHidePopups]);\n    const handleTextareaOnChange = useCallback((e) => {\n        const nextMsg = textareaRef.current?.value.slice(0, maxTextareaInputLength + 1) || '';\n        onInstructionUpdate(nextMsg);\n        setMsg(nextMsg);\n    }, [onInstructionUpdate, setMsg, maxTextareaInputLength]);\n    const handleContextSelection = (option, thisPosition = textareaRef.current?.selectionStart) => {\n        const cursorPosition = thisPosition;\n        const textBeforeCursor = msg.slice(0, cursorPosition);\n        const textAfterCursor = msg.slice(cursorPosition);\n        const lastAtSignIndex = textBeforeCursor.lastIndexOf('@') + 1;\n        const newTextBeforeCursor = textBeforeCursor.slice(0, lastAtSignIndex);\n        const newText = newTextBeforeCursor + option.value + textAfterCursor;\n        setMsg(newText);\n        setContextSelectorEnabled(false);\n        textareaRef.current?.focus();\n    };\n    const handleContextSelectorKeyDown = useCallback((e, option, index, length) => {\n        e.preventDefault();\n        if (e.key === 'Enter' && !e.shiftKey) {\n            handleContextSelection(option, currentCursorPosition);\n        }\n        else if (length > 0 && e.key === 'ArrowUp') {\n            setContextOptionsIndex(Math.max(0, index - 1));\n        }\n        else if (length > 0 && e.key === 'ArrowDown') {\n            setContextOptionsIndex(Math.min(index + 1, length - 1));\n        }\n        else if (e.key === 'Escape') {\n            setContextSelectorEnabled(false);\n            textareaRef.current?.focus();\n        }\n    }, [currentCursorPosition, handleContextSelection]);\n    const handleContextOptionFocus = (index) => {\n        setContextOptionsIndex(index);\n    };\n    useEffectOnce(() => {\n        if (textareaRef.current) {\n            subscribe(textareaRef.current);\n        }\n    });\n    // Focus the textarea when the chat stops loading\n    useEffect(() => {\n        if (!loading) {\n            if (textareaRef.current) {\n                textareaRef.current.focus();\n            }\n        }\n    }, [loading, textAreaID]);\n    useEffect(() => {\n        if (contextSelectorOptions.length > 0) {\n            setContextSelectorOptionsFiltered(contextSelectorOptions.filter(option => option.value.toLowerCase().startsWith(contextSelectorFilter.toLowerCase())));\n        }\n    }, [contextSelectorFilter, contextSelectorOptions]);\n    useEffect(() => {\n        contextOptionsRefs[contextOptionsIndex]?.focus();\n    }, [contextOptionsIndex]);\n    // The following lines make the textarea grow with the text\n    let textareaScrollHeight = 0;\n    let formHeight = 0;\n    let formMarginTop = 0;\n    const maxTextareaHeight = 200;\n    const minTextareaHeight = 53;\n    if (!msg) {\n        textareaScrollHeight = 0;\n        formHeight = minTextareaHeight;\n        formMarginTop = 0;\n    }\n    else {\n        textareaScrollHeight = textareaRef.current?.scrollHeight || 0;\n        formHeight = textareaScrollHeight;\n        formMarginTop = formHeight >= minTextareaHeight ? minTextareaHeight - formHeight : 0;\n        if (formMarginTop < -(maxTextareaHeight - minTextareaHeight)) {\n            formMarginTop = -(maxTextareaHeight - minTextareaHeight);\n        }\n    }\n    return (React.createElement(Div, { asChildName: \"chat-input\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfChatInput),\n        React.createElement(\"form\", { style: {\n                height: formHeight,\n                marginTop: formMarginTop,\n                maxHeight: maxTextareaHeight\n            }, onSubmit: handleSubmit },\n            React.createElement(RichTextarea, { ref: textareaRef, style: {\n                    width: '100%',\n                    height: formHeight,\n                    minHeight: '53px',\n                    padding: '16px 56px 16px 16px',\n                    boxSizing: 'border-box'\n                }, value: msg, placeholder: placeholderIfLoading, className: textAreaID, disabled: loading, id: textAreaID, maxLength: maxTextareaInputLength, onKeyDown: handleTextareaKeyDown, onChange: handleTextareaOnChange }, contextStringRenderer),\n            React.createElement(Div, { asChildName: \"context-selector\", className: contextSelectorEnabled && contextSelectorOptionsFiltered.length > 0 ? 'is-open' : '' },\n                React.createElement(Div, { asChildName: \"title\" }, \"Select context\"),\n                React.createElement(Div, { asChildName: \"list\" }, contextSelectorOptionsFiltered.map((option, index) => (React.createElement(\"div\", { key: option.value, className: `anaconda-assistant-context-selector-list-option`, role: \"option\", ref: el => (el ? (contextOptionsRefs[index] = el) : null), tabIndex: contextOptionsIndex === index ? 0 : -1, onFocus: () => handleContextOptionFocus(index), onKeyDown: e => handleContextSelectorKeyDown(e, option, index, contextSelectorOptionsFiltered.length), onClick: () => handleContextSelection(option) },\n                    React.createElement(Div, { asChildName: \"label\" }, option.label),\n                    React.createElement(Div, { asChildName: \"description\", \"data-tooltip-id\": `context-element-${option.value}`, \"data-tooltip-content\": `${contextDescriptionMap[option.value]}` }, \"\\u24D8\"),\n                    React.createElement(Tooltip, { key: option.value, id: `context-element-${option.value}`, place: \"left\", style: { width: '50%', zIndex: '999' } })))))),\n            React.createElement(Button, { asChildName: loading ? 'stop-button' : 'submit-button', \"data-testid\": loading ? 'stop-button' : 'submit-button', \"data-tooltip-id\": \"assistant-send-button-tooltip\", \"data-tooltip-content\": loading ? 'Cancel' : 'Send', onClick: props.onStop },\n                React.createElement(Div, { asChildName: \"send-icon\" }, loading ? React.createElement(Icons.Stop, null) : React.createElement(Icons.Send, null)),\n                React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"assistant-send-button-tooltip\", place: \"top\" })))));\n});\n","import React, { useEffect, useState, useRef } from 'react';\nimport { AddContextPopup, ChatInput, ErrorPopup, Footer, useStore, getActiveChat, getActiveNotebook, getAssistantStore, countTokens } from '../';\nimport useResizeObserver from 'use-resize-observer';\nexport function ChatPanelFooter({ scrollFn, tokenLimit, fetchFileSummary }) {\n    const [activeChatKey, messagesLength, inProgressMessage, activeChatTokens, activeChatMaxTokens, activeChatType, activeNotebookState, addInstruction, summarizedFiles, isPro, error, makeChatRequest, resetToHomeScreen, setCellError, hidePopups, activeChat, attachContextOpen, abortChatRequest, account, resetActiveChat, activeNotebook, setAttachContextOpen, setHidePopups, enableDataCollection] = useStore(state => [\n        getActiveChat(state)?.key,\n        getActiveChat(state)?.messages.length,\n        getActiveChat(state)?.inProgress,\n        getActiveChat(state)?.tokens,\n        getActiveChat(state)?.maxTokens,\n        getActiveChat(state)?.inProgress?.type,\n        getActiveNotebook(state)?.notebookState,\n        state.addInstruction,\n        state.summarizedFiles,\n        state.account?.metadata?.is_pro_tier,\n        getActiveNotebook(state)?.notebookState.error,\n        state.makeChatRequest,\n        state.resetToHomeScreen,\n        state.setCellError,\n        state.hidePopups,\n        getActiveChat(state),\n        state.attachContextOpen,\n        state.abortChatRequest,\n        state.account,\n        state.resetActiveChat,\n        getActiveNotebook(state),\n        state.setAttachContextOpen,\n        state.setHidePopups,\n        state.settings.enableDataCollection\n    ]);\n    const [instructionTokens, setInstructionTokens] = useState(0);\n    const { ref, width } = useResizeObserver();\n    const contextSelectorOptions = [];\n    if (isPro) {\n        activeNotebookState?.dataframes?.forEach((dataframe) => {\n            contextSelectorOptions.push({\n                label: `@dataframe:${dataframe.name}`,\n                value: `dataframe:${dataframe.name}`,\n                description: `Add a DataFrame as context. WARNING: Do not share any sensitive data`\n            });\n        });\n        const fileNames = Object.keys(summarizedFiles);\n        fileNames.forEach((fileName) => {\n            contextSelectorOptions.push({\n                label: `@file:${fileName}`,\n                value: `file:${fileName}`,\n                description: `Add a File as context. WARNING: Do not share any sensitive data`\n            });\n        });\n    }\n    function addNewInstruction(instruction) {\n        addInstruction({ instruction, fetchFileSummary });\n        setTimeout(scrollFn, 100);\n    }\n    const maxTokens = activeChatMaxTokens != null ? activeChatMaxTokens : tokenLimit;\n    const [totalTokens, setTotalTokens] = useState(activeChatTokens != null ? activeChatTokens + instructionTokens : 0);\n    const [msg, setMsg] = useState('');\n    const timeoutRef = useRef(undefined);\n    useEffect(() => {\n        if (timeoutRef.current)\n            clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(() => {\n            clearTimeout(timeoutRef.current);\n            let _instructionTokens = instructionTokens;\n            if (!msg && inProgressMessage == null) {\n                _instructionTokens = 0;\n                setInstructionTokens(0);\n            }\n            setTotalTokens(activeChatTokens != null ? activeChatTokens + _instructionTokens : 0);\n        }, 250);\n        return () => clearTimeout(timeoutRef.current);\n    }, [messagesLength, activeChatTokens, instructionTokens, inProgressMessage, msg]);\n    function updateTokenCount(instruction) {\n        setInstructionTokens(countTokens(instruction));\n    }\n    function sendMessage(instruction) {\n        addNewInstruction(instruction);\n        setMsg('');\n    }\n    const contextSelectorFeatureFlagEnabled = getAssistantStore().getFeatureFlagBool('assistant-show-context-selector', false);\n    const placeholder = activeChatKey != null\n        ? contextSelectorFeatureFlagEnabled && isPro\n            ? 'Type @ to add context to this chat...'\n            : 'Reply to this chat...'\n        : `Or start a new chat without ${getAssistantStore().clientContextType} context here...`;\n    const loading = activeChatType === 'active';\n    const dataFrames = activeNotebook?.notebookState.dataframes;\n    // Focus the textarea when the chat stops loading\n    const hiddenInputRef = useRef(null);\n    useEffect(() => {\n        if (loading) {\n            if (hiddenInputRef.current) {\n                hiddenInputRef.current.focus();\n            }\n        }\n    }, [loading]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(ErrorPopup, { width: width, error: error, hidePopups: hidePopups, enableDataCollection: enableDataCollection, makeChatRequest: makeChatRequest, resetToHomeScreen: resetToHomeScreen, setCellError: setCellError }),\n        React.createElement(AddContextPopup, { onAddContext: sendMessage, makeChatRequest: makeChatRequest, attachContextOpen: attachContextOpen, dataFrames: dataFrames, setAttachContextOpen: setAttachContextOpen, activeChatAvailable: activeChat !== null }),\n        React.createElement(\"div\", { className: \"as-chat-footer-container\", ref: ref },\n            loading && (React.createElement(\"input\", { type: \"text\", ref: hiddenInputRef, style: { position: 'absolute', top: -100, opacity: 0 }, onKeyDown: e => {\n                    const isEnter = e.keyCode === 13;\n                    if (!isEnter)\n                        return;\n                    e.preventDefault();\n                    abortChatRequest();\n                } })),\n            React.createElement(ChatInput, { msg: msg, setMsg: setMsg, sendMessage: sendMessage, loading: loading, onInstructionUpdate: updateTokenCount, placeholder: placeholder, maxTokens: maxTokens, setHidePopups: setHidePopups, onStop: abortChatRequest, contextSelectorOptions: contextSelectorOptions }),\n            React.createElement(Footer, { resetActiveChat: resetActiveChat, setAttachContextOpen: setAttachContextOpen, loading: activeChatType != null, dataframesLength: dataFrames?.length, activeChatKey: activeChatKey, activeChatType: activeChatType, tokens: totalTokens, maxTokens: maxTokens, isPro: Boolean(account?.metadata?.is_pro_tier) }))));\n}\n","import React, { useEffect } from 'react';\nimport { Icons } from '../icons';\nimport { Button, Div, Popup, Style } from '../base-elements';\n/**\n * Style for the ErrorPopup component.\n * @alpha\n */\nconst styleOfErrorPopup = `\n.anaconda-assistant-popup-container-buttons-button {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 3px;\n  border-radius: 8px;\n  padding: 9px 12px 9px 12px;\n  cursor: pointer;\n  border: none;\n  background-color: transparent;\n  color: unset;\n}\n\n`;\n/**\n * Error Popup component.\n * @alpha\n */\nexport const ErrorPopup = (props) => {\n    const { width, error, hidePopups, enableDataCollection, makeChatRequest, resetToHomeScreen, setCellError } = props;\n    const [showError, setShowError] = React.useState(false);\n    useEffect(() => {\n        // Hide the popup if there's a response in progress\n        if (hidePopups) {\n            setShowError(false);\n            return;\n        }\n        // Show the popup if there's an error\n        if (error) {\n            setShowError(true);\n        }\n        else {\n            setShowError(false);\n        }\n    }, [error, hidePopups]);\n    function closeErrorDialog() {\n        setCellError(null);\n    }\n    function handleDebugCode(error) {\n        resetToHomeScreen();\n        makeChatRequest({\n            context: {\n                type: 'debug-error',\n                variables: {\n                    error_cell_code: error?.cell.source,\n                    error_output: error?.errorText\n                }\n            },\n            instruction: ''\n        });\n        setCellError(null);\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Style, { asChildName: \"style\" }, styleOfErrorPopup),\n        React.createElement(Popup, { width: width, show: showError, headerTitle: 'Anaconda Assistant', warningMessage: `By debugging the active code cell, the error tied to the active code cell, and the\n                  code of the active code cell will be sent to\n                  ${enableDataCollection ? 'the Anaconda Servers and to ' : ''}\n                  OpenAI.`, bodyTitle: 'Start a new conversation', body: React.createElement(Button, { asChildName: \"button\", onClick: () => handleDebugCode(error) },\n                React.createElement(Div, { asChildName: \"title\" }, \"Debug the active code cell\"),\n                React.createElement(Div, { asChildName: \"icon\" },\n                    React.createElement(Icons.ChevronRight, null))), dialogClosed: closeErrorDialog })));\n};\n","import React from 'react';\nimport { Icons } from '../icons';\nimport { Div } from '../base-elements/Div';\nimport { Button } from '../base-elements/Button';\nimport { Style } from '../base-elements/Style';\n/**\n * Style for the Footer component.\n * @alpha\n */\nexport const styleOfFooter = `\n.anaconda-assistant-chat-footer {\n  --text-color: #6a718a;\n\n  color: var(--text-color);\n  font-family: 'Inter', sans-serif;\n  font-size: 11px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 20px;\n  display: flex;\n  align-items: bottom;\n}\n\n.anaconda-assistant-chat-footer-token {\n  display: flex;\n  flex-direction: column;\n}\n\n.anaconda-assistant-chat-footer-token-bar {\n  display: flex;\n  width: 72px;\n  margin-right: 16px;\n  margin-bottom: 6px;\n  background: #e1e1e1;\n}\n\n.anaconda-assistant-chat-footer-token-bar-filled {\n  height: 7px;\n  background: linear-gradient(270deg, #ffb84f 0%, #76dd5c 100%), #80b241;\n  transition: width 1s ease-in-out;\n}\n\n.anaconda-assistant-chat-footer-token-text {\n  display: flex;\n  margin-right: 4px;\n}\n\n.anaconda-assistant-chat-footer-token-text-count {\n  display: flex;\n  font-weight: bold;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n.anaconda-assistant-chat-footer-attach-context {\n  flex-grow: 1;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.anaconda-assistant-chat-footer-attach-context-button {\n  border: none;\n  background: inherit;\n  padding: 0px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 13px;\n  color: var(--text-color);\n}\n\nanaconda-assistant-chat-footer-attach-context-button:hover {\n  filter: brightness(1.2);\n}\n\n.anaconda-assistant-chat-footer-attach-context-button:disabled {\n  color: #999;\n  cursor: not-allowed;\n}\n`;\n/**\n * Footer component.\n * @alpha\n */\nexport const Footer = React.memo((props) => {\n    const { setAttachContextOpen, loading, dataframesLength, tokens, maxTokens, isPro } = props;\n    const completePercent = Math.ceil((tokens / maxTokens) * 100);\n    const rawPercentage = Math.round((tokens / maxTokens) * 100);\n    const percentage = rawPercentage > 100 ? 100 : rawPercentage;\n    return (React.createElement(Div, { asChildName: \"chat-footer\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfFooter),\n        !isPro && (React.createElement(Div, { asChildName: \"token\" },\n            React.createElement(Div, { asChildName: \"bar\", \"data-testid\": \"token-count-bar\" },\n                React.createElement(Div, { asChildName: \"filled\", style: { width: `${percentage >= 100 ? 100 : completePercent}%` } })),\n            React.createElement(Div, { asChildName: \"text\", style: tokens >= maxTokens ? { color: 'red' } : {} },\n                \"Chat \",\n                React.createElement(Div, { asChildName: \"count\" },\n                    percentage,\n                    \"%\"),\n                \"full\"))),\n        React.createElement(Div, { asChildName: \"attach-context\" },\n            React.createElement(Button, { asChildName: \"button\", disabled: loading || !dataframesLength, onClick: () => setAttachContextOpen(true) },\n                React.createElement(Div, { asChildName: \"icon\" },\n                    React.createElement(Icons.Clip, null)),\n                \"Attach to chat\"))));\n});\n","import React from 'react';\nimport { Tooltip } from 'react-tooltip';\nimport { Button, Div, Style } from '../base-elements';\nimport { Icons } from '../icons';\n/**\n * Style for the Footer component.\n * @alpha\n */\nexport const styleOfHeader = `\n.anaconda-assistant-header {\n  display: flex;\n  padding: 8px 16px;\n  align-items: center;\n  font-family: 'Inter', sans-serif;\n  border-bottom: 1px solid var(--as-border-color-light, #ced2d9);\n  background: var(--as-main-bg-color-primary, #fff);\n  box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.15);\n}\n\n.anaconda-assistant-header-title {\n  display: flex;\n  flex: 1;\n  align-items: center;\n}\n\n.anaconda-assistant-header-buttons,\n.anaconda-assistant-header-buttons-disabled {\n  display: flex;\n}\n\n[class^='anaconda-assistant-header-buttons-icon'],\n[class^='anaconda-assistant-header-buttons-disabled-icon'] {\n  background-color: transparent;\n  border: none;\n  display: flex;\n  width: 36px;\n  height: 36px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 4px;\n  margin-right: 16px;\n  color: var(--as-main-font-color-secondary, #52596b);\n  cursor: pointer;\n}\n\n[class^='anaconda-assistant-header-buttons-disabled-icon']:last-child,\n[class^='anaconda-assistant-header-buttons-icon']:last-child {\n  margin-right: 0;\n}\n\n[class^='anaconda-assistant-header-buttons-icon'] {\n  &:hover,\n  &:focus {\n    background-color: #cdd2da;\n    color: #3c7529;\n  }\n}\n\n.anaconda-assistant-header-buttons-icon-open {\n    background-color: #e5e8eb;\n    color: #0cca4a;\n}\n\n[class^='anaconda-assistant-header-buttons-disabled-icon'],\n[class^='anaconda-assistant-header-buttons-disabled-icon']:hover,\n.anaconda-assistant-header-buttons-disabled-icon-open {\n  background: none;\n  cursor: auto;\n  color: var(--as-main-disabled-color, #abb1bf);\n}\n\n.anaconda-assistant-header-title-icon {\n  width: 24px;\n  height: 24px;\n  color: #31a824;\n}\n\n.anaconda-assistant-header-title-text {\n  color: var(--as-main-font-color, #2c303a);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 24px;\n  margin-left: 4px;\n}\n\n.anaconda-assistant-header-title-version {\n  color: var(--as-main-font-color, #2c303a);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: 24px;\n  margin-left: 4px;\n}\n`;\n/**\n * Header component.\n * @alpha\n */\nexport const Header = (props) => {\n    const { disableMenu, activeChat, clientVersion, chatsHistoryOpen, showSettings, settingsOpen, toggleChatsHistory, newChatClicked, toggleSettings } = props;\n    const resetButtons = () => {\n        chatsHistoryOpen && toggleChatsHistory();\n        settingsOpen && toggleSettings();\n    };\n    return (React.createElement(Div, { asChildName: \"header\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfHeader),\n        React.createElement(Div, { asChildName: \"title\" },\n            React.createElement(Div, { asChildName: \"icon\" },\n                React.createElement(Icons.AnacondaLogo, null)),\n            React.createElement(Div, { asChildName: \"text\" }, \"Anaconda Assistant\"),\n            React.createElement(Div, { asChildName: \"version\" }, clientVersion)),\n        React.createElement(Div, { asChildName: `buttons${disableMenu ? '-disabled' : ''}` },\n            React.createElement(Button, { asChildName: `icon${!activeChat && !chatsHistoryOpen && !settingsOpen ? '-open' : ''}`, \"data-tooltip-id\": \"anaconda-assistant-header-button-new-chat\", \"data-tooltip-hidden\": disableMenu, disabled: disableMenu, \"data-tooltip-content\": \"New chat\", onClick: () => {\n                    if (!disableMenu) {\n                        resetButtons();\n                        newChatClicked();\n                    }\n                } },\n                React.createElement(Icons.NewChat, null),\n                React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"anaconda-assistant-header-button-new-chat\", place: \"bottom\" })),\n            React.createElement(Button, { asChildName: `icon${chatsHistoryOpen ? '-open' : ''}`, \"data-tooltip-id\": \"anaconda-assistant-header-button-history\", \"data-tooltip-content\": \"Chats history\", \"data-tooltip-hidden\": disableMenu, disabled: disableMenu, onClick: () => {\n                    if (!disableMenu) {\n                        resetButtons();\n                        !chatsHistoryOpen && toggleChatsHistory();\n                    }\n                } },\n                React.createElement(Icons.History, null),\n                React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"anaconda-assistant-header-button-history\", place: \"bottom\" })),\n            showSettings && (React.createElement(React.Fragment, null,\n                React.createElement(Button, { asChildName: `icon${settingsOpen ? '-open' : ''}`, \"data-tooltip-id\": \"anaconda-assistant-header-button-settings\", \"data-tooltip-content\": \"Settings\", \"data-tooltip-hidden\": disableMenu, disabled: disableMenu, onClick: () => {\n                        if (!disableMenu) {\n                            resetButtons();\n                            !settingsOpen && toggleSettings();\n                        }\n                    } },\n                    React.createElement(Icons.Settings, null),\n                    React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"anaconda-assistant-header-button-settings\", place: \"bottom\" })))))));\n};\n","import { startCase } from 'lodash';\nimport React from 'react';\nimport { Tooltip } from 'react-tooltip';\nimport { AssistantComponentContext } from '../AssistantComponentContext';\nimport { Button, Div, Style } from '../base-elements';\nimport { Icons } from '../icons';\nimport { childFixer } from '../pages/childFixer';\nimport { getAssistantStore } from '../store/AssistantStore';\nimport { CompletedThumbs, styleOfCompletedThumbs } from './feedback/CompletedThumbs';\nimport { styleOfFeedbackButton } from './feedback/FeedbackButton';\nimport { FeedbackButtonsWrapper } from './feedback/FeedbackButtonsWrapper';\n/**\n * Style for the message buttons.\n * @alpha\n */\nexport const styleOfMessageButtons = `\n.anaconda-assistant-message-buttons {\n  display: flex;\n  align-items: center;\n  margin: 16px 0 0;\n  width: 100%;\n\n}\n\n.anaconda-assistant-message-buttons svg {\n  color: #abb1bf;\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n}\n\n.anaconda-assistant-message-buttons Button {\n  border: none;\n  border-radius: 4px;\n  background: transparent;\n  cursor: pointer;\n  padding: 8px;\n\n  &:hover,\n  &:focus {\n    svg {\n      color: #6a718a;\n    }\n  }\n}\n\n.anaconda-assistant-message-buttons-thumbs-icons {\n  display: flex;\n  flex-grow: 1;\n  justify-content: flex-end;\n}\n`;\n/**\n * Message buttons.\n * @alpha\n */\nexport const MessageButtons = (props) => {\n    const { canDelete, canExport, canSubmitFeedback, message, modalWidth, exportMessage, deleteMessagesAfterId, handleFeedback } = props;\n    const { replaceChildren } = React.useContext(AssistantComponentContext);\n    const assistantMessage = message;\n    if (canSubmitFeedback && !handleFeedback) {\n        throw new Error('handleFeedback must be provided if canSubmitFeedback is true');\n    }\n    let feedbackComponents = null;\n    const canRenderFeedback = canSubmitFeedback && handleFeedback;\n    if (canRenderFeedback) {\n        if (assistantMessage.feedback) {\n            feedbackComponents = (React.createElement(React.Fragment, null,\n                canSubmitFeedback && (React.createElement(CompletedThumbs, { direction: \"up\", selected: assistantMessage.feedback.sentiment === 'positive' })),\n                canSubmitFeedback && (React.createElement(CompletedThumbs, { direction: \"down\", selected: assistantMessage.feedback.sentiment === 'negative' }))));\n        }\n        else {\n            // Feedback buttons use css animation to beat, but if the sidebar menu is open, this will\n            // cause them to appear in front of the menu, so we hide them when the menu is open.\n            // See - https://stackoverflow.com/questions/61243945/checkboxes-behind-a-div-turned-visible-when-their-opacity-is-changed\n            feedbackComponents = (React.createElement(React.Fragment, null, canSubmitFeedback && (React.createElement(FeedbackButtonsWrapper, { modalWidth: modalWidth, onSubmitFeedback: handleFeedback }))));\n        }\n    }\n    return (React.createElement(Div, { asChildName: \"message-buttons\", style: props.style },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfMessageButtons),\n        canExport && (React.createElement(Button, { asChildName: \"export-button\", \"data-testid\": \"export-icon\", \"data-tooltip-id\": \"export-tooltip\", \"data-tooltip-content\": `Export and run this message in the ${startCase(getAssistantStore().clientContextType)}`, onClick: () => exportMessage(message) },\n            React.createElement(Icons.Book, null),\n            React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"export-tooltip\", place: \"bottom\" }))),\n        canDelete && (React.createElement(Button, { asChildName: \"delete-button\", \"data-testid\": \"delete-icon\", \"data-tooltip-id\": \"delete-tooltip\", \"data-tooltip-content\": \"Delete this and all messages below\", onClick: () => deleteMessagesAfterId(message.messageId) },\n            React.createElement(Icons.Trash, null),\n            React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"delete-tooltip\", place: \"bottom\" }))),\n        canRenderFeedback && (React.createElement(Div, { asChildName: \"thumbs-icons\" },\n            React.createElement(AssistantComponentContext.Provider, { value: childFixer({\n                    parentName: 'message-buttons',\n                    childName: assistantMessage.feedback ? 'completed-thumbs' : 'feedback-button',\n                    childrenStyle: assistantMessage.feedback\n                        ? styleOfCompletedThumbs\n                        : styleOfFeedbackButton,\n                    replaceChildren\n                }) }, feedbackComponents)))));\n};\n","import React from 'react';\nimport { SelectDataFrame } from './SelectDataframe';\nimport { Div, Style } from '../base-elements';\nimport { Icons } from '../icons';\n/**\n * Style for the SelectContent component.\n * @alpha\n */\nconst styleOfSelectContext = `\n.anaconda-assistant-selectContext {\n  margin: 20px;\n}\n\n.anaconda-assistant-selectContext-warning {\n  margin-bottom: 20px;\n  color: #757575;\n  background: #fcfccc;\n  padding: 10px;\n  font-size: 11px;\n  border-radius: 4px;\n  border: 1px solid #ebebbe;\n  display: flex;\n}\n\n.anaconda-assistant-selectContext-warning-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0 12px 0 3px;\n}\n\n.anaconda-assistant-selectContext-warning-container-icon {\n  width: 23px;\n  color: #ffba0a;\n}\n\n.anaconda-assistant-selectContext-buttons {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-bottom: 15px;\n}\n\n.anaconda-assistant-selectContext-buttons-wrapper {\n  display: flex;\n  align-items: center;\n  font-size: 13px;\n  font-weight: 590;\n  letter-spacing: 0.02em;\n}\n\n.anaconda-assistant-selectContext-buttons-wrapper-container {\n  width: 26px;\n  height: 26px;\n  background: rgba(0, 178, 255, 0.1);\n  border-radius: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 10px;\n}\n\n.anaconda-assistant-selectContext-buttons-wrapper-container-icon {\n  width: 13px;\n  color: #00b2ff;\n}\n`;\n/**\n * Explain SelectContext component.\n * @alpha\n */\nexport const SelectContext = (props) => {\n    const { contextType, onSubmit, dataFrames, makeChatRequest, enableDataCollection } = props;\n    let { buttonLabel } = props;\n    const typesToButtonLabelsMap = {\n        'graph-dataframe': 'Get Code',\n        'describe-dataframe': 'Describe Dataframe',\n        'assistant-suggestions': 'Generate suggestions'\n    };\n    if (!buttonLabel && contextType) {\n        buttonLabel = typesToButtonLabelsMap[contextType];\n    }\n    return (React.createElement(Div, { asChildName: \"selectContext\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfSelectContext),\n        React.createElement(Div, { asChildName: \"warning\" },\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"icon\" },\n                    React.createElement(Icons.Warning, null))),\n            React.createElement(Div, { asChildName: \"message\" }, `By attaching a dataframe to the conversation, the dataframe column names and types will be\n                  sent to ${enableDataCollection ? 'the Anaconda Servers and to ' : ''}\n                  OpenAI.`)),\n        React.createElement(Div, { asChildName: \"buttons\" },\n            React.createElement(Div, { asChildName: \"wrapper\" },\n                React.createElement(Div, { asChildName: \"container\" },\n                    React.createElement(Div, { asChildName: \"icon\" },\n                        React.createElement(Icons.Code, null))),\n                React.createElement(Div, { asChildName: \"title\" }, \"Select Dataframe\")),\n            React.createElement(SelectDataFrame, { contextType: contextType, makeChatRequest: makeChatRequest, dataFrames: dataFrames, buttonLabel: buttonLabel, onSubmit: onSubmit }))));\n};\n","import React, { useState } from 'react';\nimport { Icons } from '../icons';\nimport { Button, Div, Option, Select, Style } from '../base-elements';\n/**\n * Style for the SelectDataFrame component.\n * @alpha\n */\nconst styleOfDataframeSelector = `\n[class^='anaconda-assistant-'][class$='-dataframe-selector-select'] {\n  margin: 0;\n  box-sizing: border-box;\n  appearance: none;\n  background-color: white;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  display: inline-block;\n  font: inherit;\n  font-size: 13px;\n  height: 40px;\n  line-height: 1em;\n  padding: 0.5em 3.5em 0.5em 1em;\n  background-image: linear-gradient(45deg, transparent 50%, gray 50%),\n    linear-gradient(135deg, gray 50%, transparent 50%), linear-gradient(to right, #ccc, #ccc);\n  background-position:\n    calc(100% - 20px) calc(1em + 4px),\n    calc(100% - 15px) calc(1em + 4px),\n    calc(100% - 2.5em) 9px;\n  background-size:\n    5px 5px,\n    5px 5px,\n    1px 20px;\n  background-repeat: no-repeat;\n  width: 100%;\n}\n\n[class^='anaconda-assistant-'][class$='-dataframe-selector-select']:invalid {\n  color: gray;\n}\n\n[class^='anaconda-assistant-'][class$='-dataframe-selector-button'] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.35em 1.2em;\n  border: 0.1em solid #ffffff;\n  margin-top: 16px;\n  height: 40px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  text-decoration: none;\n  font-size: 13px;\n  font-weight: 300;\n  color: #06262d;\n  text-align: center;\n  transition: all 0.5s;\n  background: #0cca4a;\n  width: 100%;\n}\n\n[class^='anaconda-assistant-'][class$='-dataframe-selector-button'].disabled {\n  background: #bdbdbd;\n}\n\n[class^='anaconda-assistant-'][class$='-dataframe-selector-button']:hover {\n  background-color: #4fab4f;\n  cursor: pointer;\n}\n\n[class^='anaconda-assistant-'][class$='-dataframe-selector-button']:hover.disabled {\n  cursor: not-allowed;\n  background: #bdbdbd;\n}\n\n[class^='anaconda-assistant-'][class$='-dataframe-selector-button-icon'] {\n  width: 16px;\n  height: 16px;\n  margin-right: 10px;\n}\n`;\n/**\n * SelectDataFrame component.\n * @alpha\n */\nexport const SelectDataFrame = (props) => {\n    const { buttonLabel, contextType, onSubmit, makeChatRequest, dataFrames, enableDataCollection } = props;\n    if (contextType === 'assistant-suggestions' && !onSubmit) {\n        throw new Error('onSubmit is required for assistant-suggestions');\n    }\n    let submit = () => void 0;\n    if (contextType && contextType !== 'assistant-suggestions') {\n        submit = (dataframe) => {\n            makeChatRequest({\n                context: { type: contextType, variables: { dataframe } },\n                instruction: ''\n            });\n        };\n    }\n    if (!dataFrames)\n        return null;\n    return (React.createElement(DataframeSelector, { dataframes: dataFrames, submit: onSubmit || submit, buttonLabel: buttonLabel, enableDataCollection: enableDataCollection }));\n};\n/**\n * DataframeSelector component.\n * @alpha\n */\nconst DataframeSelector = (props) => {\n    const { dataframes, submit, buttonLabel } = props;\n    const [selectedDf, setSelectedDataframe] = useState(null);\n    function onChange(value) {\n        const dataframe = dataframes.find(v => v.name === value);\n        if (dataframe)\n            setSelectedDataframe(dataframe);\n    }\n    function handleClick() {\n        if (selectedDf)\n            submit(selectedDf);\n    }\n    return (React.createElement(Div, { asChildName: \"dataframe-selector\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfDataframeSelector),\n        React.createElement(Select, { \"data-testid\": \"dataframe-select\", required: true, asChildName: \"select\", value: selectedDf?.name || '', onChange: e => onChange(e.currentTarget.value) },\n            React.createElement(Option, { asChildName: \"option\", value: \"\", disabled: true, defaultValue: \"Select\", hidden: true }, \"Select\"),\n            dataframes.map(df => (React.createElement(Option, { asChildName: \"option\", key: df.hash, value: df.name }, df.name)))),\n        selectedDf && (React.createElement(Button, { \"data-testid\": \"dataframe-selector-button\", asChildName: \"button\", onClick: handleClick },\n            React.createElement(Div, { asChildName: \"icon\" },\n                React.createElement(Icons.MagicWand, null)),\n            buttonLabel || 'Select Dataframe'))));\n};\n","import React from 'react';\nimport { Icons } from '../icons';\nimport { MessageButtons, styleOfMessageButtons } from './MessageButtons';\nimport { Div } from '../base-elements/Div';\nimport { Style } from '../base-elements/Style';\nimport { AssistantComponentContext } from '../AssistantComponentContext';\nimport { childFixer } from '../pages/childFixer';\n/**\n * Style for the user message.\n * @alpha\n */\nexport const styleOfUserMessage = `\n.anaconda-assistant-user-message {\n  display: flex;\n  flex-direction: column;\n  background: #e9e6fe;\n  border-radius: 8px;\n  font-family: Inter;\n  font-size: 15px;\n  font-style: normal;\n  line-height: 20px;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.anaconda-assistant-user-message-message-container {\n  display: flex;\n  padding: 12px;\n  flex-direction: row;\n  align-items: center;\n\n}\n\n.anaconda-assistant-user-message-message-container-icon {\n  display: flex;\n  width: 28px;\n  height: 24px;\n  color: #6c5af6;\n}\n\n.anaconda-assistant-user-message-message-container-message-text {\n  word-break: break-word;\n  white-space: pre-wrap;\n  margin-left: 10px;\n}\n`;\n/**\n * User message.\n * @alpha\n */\nexport const UserMessage = (props) => {\n    const { message, isInitialMessage, exportMessage, deleteMessagesAfterId, handleFeedback } = props;\n    const { replaceChildren } = React.useContext(AssistantComponentContext);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Div, { asChildName: \"user-message\" },\n            React.createElement(Style, { asChildName: \"style\" }, styleOfUserMessage),\n            React.createElement(Div, { asChildName: \"message-container\" },\n                React.createElement(Div, { asChildName: \"icon\" },\n                    React.createElement(Icons.UserPrompt, null)),\n                React.createElement(Div, { asChildName: \"message-text\" }, message.content))),\n        !isInitialMessage && (React.createElement(AssistantComponentContext.Provider, { value: childFixer({\n                parentName: 'user-message',\n                childName: 'message-buttons',\n                childrenStyle: styleOfMessageButtons,\n                replaceChildren\n            }) },\n            React.createElement(MessageButtons, { canDelete: true, canExport: true, message: message, exportMessage: exportMessage, deleteMessagesAfterId: deleteMessagesAfterId, handleFeedback: handleFeedback })))));\n};\n","import React from 'react';\nimport { Icons } from '../../icons';\nimport { Div } from '../../base-elements/Div';\nimport { Tooltip } from 'react-tooltip';\nimport { Style } from '../../base-elements/Style';\n/**\n * Style for the completed thumbs.\n * @alpha\n */\nexport const styleOfCompletedThumbs = `\n.anaconda-assistant-completed-thumbs,\n.anaconda-assistant-completed-thumbs-selected {\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  margin-left: 8px;\n  color: #e0e0e0;\n}\n\n.anaconda-assistant-completed-thumbs-selected.thumbs-up {\n  animation: anaconda-assistant-code-thumbs-up-beat 0.5s infinite;\n  animation-duration: 0.5s;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-in-out;\n  color: #14d662;\n}\n\n.anaconda-assistant-completed-thumbs-selected.thumbs-up svg {\n  color: #14d662;\n}\n\n@keyframes anaconda-assistant-code-thumbs-up-beat {\n  0%,\n  90% {\n    transform: scale(1);\n  }\n  45% {\n    transform: scale(1.25);\n  }\n}\n\n.anaconda-assistant-completed-thumbs-selected.thumbs-down {\n  animation: anaconda-assistant-code-thumbs-down-beat 0.5s infinite;\n  animation-duration: 0.5s;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-in-out;\n  color: #f29c9c;\n}\n\n.anaconda-assistant-completed-thumbs-selected.thumbs-down svg {\n  color: #f29c9c;\n}\n\n@keyframes anaconda-assistant-code-thumbs-down-beat {\n  0%,\n  90% {\n    transform: scale(1);\n  }\n  45% {\n    transform: scale(1.25);\n  }\n}\n`;\n/**\n * Completed thumbs.\n * @alpha\n */\nexport const CompletedThumbs = React.memo(({ selected, direction }) => {\n    return (React.createElement(Div, { asChildName: selected ? 'completed-thumbs-selected' : 'completed-thumbs', \"data-testid\": `completed-thumbs-${direction}`, className: `thumbs-${direction}` },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfCompletedThumbs),\n        React.createElement(Div, { asChildName: \"completed-thumbs-tooltip\", \"data-tooltip-id\": \"completed-thumbs-tooltip\", \"data-tooltip-content\": direction === 'up' ? 'I liked this response' : \"I didn't like this response\" }, direction === 'up' ? React.createElement(Icons.ThumbsUp, null) : React.createElement(Icons.ThumbsDown, null)),\n        React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"completed-thumbs-tooltip\" })));\n});\n","import React, { useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport { Tooltip } from 'react-tooltip';\nimport { AssistantComponentContext } from '../../AssistantComponentContext';\nimport { Button, Div, Style } from '../../base-elements';\nimport { childFixer } from '../../pages/childFixer';\nimport { FeedbackModal, styleOfFeedbackModal } from './FeedbackModal';\n/**\n * Style for the feedback button.\n * @alpha\n */\nexport const styleOfFeedbackButton = `\n.anaconda-assistant-feedback-button {\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  padding: 8px;\n}\n\n.anaconda-assistant-feedback-button-icon svg {\n  width: 20px;\n  height: 20px;\n  color: #abb1bf;\n}\n\n.anaconda-assistant-feedback-button-icon svg:hover {\n  color: #6a718a;\n}\n`;\n/**\n * Feedback button.\n * @alpha\n */\nexport const FeedbackButton = (props) => {\n    const { open, setOpenFeedbackType, icon, tooltipTitle, feedbackType, modalWidth, onSubmitFeedback } = props;\n    const [arrowElement, setArrowElement] = useState(null);\n    const [referenceElement, setReferenceElement] = useState(null);\n    const [popperElement, setPopperElement] = useState(null);\n    const { styles, attributes } = usePopper(referenceElement, popperElement, {\n        placement: 'top',\n        modifiers: [{ name: 'arrow', options: { element: arrowElement } }]\n    });\n    const { replaceChildren } = React.useContext(AssistantComponentContext);\n    function toggleOpen() {\n        setOpenFeedbackType(open ? undefined : feedbackType);\n    }\n    return (React.createElement(\"div\", { ref: setReferenceElement },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfFeedbackButton),\n        React.createElement(Button, { mainContainer: true, asChildName: \"feedback-button\", \"data-testid\": \"feedback-button-clickable\", onClick: toggleOpen, \"data-tooltip-id\": `feedback-button-tooltip-${feedbackType}`, \"data-tooltip-content\": tooltipTitle },\n            React.createElement(Div, { asChildName: \"wrap\" },\n                React.createElement(Div, { asChildName: \"icon\" }, icon)),\n            React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: `feedback-button-tooltip-${feedbackType}`, place: \"bottom\" })),\n        open && (React.createElement(AssistantComponentContext.Provider, { value: childFixer({\n                parentName: 'feedback-button',\n                childName: 'feedback-modal',\n                childrenStyle: styleOfFeedbackModal,\n                replaceChildren\n            }) },\n            React.createElement(FeedbackModal, { feedbackType: feedbackType, width: modalWidth, onSubmitFeedback: onSubmitFeedback, wrapperStyles: styles.popper, arrowStyles: styles.arrow, wrapperAttributes: attributes.popper, setWrapperElement: setPopperElement, setArrowElement: setArrowElement, closeModal: () => setOpenFeedbackType(undefined) })))));\n};\n","import React, { useState } from 'react';\nimport { Icons } from '../../icons';\nimport { FeedbackButton } from './FeedbackButton';\n/**\n * Feedback buttons wrapper.\n * @alpha\n */\nexport const FeedbackButtonsWrapper = (props) => {\n    const { modalWidth, onSubmitFeedback } = props;\n    const [openFeedbackType, setOpenFeedbackType] = useState();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(FeedbackButton, { open: openFeedbackType === 'positive', setOpenFeedbackType: setOpenFeedbackType, tooltipTitle: \"I liked this response\", icon: React.createElement(Icons.ThumbsUp, null), feedbackType: \"positive\", modalWidth: modalWidth, onSubmitFeedback: onSubmitFeedback }),\n        React.createElement(FeedbackButton, { open: openFeedbackType === 'negative', setOpenFeedbackType: setOpenFeedbackType, tooltipTitle: \"I didn't like this response\", icon: React.createElement(Icons.ThumbsDown, null), feedbackType: \"negative\", modalWidth: modalWidth, onSubmitFeedback: onSubmitFeedback })));\n};\n","import React, { useRef, useState } from 'react';\nimport { useOnClickOutside } from 'usehooks-ts';\nimport { Div } from '../../base-elements/Div';\nimport { Icons } from '../../icons';\nimport { Form } from '../../base-elements/Form';\nimport { Button } from '../../base-elements/Button';\nimport { Style } from '../../base-elements/Style';\n/**\n * Style for the feedback modal.\n * @alpha\n */\nexport const styleOfFeedbackModal = `\n#static-anaconda-assistant-modal-arrow,\n#static-anaconda-assistant-modal-arrow::before {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: #ced2d9;\n}\n\n#static-anaconda-assistant-modal-arrow {\n  visibility: hidden;\n}\n\n#static-anaconda-assistant-modal-arrow::before {\n  visibility: visible;\n  content: '';\n  transform: rotate(45deg);\n  bottom: 4px;\n}\n\n.anaconda-assistant-feedback-modal {\n  padding: 15px;\n  background: #ced2d9;\n  color: rgb(90, 86, 97);\n  border-radius: 4px;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.anaconda-assistant-feedback-modal-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n  color: #2c303a;\n}\n\n.anaconda-assistant-feedback-modal-header-icon {\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  color: #2c303a;\n}\n\n.anaconda-assistant-feedback-modal-header .anaconda-assistant-feedback-modal-header-icon > svg {\n  color: #2c303a;\n  cursor: default;\n}\n\n.anaconda-assistant-feedback-modal-header .anaconda-assistant-feedback-modal-header-icon > svg:hover {\n  color: #2c303a;\n}\n\n.anaconda-assistant-feedback-modal-header-title {\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 24px;\n}\n\n.anaconda-assistant-feedback-modal-form-text-area textarea,\n.anaconda-assistant-feedback-modal-form-text-area textarea:focus-visible {\n  width: calc(100% - 17px);\n  min-height: 70px;\n  height: 70px;\n  align-items: center;\n  display: flex;\n  background: #f5faf6;\n  border-radius: 4px;\n  border: 1px solid #8c94a6;\n  padding: 6px 5px 3px 10px;\n  margin-bottom: 5px;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  color: #2c303a;\n  outline-color: transparent;\n}\n\n.anaconda-assistant-feedback-modal-form-button-container {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.anaconda-assistant-feedback-modal-form-button-container-submit-button {\n  border: none;\n  font-size: 12px;\n  background: #fff;\n  border: 1px solid #06262d;\n  border-radius: 4px;\n  padding-left: 12px;\n  padding-right: 12px;\n  margin-top: 5px;\n  height: 32px;\n  color: #06262d;\n  cursor: pointer;\n}\n\n.anaconda-assistant-feedback-modal-form-button-container-submit-button:hover {\n  background: #cdd2da;\n}\n`;\n/**\n * Feedback modal.\n * @alpha\n */\nexport const FeedbackModal = (props) => {\n    const { feedbackType, width, onSubmitFeedback, wrapperStyles, arrowStyles, wrapperAttributes, setWrapperElement, setArrowElement, closeModal } = props;\n    const [text, setText] = useState('');\n    const ref = useRef(null);\n    useOnClickOutside(ref, () => closeModal());\n    function handleSubmit(e) {\n        onSubmitFeedback(feedbackType, text);\n        e?.preventDefault();\n    }\n    function handleKeyDown(e) {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            handleSubmit(e);\n        }\n        else if (e.key === 'Escape') {\n            closeModal();\n        }\n    }\n    const formTextAreaPlaceholder = feedbackType === 'positive'\n        ? 'What did you like about the generated code?'\n        : 'What was the issue with the generated code? How could it improve?';\n    const negativeClassName = feedbackType === 'negative' ? 'static-anaconda-assistant-negative' : '';\n    return (React.createElement(\"div\", { ref: setWrapperElement, style: {\n            ...wrapperStyles,\n            ...{ width: '100%', marginBottom: 6, boxSizing: 'border-box', padding: '0 20px' }\n        }, ...wrapperAttributes },\n        React.createElement(Div, { asChildName: \"feedback-modal\", \"data-testid\": \"feedback-modal\", className: negativeClassName, style: { width } },\n            React.createElement(\"div\", { ref: ref },\n                React.createElement(Style, { asChildName: \"style\" }, styleOfFeedbackModal),\n                React.createElement(Div, { asChildName: \"header\" },\n                    React.createElement(Div, { asChildName: \"icon\" }, feedbackType === 'positive' ? React.createElement(Icons.ThumbsUp, null) : React.createElement(Icons.ThumbsDown, null)),\n                    React.createElement(Div, { asChildName: \"title\" }, \"Provide additional feedback\")),\n                React.createElement(Form, { onSubmit: handleSubmit, asChildName: \"form\" },\n                    React.createElement(Div, { asChildName: \"text-area\", className: negativeClassName },\n                        React.createElement(\"textarea\", { autoFocus: true, disabled: false, maxLength: 200, value: text, onKeyDown: handleKeyDown, onChange: e => setText(e.target.value), rows: 3, placeholder: formTextAreaPlaceholder })),\n                    React.createElement(Div, { asChildName: \"button-container\" },\n                        React.createElement(Button, { type: \"submit\", \"data-testid\": \"submit-button\", asChildName: \"submit-button\", className: negativeClassName }, \"Submit\"))))),\n        React.createElement(\"div\", { id: \"static-anaconda-assistant-modal-arrow\", className: negativeClassName, ref: setArrowElement, style: {\n                ...arrowStyles,\n                ...{\n                    transform: 'none',\n                    right: `${feedbackType === 'negative' ? 32 : 62}px`,\n                    left: 'auto'\n                }\n            } })));\n};\n","export * from './FeedbackButton';\nexport * from './FeedbackModal';\nexport * from './CompletedThumbs';\n","export * from './ChatInput';\nexport * from './ChatPanelFooter';\nexport * from './Header';\nexport * from './Footer';\nexport * from './UserMessage';\nexport * from './MessageButtons';\nexport * from './feedback';\nexport * from './ErrorPopup';\nexport * from './AddContextPopup';\nexport * from './SelectDataframe';\nexport * from './SelectContext';\nexport * from './response';\n","import React, { useEffect } from 'react';\nimport { Div, Style } from '../../base-elements';\nimport { Icons } from '../../icons';\nimport { ResponseBlocks } from './ResponseBlocks';\n/**\n * Style for the ActiveMessage.\n * @alpha\n */\nexport const styleOfActiveMessage = `\n.anaconda-assistant-active-message {\n  margin-bottom: 16px;\n}\n\n.anaconda-assistant-active-message-loading {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 16px;\n}\n\n.anaconda-assistant-active-message-loading-icon {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  color: #4fab4f;\n}\n\n.anaconda-assistant-active-message-loading-animation {\n  font-size: 13px;\n  font-weight: lighter;\n  font-style: normal;\n}\n\n.anaconda-assistant-active-message-loading-animation:after {\n  overflow: hidden;\n  display: inline-block;\n  vertical-align: bottom;\n  -webkit-animation: ellipsis steps(4, end) 1200ms infinite;\n  -moz-animation: ellipsis steps(4, end) 1200ms infinite;\n  -ms-animation: ellipsis steps(4, end) 1200ms infinite;\n  animation: ellipsis steps(4, end) 1200ms infinite;\n  content: '...';\n  width: 0;\n}\n`;\n/**\n * ActiveMessage.\n * @alpha\n */\nexport const ActiveMessage = (props) => {\n    const { response, selectedText, activeChatSession, scrollFn } = props;\n    // If the code response is changing (streaming back from the server), scroll to the bottom\n    useEffect(() => {\n        scrollFn();\n    }, [response, scrollFn]);\n    if (!response)\n        return null;\n    return (React.createElement(Div, { asChildName: \"active-message\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfActiveMessage),\n        React.createElement(Div, { asChildName: \"loading\" },\n            React.createElement(Div, { asChildName: \"icon\" },\n                React.createElement(Icons.Magic, null)),\n            React.createElement(Div, { asChildName: \"animation\" })),\n        response.content !== '' && (React.createElement(ResponseBlocks, { message: response, selectedText: selectedText, activeChatSession: activeChatSession }))));\n};\n","import React, { useState } from 'react';\nimport { Icons } from '../../icons';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport { Tooltip } from 'react-tooltip';\nimport { Button, Div, Style } from '../../base-elements';\nimport { getAssistantStore } from '../../store/AssistantStore';\nimport { startCase } from 'lodash';\n/**\n * Style for the code block.\n * @alpha\n */\nexport const styleOfCodeBlock = `\n.anaconda-assistant-code-buttons {\n  display: flex;\n  justify-content: flex-end;\n  min-height: 16px;\n  margin-bottom: 8px;\n  gap: 10px;\n}\n\n[class^='anaconda-assistant-code-buttons-'][class$='-button'],\n[class^='anaconda-assistant-code-buttons-'][class$='-disabled'],\n[class^='anaconda-assistant-code-buttons-'][class$='-clicked'] {\n  border: none;\n  background: transparent;\n  color: #6c5af6;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  font-family: 'Inter', sans-serif;\n  font-size: 13px;\n  font-weight: 400;\n  font-style: normal;\n  padding: 8px;\n  cursor: pointer;\n  display: flex;\n  height: fit-content;\n}\n\n[class^='anaconda-assistant-code-buttons-'][class$='-disabled'] {\n  color: #c9c2fa;\n  cursor: not-allowed;\n}\n\n[class^='anaconda-assistant-code-buttons-'][class$='-button'] {\n  &:hover,\n  &:focus {\n    background: #e5e8eb;\n  }\n}\n\n[class^='anaconda-assistant-code-buttons-'][class$='-icon'] {\n  width: 20px;\n  height: 20px;\n}\n`;\n/**\n * Code block.\n * @alpha\n */\nexport const CodeBlock = (props) => {\n    const { block, messageId, runCode, responseContainsPythonBlocks, selectedText, activeChatSession } = props;\n    const [runCodeClicked, setRunCodeClicked] = useState(false);\n    const [replaceClicked, setReplaceClicked] = useState(false);\n    const [copyClicked, setCopyClicked] = useState(false);\n    const handleOnRun = (code) => {\n        setRunCodeClicked(true);\n        setTimeout(() => setRunCodeClicked(false), 750);\n        if (activeChatSession && runCode) {\n            runCode(code, messageId, activeChatSession);\n        }\n    };\n    const handleOnReplace = (code) => {\n        setReplaceClicked(true);\n        setTimeout(() => setReplaceClicked(false), 750);\n        if (activeChatSession && runCode) {\n            runCode(code, messageId, activeChatSession, true);\n        }\n    };\n    const handleOnCopy = (code) => {\n        setCopyClicked(true);\n        setTimeout(() => setCopyClicked(false), 750);\n        navigator.clipboard.writeText(code);\n    };\n    // If response did not mark any blocks in the response as python, we assume all code blocks are\n    // python and show the run code button\n    const showRunCodeButton = runCode && (!responseContainsPythonBlocks || block.type === 'python');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Style, { asChildName: \"code-block-style\" }, styleOfCodeBlock),\n        React.createElement(Div, { asChildName: \"code-block\" },\n            React.createElement(Highlight, { ...defaultProps, code: block.content, language: \"python\" }, ({ className, style, tokens, getLineProps, getTokenProps }) => (React.createElement(\"pre\", { className: className, style: {\n                    ...style,\n                    padding: '12px 10px 12px',\n                    marginBottom: 8,\n                    overflowX: 'scroll',\n                    borderRadius: 4\n                } }, tokens.map((line, i) => (React.createElement(\"div\", { ...getLineProps({ line, key: i }) }, line.map((token, key) => (React.createElement(\"span\", { ...getTokenProps({ token, key }) })))))))))),\n        showRunCodeButton && (React.createElement(Div, { asChildName: \"code-buttons\" },\n            React.createElement(Button, { asChildName: `run-button${runCodeClicked ? '-clicked' : ''}`, \"data-tooltip-id\": \"anaconda-assistant-code-run-button\", \"data-tooltip-content\": `Run code in ${startCase(getAssistantStore().clientContextType)}`, \"data-testid\": \"run-button\", onClick: () => handleOnRun(block.content) },\n                React.createElement(Div, { asChildName: \"icon\" },\n                    React.createElement(Icons.Play, null)),\n                React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"anaconda-assistant-code-run-button\", place: \"bottom\" })),\n            React.createElement(Button, { disabled: !selectedText, asChildName: `replace-button${replaceClicked ? '-clicked' : ''}${selectedText ? '' : '-disabled'}`, \"data-tooltip-id\": \"anaconda-assistant-code-replace-button\", \"data-tooltip-content\": \"Replace selection\", \"data-tooltip-hidden\": !selectedText, \"data-testid\": \"replace-button\", onClick: () => handleOnReplace(block.content) },\n                React.createElement(Div, { asChildName: \"icon\" },\n                    React.createElement(Icons.MagicWand, null)),\n                React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"anaconda-assistant-code-replace-button\", place: \"bottom\" })),\n            React.createElement(Button, { asChildName: `copy-button${copyClicked ? '-clicked' : ''}`, \"data-tooltip-id\": \"anaconda-assistant-code-copy-button\", \"data-tooltip-content\": \"Copy\", \"data-testid\": \"copy-button\", onClick: () => handleOnCopy(block.content) },\n                React.createElement(Div, { asChildName: \"icon\" },\n                    React.createElement(Icons.Copy, null)),\n                React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: \"anaconda-assistant-code-copy-button\", place: \"bottom\" }))))));\n};\n","import React from 'react';\nimport { Div, Style } from '../../base-elements';\nimport { Icons } from '../../icons';\nimport { MessageButtons } from '../MessageButtons';\nimport { ResponseBlocks } from './ResponseBlocks';\n/**\n * Style for the CompletedMessage.\n * @alpha\n */\nexport const styleOfCompletedMessage = `\n.anaconda-assistant-completed-message-response {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 16px;\n}\n\n.anaconda-assistant-completed-message-response-icon {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  color: #4fab4f;\n}\n`;\n/**\n * CompletedMessage.\n * @alpha\n */\nexport const CompletedMessage = (props) => {\n    const { assistantMessage, runCode, selectedText, activeChatSession, handleFeedback, handleExportMessage, handleDeleteMessageAfterId } = props;\n    const handleMessageFeedback = (sentiment, message) => {\n        handleFeedback(assistantMessage.messageId, sentiment, message);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Style, { asChildName: \"style\" }, styleOfCompletedMessage),\n        React.createElement(Div, { asChildName: \"completed-message-response\" },\n            React.createElement(Div, { asChildName: \"icon\" },\n                React.createElement(Icons.Magic, null))),\n        assistantMessage.content !== '' && (React.createElement(ResponseBlocks, { message: assistantMessage, runCode: runCode, selectedText: selectedText, activeChatSession: activeChatSession })),\n        React.createElement(MessageButtons, { style: { marginBottom: '16px' }, canSubmitFeedback: true, canExport: true, message: assistantMessage, handleFeedback: handleMessageFeedback, exportMessage: handleExportMessage, deleteMessagesAfterId: handleDeleteMessageAfterId })));\n};\n","import React from 'react';\nimport { Button, Div, Style } from '../../base-elements';\nimport { Icons } from '../../icons';\n/**\n * Style for the ErrorMessage.\n * @alpha\n */\nexport const styleOfErrorMessage = `\n.anaconda-assistant-error-message {\n  margin: 16px 0;\n}\n\n.anaconda-assistant-error-message-header {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 16px 0;\n}\n\n.anaconda-assistant-error-message-header-icon {\n  display: flex;\n  width: 24px;\n  height: 24px;\n  color: #4fab4f;\n  margin-right: 10px;\n}\n\n.anaconda-assistant-error-message-header-title {\n  font-size: 13px;\n  font-weight: lighter;\n  font-style: normal;\n}\n\n.anaconda-assistant-error-message-panel {\n  margin-bottom: 20px;\n  border-radius: 4px;\n  background: #fef1f1;\n  display: flex;\n  padding: 16px;\n}\n\n.anaconda-assistant-error-message-panel-icon {\n  width: 16px;\n  height: 16px;\n  min-width: 16px;\n  min-height: 16px;\n  color: #f44336;\n  margin-right: 8px;\n}\n\n.anaconda-assistant-error-message-panel-text {\n  font-size: 13px;\n  font-style: normal;\n  color: #2C303A;\n}\n\n.anaconda-assistant-error-message-footer {\n  display: flex;\n}\n\n.anaconda-assistant-error-message-footer-button {\n  display: flex;\n  border: none;\n  background: #3d3d3d;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  font-size: 13px;\n  font-weight: lighter;\n  font-style: normal;\n  padding: 8px;\n  margin-right: 8px;\n  color: white;\n  cursor: pointer;\n}\n\n.anaconda-assistant-error-message-footer-icon {\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n}\n\n.anaconda-assistant-error-message-panel-text a {\n  color: #6c5af6;\n  text-decoration: underline;\n}\n\n.token-limit .anaconda-assistant-error-message-panel,\n.upgrade .anaconda-assistant-error-message-panel {\n  background: #43b04985;\n}\n\n.token-limit .anaconda-assistant-error-message-panel-text,\n.upgrade .anaconda-assistant-error-message-panel-text {\n  margin-left: 10px;\n  font-size: 13px;\n}\n\n.upgrade .anaconda-assistant-error-message-panel-icon,\n.token-limit .anaconda-assistant-error-message-panel-icon {\n  color: #31a824;\n}\n\n.token-limit .token-limit-restart-button svg {\n  width: 12px;\n  margin-right: 4px;\n}\n\n.token-limit .anaconda-assistant-error-message-footer-retry-button,\n.upgrade .anaconda-assistant-error-message-footer-retry-button {\n  background: #4fab4f;\n  color: white;\n  font-size: 16px;\n  margin-right: 20px;\n  margin-bottom: 40px;\n}\n\n.token-limit .anaconda-assistant-error-message-footer-retry-button:hover,\n.upgrade .anaconda-assistant-error-message-footer-retry-button:hover {\n  background: #0cca4a;\n  color: #06262d;\n}\n`;\n/**\n * ErrorMessage.\n * @alpha\n */\nexport const ErrorMessage = (props) => {\n    const { errorMessage, showLogoutButton, isProTier, resetChat, retryError, logout } = props;\n    const errors = [\n        {\n            match: /org_blacklisted/,\n            className: '',\n            hideChatTitle: true,\n            message: (React.createElement(React.Fragment, null,\n                \"Your organization does not have access to the Anaconda Assistant. Please\",\n                ' ',\n                React.createElement(\"a\", { href: \"https://www.anaconda.com/contact\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"contact sales\"),\n                ' ',\n                \"to request access.\")),\n            messageIcon: React.createElement(Icons.Error, null),\n            buttonIcon: React.createElement(Icons.RotateLeft, null),\n            buttonText: 'Retry Request',\n            onClick: retryError\n        },\n        {\n            match: /Too many requests/,\n            className: '',\n            hideChatTitle: true,\n            message: isProTier\n                ? 'You have reached the maximum number of requests for today.'\n                : 'You have reached the maximum number of requests for today. Upgrade to increase the number of daily requests.',\n            messageIcon: React.createElement(Icons.ChatBot, null),\n            buttonIcon: React.createElement(Icons.Sparkle, null),\n            buttonText: isProTier ? 'Retry Request' : 'Upgrade',\n            onClick: isProTier\n                ? retryError\n                : () => {\n                    window.open('https://anaconda.cloud/pricing');\n                }\n        },\n        {\n            match: /requests allowed exceeded/,\n            className: '',\n            hideChatTitle: true,\n            message: 'You have reached the maximum number of requests. Free tier accounts include a maximum of 30 total requests. Upgrade your account to remove this restriction.',\n            messageIcon: React.createElement(Icons.ChatBot, null),\n            buttonIcon: React.createElement(Icons.Sparkle, null),\n            buttonText: 'Upgrade',\n            onClick: () => {\n                window.open('https://anaconda.cloud/pricing');\n            }\n        },\n        {\n            match: /maximum context length/,\n            className: 'token-limit',\n            hideChatTitle: true,\n            message: (React.createElement(\"p\", null,\n                \"You\\u2019ve exceeded the maximum context length. You can always press the \\\"\",\n                React.createElement(\"a\", { className: \"token-limit-restart-button\", \"data-testid\": \"token-limit-restart-button\", onClick: e => {\n                        e.preventDefault();\n                        resetChat ? resetChat() : null;\n                    } },\n                    React.createElement(Icons.RotateRight, null),\n                    \"Restart\"),\n                \"\\\" button at the bottom to restart the conversation and reset the context-length.\",\n                isProTier ? null : (React.createElement(React.Fragment, null,\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    \"Visit our\",\n                    ' ',\n                    React.createElement(\"a\", { href: \"https://anaconda.cloud/pricing\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"pricing page\"),\n                    ' ',\n                    \"to upgrade to either Starter or Pro, to use a model with a larger context-window.\")))),\n            messageIcon: React.createElement(Icons.ChatBot, null),\n            buttonIcon: isProTier ? null : React.createElement(Icons.Sparkle, null),\n            buttonText: 'Upgrade',\n            onClick: () => {\n                window.open('https://anaconda.cloud/pricing');\n            }\n        }\n    ];\n    const defaultError = {\n        className: '',\n        chatTitle: 'Something went wrong...',\n        message: errorMessage,\n        messageIcon: React.createElement(Icons.Error, null),\n        buttonIcon: React.createElement(Icons.RotateLeft, null),\n        buttonText: 'Retry Request',\n        onClick: retryError\n    };\n    const error = errors.find(e => e.match && errorMessage.match(e.match)) || defaultError;\n    return (React.createElement(Div, { asChildName: `error-message`, className: error.className },\n        React.createElement(Style, { asChildName: \"error-message-style\" }, styleOfErrorMessage),\n        error.hideChatTitle ? null : (React.createElement(Div, { asChildName: \"header\" },\n            React.createElement(Div, { asChildName: \"icon\" },\n                React.createElement(Icons.ChatBot, null)),\n            React.createElement(Div, { asChildName: \"title\" }, error.chatTitle))),\n        React.createElement(Div, { asChildName: \"panel\" },\n            React.createElement(Div, { asChildName: \"icon\" }, error.messageIcon),\n            React.createElement(Div, { asChildName: \"text\" }, error.message)),\n        React.createElement(Div, { asChildName: \"footer\" },\n            error.buttonIcon ? (React.createElement(Button, { asChildName: \"button\", \"data-testid\": \"error-message-action-button\", onClick: () => error.onClick() },\n                React.createElement(Div, { asChildName: \"icon\" }, error.buttonIcon),\n                React.createElement(Div, { asChildName: \"text\" }, error.buttonText))) : null,\n            showLogoutButton ? (React.createElement(Button, { asChildName: \"button\", onClick: () => (logout ? logout() : null) },\n                React.createElement(Div, { asChildName: \"text\" },\n                    React.createElement(\"span\", null, \"Logout\")))) : null)));\n};\n","import React from 'react';\nimport { TextBlock } from './TextBlock';\nimport { CodeBlock } from './CodeBlock';\nimport { extractMessageBlocks } from '../../utils';\n/**\n * ResponseBlocks.\n * @alpha\n */\nexport const ResponseBlocks = (props) => {\n    const { message, runCode, selectedText, activeChatSession } = props;\n    const messageBlocks = extractMessageBlocks(message.content);\n    const messageId = message.messageId || message.message_id;\n    return (React.createElement(React.Fragment, null, messageBlocks.map((block, idx) => block.type === 'text' ? (React.createElement(TextBlock, { key: idx, content: block.content })) : (React.createElement(CodeBlock, { key: idx, block: block, runCode: runCode, responseContainsPythonBlocks: messageBlocks.some(block => block.type === 'python'), messageId: messageId, selectedText: selectedText, activeChatSession: activeChatSession })))));\n};\n","import React from 'react';\nimport { Div, Style } from '../../base-elements';\n/**\n * Style for the text block.\n * @alpha\n */\nexport const styleOfTextBlock = `\n[class^='anaconda-assistant-'][class$='-text-block'] {\n  font-size: 15px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 20px;\n  white-space: pre-wrap;\n  word-break: break-word;\n  margin-top: 16px;\n}\n`;\n/**\n * Text block.\n * @alpha\n */\nexport const TextBlock = (props) => {\n    const { content } = props;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Style, { asChildName: \"style\" }, styleOfTextBlock),\n        React.createElement(Div, { asChildName: \"text-block\" }, content)));\n};\n","export * from './ActiveMessage';\nexport * from './ResponseBlocks';\nexport * from './CodeBlock';\nexport * from './CompletedMessage';\nexport * from './TextBlock';\nexport * from './ErrorMessage';\n","import React from 'react';\nimport { Checkbox, Switch } from '@mui/material';\nimport { Div } from '../base-elements/Div';\nimport { Button } from '../base-elements/Button';\nimport { Style } from '../base-elements/Style';\nimport { Icons } from '../icons';\n/**\n * Style for the TermsAndConditions component.\n * @alpha\n */\nexport const styleOfTermsAndConditions = `\n.anaconda-assistant-terms {\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  color: var(--as-main-font-color, #52596b);\n}\n\n.anaconda-assistant-terms-age-confirmation-header,\n.anaconda-assistant-terms-accept-terms-header,\n.anaconda-assistant-terms-data-collection-header {\n  font-weight: 600;\n  color: var(--as-main-font-color, #2c303a);\n}\n\n.anaconda-assistant-terms-accept-terms-header {\n  margin-bottom: 10px;\n}\n\n.anaconda-assistant-terms-data-collection-header span {\n  font-weight: 400;\n}\n\n.anaconda-assistant-terms-data-collection-setting,\n.anaconda-assistant-terms-accept-terms-setting {\n  align-items: center;\n  display: flex;\n}\n\n.anaconda-assistant-terms-accept-terms-content a {\n  color: #6c5af6;\n}\n\n.anaconda-assistant-terms-age-confirmation-setting {\n  align-items: center;\n  display: flex;\n  margin: 0 -10px;\n}\n\n.anaconda-assistant-terms-age-confirmation-setting\n.anaconda-assistant-terms-age-confirmation-setting-switch span {\n   color: var(--as-main-font-color-secondary, #2c303a);\n}\n\n.anaconda-assistant-terms-age-confirmation-setting\n.anaconda-assistant-terms-age-confirmation-setting-switch\nspan.Mui-checked, span.MuiCheckbox-indeterminate {\n  color: #43B049;\n}\n\n.anaconda-assistant-terms-data-collection-setting-switch\n.MuiSwitch-root .MuiSwitch-track  {\n  background-color: var(--as-main-disabled-color, #000);\n}\n\n.anaconda-assistant-terms-data-collection-setting-switch\n.Mui-checked  {\n  color: var(--primary, #0cca4a);\n}\n\n.anaconda-assistant-terms-data-collection-setting-switch\n.MuiSwitch-root.MuiSwitch-sizeMedium .MuiSwitch-track {\n  background-color: #43B049;\n}\n\n.anaconda-assistant-terms-data-collection-setting-description-disabled {\n  color: var(--as-main-disabled-color, #8c94a6);\n}\n\n.anaconda-assistant-terms-data-collection-content {\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n}\n\n.anaconda-assistant-terms-data-collection-content p svg {\n  color: var(--as-main-disabled-color, #8b94a6);\n  height: 18px;\n}\n\n.anaconda-assistant-terms-accept-terms-button {\n  border-radius: 4px;\n  border: 1px solid var(--primary, #0cca4a);\n  background: #0cca4a;\n  color: #06262d;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 24px;\n  display: inline-flex;\n  padding: 8px 14px;\n  justify-content: center;\n  align-items: center;\n}\n\n.anaconda-assistant-terms-accept-terms-button:disabled {\n  background-color: rgba(67, 176, 73, 0.50);\n  border: none;\n  color: var(--as-main-bg-color-primary, #fff);\n  cursor: default;\n}\n\n.anaconda-assistant-terms-accept-terms-button {\n  &:hover:enabled,\n  &:focus:enabled {\n    color: var(--as-main-font-color-black, #000);\n    cursor: pointer;\n    background: #4fab4f;\n    border: 1px solid #4fab4f;\n  }\n}\n`;\n/**\n * Terms and Conditions component.\n * @alpha\n */\nexport function TermsAndConditions(props) {\n    const { accept, enableDataCollection, setEnableDataCollection, olderThan13, setOlderThan13 } = props;\n    return (React.createElement(Div, { asChildName: \"terms\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfTermsAndConditions),\n        React.createElement(Div, { asChildName: \"accept-terms\" },\n            React.createElement(Div, { asChildName: \"header\" }, \"Terms and Conditions\"),\n            React.createElement(Div, { asChildName: \"content\" },\n                \"By clicking the \",\n                React.createElement(\"strong\", null, \"continue\"),\n                \" button, you agree to our\",\n                ' ',\n                React.createElement(\"a\", { href: \"https://legal.anaconda.com/policies/en/?name=terms-of-service#anaconda-terms-of-service\", target: \"_blank\" }, \"Terms and Conditions\"),\n                ' ',\n                \"and\",\n                ' ',\n                React.createElement(\"a\", { href: \"https://legal.anaconda.com/policies/en/?name=privacy-policy\", target: \"_blank\" }, \"Privacy Policy\"),\n                \".\")),\n        React.createElement(Div, { asChildName: \"age-confirmation\" },\n            React.createElement(Div, { asChildName: \"header\" }, \"Confirm Your Age\"),\n            React.createElement(Div, { asChildName: \"setting\" },\n                React.createElement(Div, { asChildName: \"switch\" },\n                    React.createElement(Checkbox, { checked: olderThan13, onChange: (_, checked) => setOlderThan13(checked) })),\n                React.createElement(Div, { asChildName: \"description\" }, \"I hereby confirm that I'm older than 13 years old.\"))),\n        React.createElement(Div, { asChildName: \"data-collection\" },\n            React.createElement(Div, { asChildName: \"header\" },\n                \"Data Collection \",\n                React.createElement(\"span\", null, \"(Optional)\")),\n            React.createElement(Div, { asChildName: \"setting\" },\n                React.createElement(Div, { asChildName: \"switch\" },\n                    React.createElement(Switch, { checked: enableDataCollection, onChange: (_, checked) => setEnableDataCollection(checked) })),\n                React.createElement(Div, { asChildName: `description${!enableDataCollection ? '-disabled' : ''}` }, enableDataCollection ? 'Enabled' : 'Not enabled')),\n            React.createElement(Div, { asChildName: \"content\" },\n                React.createElement(\"p\", null, \"Help us improve the Anaconda Assistant. Enabling data collection means you acknowledge and agree that we can collect messages and metadata, including sensitive information that may be in your conversations with Anaconda Assistant.\"),\n                React.createElement(\"p\", null,\n                    \"You can opt out of this at any time in the \",\n                    React.createElement(Icons.Settings, null),\n                    \" settings menu.\"))),\n        React.createElement(Div, { asChildName: \"accept-terms\" },\n            React.createElement(Button, { asChildName: \"button\", disabled: !olderThan13, onClick: () => {\n                    if (!olderThan13) {\n                        return;\n                    }\n                    accept();\n                } }, \"Continue\"))));\n}\n","export * from './TermsAndConditions';\n","import React from 'react';\n/**\n * Icons used in Anaconda Assistant.\n * @alpha\n */\nexport var Icons;\n(function (Icons) {\n    /**\n     * Anaconda Assistant logo.\n     */\n    function ChatBot(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 640 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M160 0C124.7 0 96 28.7 96 64V176H59.7c-5.5-9.6-15.9-16-27.7-16c-17.7 0-32 14.3-32 32s14.3 32 32 32c11.8 0 22.2-6.4 27.7-16H96V352c0 35.3 28.7 64 64 64h64v80c0 6.1 3.4 11.6 8.8 14.3s11.9 2.1 16.8-1.5L373.3 416H480c35.3 0 64-28.7 64-64V208h36.3c5.5 9.6 15.9 16 27.7 16c17.7 0 32-14.3 32-32s-14.3-32-32-32c-11.8 0-22.2 6.4-27.7 16H544V64c0-35.3-28.7-64-64-64H160zm0 128c0-17.7 14.3-32 32-32H448c17.7 0 32 14.3 32 32V256c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V128zm64 96a32 32 0 1 0 0-64 32 32 0 1 0 0 64zm192 0a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\" })));\n    }\n    Icons.ChatBot = ChatBot;\n    /**\n     * Anaconda logo.\n     */\n    function AnacondaLogo(props) {\n        return (React.createElement(\"svg\", { viewBox: \"0 0 20 20\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props },\n            React.createElement(\"g\", null,\n                React.createElement(\"path\", { d: \"M3.69338 15.348V15.2893C3.69338 14.6966 3.75197 14.1333 3.84112 13.5713V13.5126L3.78253 13.4832C3.25018 13.2763 2.7484 12.9799 2.24662 12.713L2.18803 12.6836L2.15874 12.7423C1.83398 13.3938 1.56781 14.1052 1.33093 14.8167L1.30164 14.8754L1.36022 14.9048C2.09888 15.1117 2.83755 15.2599 3.60551 15.3199L3.69466 15.3493L3.69338 15.348Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M5.22926 5.18455C5.22926 5.16496 5.22926 5.16496 5.22926 5.18455C4.78606 5.18455 4.37215 5.21393 3.92896 5.24331C3.98754 5.68781 4.0474 6.10293 4.16584 6.54743C4.4613 6.04417 4.81535 5.5703 5.22926 5.18455Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M3.69337 15.8807V15.8219H3.63479C3.01456 15.7632 2.36505 15.6444 1.71426 15.4962L1.53723 15.4669L1.62638 15.615C2.18802 16.4746 2.89612 17.2449 3.72394 17.9257L3.84238 18.0445V17.8375C3.75323 17.1555 3.69464 16.4746 3.69464 15.882L3.69337 15.8807Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M6.79449 0.533936C6.02653 0.800892 5.28787 1.15598 4.60779 1.60048C5.10957 1.68989 5.61263 1.80741 6.11441 1.95557C6.32073 1.48169 6.52832 1.00781 6.79449 0.533936Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M10.0153 0C9.6307 0 9.24736 0.029378 8.89331 0.0587559C9.42566 0.413846 9.92744 0.828969 10.3999 1.27347L10.7845 1.62856L10.3999 2.01431C10.0752 2.31064 9.75042 2.66573 9.45495 3.0221V3.05148C9.45495 3.05148 9.39637 3.11023 9.30722 3.22902C9.5441 3.19964 9.77971 3.19964 10.0166 3.19964C13.7685 3.19964 16.811 6.25112 16.811 10.0141C16.811 13.777 13.7685 16.8285 10.0166 16.8285C8.71628 16.8285 7.50513 16.4734 6.471 15.8207C5.96921 15.8794 5.43686 15.9101 4.93508 15.9101C4.6982 15.9101 4.46259 15.9101 4.22571 15.8807C4.255 16.6509 4.31486 17.4505 4.43202 18.2808C6.0278 19.3767 7.94705 19.9987 10.0153 19.9987C15.54 19.9987 20 15.5243 20 9.98467C20 4.44501 15.5387 0 10.0153 0Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M8.68565 2.37066C8.89197 2.13308 9.09956 1.89678 9.30588 1.68858C8.83339 1.30283 8.3316 0.918363 7.82855 0.592651C7.50379 1.12656 7.23761 1.68858 7.00073 2.25187C7.44393 2.42941 7.88713 2.60696 8.33033 2.81516C8.50736 2.57758 8.65509 2.40003 8.68438 2.37066H8.68565Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M1.92056 8.08915L1.94985 8.1479L2.00843 8.11852C2.48093 7.79281 2.95342 7.4671 3.45647 7.20014L3.51506 7.17077V7.11201C3.36732 6.54872 3.24888 5.95605 3.1903 5.36338V5.30463H3.13171C2.39305 5.45279 1.65438 5.63034 0.975576 5.89729L0.916992 5.92667L0.946284 5.98543C1.1526 6.69689 1.50792 7.40707 1.92056 8.08915Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M1.80213 9.03692L1.74355 9.09568C1.2112 9.54018 0.70942 10.0141 0.236929 10.548L0.178345 10.6067L0.236929 10.6655C0.769277 11.11 1.30035 11.5251 1.89128 11.9096L1.94987 11.939L1.97916 11.8802C2.24533 11.4063 2.5408 10.9618 2.86556 10.5173L2.89485 10.4586L2.86556 10.4292C2.51151 10.0141 2.15619 9.59894 1.83143 9.12506L1.80213 9.03564V9.03692Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M5.73103 15.3774H5.90806L5.76032 15.2586C5.22797 14.8141 4.75548 14.3109 4.40143 13.7182V13.6888L4.28299 13.6301V13.7195C4.22441 14.2227 4.16455 14.7566 4.16455 15.2893V15.348H4.22313C4.46002 15.348 4.69563 15.3774 4.93251 15.3774H5.72976H5.73103Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M5.40623 4.29686C5.52467 3.7936 5.64311 3.31972 5.82014 2.84457C5.19991 2.66702 4.5504 2.51885 3.89961 2.42944C3.84102 3.11152 3.84102 3.73357 3.87031 4.38499C4.3721 4.32624 4.87515 4.29558 5.40623 4.29558V4.29686Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M6.3512 4.26617C6.7944 3.99921 7.26689 3.76291 7.73938 3.58409C7.38533 3.40654 7.03 3.25838 6.67595 3.13959C6.55751 3.49468 6.43907 3.88042 6.3512 4.26489V4.26617Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M1.71294 12.3847H1.65436C1.15258 12.059 0.649521 11.7027 0.17703 11.3182L0.0292969 11.1994L0.0585888 11.3769C0.17703 12.3247 0.443204 13.2737 0.855838 14.1615L0.914422 14.3096L0.973006 14.1615C1.17932 13.5982 1.4162 13.0362 1.68238 12.5023L1.71167 12.3835L1.71294 12.3847Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M2.98391 2.90332C2.39298 3.49598 1.86191 4.17679 1.448 4.88824C1.94978 4.74008 2.48213 4.62129 3.0132 4.5025C2.98391 3.96859 2.98391 3.43595 2.98391 2.90204V2.90332Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M3.27938 9.92594V9.7484C3.30867 9.12635 3.39782 8.53368 3.57484 7.97039L3.63343 7.79285L3.48569 7.88226C3.10108 8.11984 2.71774 8.35614 2.33312 8.62309L2.27454 8.65247L2.36369 8.71123C2.62986 9.06632 2.89603 9.45206 3.1915 9.77778L3.28065 9.92594H3.27938Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M3.36735 10.9631L3.33806 10.7855L3.24891 10.9337C2.98274 11.3194 2.71656 11.7333 2.48095 12.1484L2.45166 12.2072L2.51024 12.2365C2.92415 12.4741 3.36735 12.681 3.81055 12.888L3.95828 12.9467L3.8997 12.7986C3.63353 12.2353 3.4565 11.5838 3.36735 10.9618V10.9631Z\", fill: \"#3DAE2B\" }),\n                React.createElement(\"path\", { d: \"M1.41747 8.56306L1.47606 8.53369L1.44677 8.47493C1.12201 7.97167 0.855833 7.43776 0.589659 6.90513L0.531075 6.75696L0.472491 6.9345C0.177025 7.85288 0.0292919 8.77126 0 9.74968V9.92722L0.118441 9.80843C0.503057 9.33455 0.946256 8.91943 1.41875 8.56434L1.41747 8.56306Z\", fill: \"#3DAE2B\" }))));\n    }\n    Icons.AnacondaLogo = AnacondaLogo;\n    /**\n     * Sparkle icon.\n     */\n    function Sparkle(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 16 16\", fill: \"none\", ...props },\n            React.createElement(\"path\", { d: \"M10.125 3.25C10.0312 3.1875 10 3.09375 10 3C10 2.90625 10.0312 2.84375 10.125 2.78125L12 2L12.75 0.15625C12.8125 0.0625 12.9062 0 13 0C13.0938 0 13.1562 0.0625 13.2188 0.15625L14 2L15.8438 2.78125C15.9375 2.84375 16 2.90625 16 3C16 3.09375 15.9375 3.1875 15.8438 3.25L14 4L13.2188 5.875C13.1562 5.96875 13.0938 6 13 6C12.9062 6 12.8125 5.96875 12.75 5.875L12 4L10.125 3.25ZM15.8438 12.7812C15.9375 12.8438 16 12.9062 16 13C16 13.0938 15.9375 13.1875 15.8438 13.25L14 14L13.2188 15.875C13.1562 15.9688 13.0938 16 13 16C12.9062 16 12.8125 15.9688 12.75 15.875L12 14L10.125 13.25C10.0312 13.1875 10 13.0938 10 13C10 12.9062 10.0312 12.8438 10.125 12.7812L12 12L12.75 10.1562C12.8125 10.0625 12.9062 10 13 10C13.0938 10 13.1562 10.0625 13.2188 10.1562L14 12L15.8438 12.7812ZM12 8C12 8.1875 11.875 8.375 11.7188 8.4375L8.1875 10.2188L6.4375 13.75C6.34375 13.9062 6.15625 14 6 14C5.78125 14 5.625 13.9062 5.53125 13.75L3.78125 10.2188L0.25 8.4375C0.09375 8.375 0 8.1875 0 8C0 7.8125 0.09375 7.625 0.25 7.5625L3.78125 5.78125L5.53125 2.28125C5.71875 1.9375 6.25 1.9375 6.4375 2.28125L8.1875 5.78125L11.7188 7.5625C11.875 7.625 12 7.8125 12 8Z\", fill: \"currentColor\" })));\n    }\n    Icons.Sparkle = Sparkle;\n    /**\n     * Settings icon.\n     */\n    function Settings(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"20\", height: \"21\", viewBox: \"0 0 20 21\", ...props },\n            React.createElement(\"path\", { d: \"M19.4922 13.4688C19.4922 14.1719 17.7734 17.3359 16.9922 17.375C16.875 17.375 16.7578 17.3359 16.6797 17.2578L14.8438 16.2031C14.1406 16.7891 13.3594 17.2578 12.5 17.5703V19.6797C12.5 19.9922 12.2656 20.2266 11.9531 20.3047C11.2891 20.4609 10.5859 20.5 9.96094 20.5C9.29688 20.5 8.63281 20.4219 7.96875 20.3047C7.69531 20.2266 7.5 19.9922 7.5 19.6797V17.5703C6.60156 17.2578 5.82031 16.7891 5.11719 16.2031L3.28125 17.2578C3.20312 17.3359 3.08594 17.375 2.96875 17.375C2.10938 17.375 0.46875 14.0547 0.46875 13.4688C0.46875 13.2734 0.585938 13.0391 0.78125 12.9219L2.61719 11.9062C2.53906 11.4375 2.5 10.9688 2.5 10.5C2.5 10.0312 2.53906 9.60156 2.61719 9.13281L0.78125 8.11719C0.585938 8 0.46875 7.76562 0.46875 7.53125C0.46875 6.86719 2.1875 3.66406 2.96875 3.66406C3.08594 3.66406 3.20312 3.70312 3.28125 3.78125L5.11719 4.83594C5.82031 4.21094 6.60156 3.78125 7.5 3.46875V1.35938C7.5 1.04688 7.69531 0.8125 7.96875 0.734375C8.63281 0.578125 9.29688 0.5 10 0.5C10.6641 0.5 11.3281 0.578125 11.9922 0.734375C12.2656 0.773438 12.5 1.04688 12.5 1.35938V3.46875C13.3594 3.78125 14.1406 4.21094 14.8438 4.83594L16.6797 3.78125C16.7578 3.70312 16.875 3.66406 16.9922 3.66406C17.8516 3.66406 19.4922 6.98438 19.4922 7.53125C19.4922 7.76562 19.375 8 19.1797 8.11719L17.3438 9.13281C17.4219 9.60156 17.5 10.0703 17.5 10.5C17.5 10.9688 17.4219 11.4375 17.3438 11.9062L19.1797 12.9219C19.375 13.0391 19.4922 13.2734 19.4922 13.4688ZM10 13.625C11.7188 13.625 13.125 12.2578 13.125 10.5C13.125 8.78125 11.7188 7.375 10 7.375C8.24219 7.375 6.875 8.78125 6.875 10.5C6.875 12.2578 8.24219 13.625 10 13.625Z\", fill: \"currentColor\" })));\n    }\n    Icons.Settings = Settings;\n    /**\n     * Magic icon.\n     */\n    function Magic(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", ...props },\n            React.createElement(\"path\", { d: \"M15.1875 4.875C15.0469 4.78125 15 4.64062 15 4.5C15 4.35938 15.0469 4.26562 15.1875 4.17188L18 3L19.125 0.234375C19.2188 0.09375 19.3594 0 19.5 0C19.6406 0 19.7344 0.09375 19.8281 0.234375L21 3L23.7656 4.17188C23.9062 4.26562 24 4.35938 24 4.5C24 4.64062 23.9062 4.78125 23.7656 4.875L21 6L19.8281 8.8125C19.7344 8.95312 19.6406 9 19.5 9C19.3594 9 19.2188 8.95312 19.125 8.8125L18 6L15.1875 4.875ZM23.7656 19.1719C23.9062 19.2656 24 19.3594 24 19.5C24 19.6406 23.9062 19.7812 23.7656 19.875L21 21L19.8281 23.8125C19.7344 23.9531 19.6406 24 19.5 24C19.3594 24 19.2188 23.9531 19.125 23.8125L18 21L15.1875 19.875C15.0469 19.7812 15 19.6406 15 19.5C15 19.3594 15.0469 19.2656 15.1875 19.1719L18 18L19.125 15.2344C19.2188 15.0938 19.3594 15 19.5 15C19.6406 15 19.7344 15.0938 19.8281 15.2344L21 18L23.7656 19.1719ZM18 12C18 12.2812 17.8125 12.5625 17.5781 12.6562L12.2812 15.3281L9.65625 20.625C9.51562 20.8594 9.23438 21 9 21C8.67188 21 8.4375 20.8594 8.29688 20.625L5.67188 15.3281L0.375 12.6562C0.140625 12.5625 0 12.2812 0 12C0 11.7188 0.140625 11.4375 0.375 11.3438L5.67188 8.67188L8.29688 3.42188C8.57812 2.90625 9.375 2.90625 9.65625 3.42188L12.2812 8.67188L17.5781 11.3438C17.8125 11.4375 18 11.7188 18 12Z\", fill: \"currentColor\" })));\n    }\n    Icons.Magic = Magic;\n    /**\n     * Magic wand icon.\n     */\n    function MagicWand(props) {\n        return (React.createElement(\"svg\", { viewBox: \"0 0 22 21\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props },\n            React.createElement(\"path\", { d: \"M3.30469 8.50781L2.48438 6.51562L0.570312 5.73438C0.492188 5.69531 0.414062 5.57812 0.414062 5.5C0.414062 5.42188 0.492188 5.34375 0.570312 5.26562L2.48438 4.48438L3.30469 2.53125C3.34375 2.45312 3.46094 2.375 3.53906 2.375C3.61719 2.41406 3.73438 2.45312 3.77344 2.53125L4.59375 4.44531V4.48438L6.50781 5.26562C6.58594 5.30469 6.66406 5.42188 6.66406 5.53906C6.66406 5.61719 6.58594 5.69531 6.50781 5.73438L4.59375 6.55469L3.77344 8.50781C3.73438 8.58594 3.61719 8.625 3.53906 8.625C3.46094 8.625 3.34375 8.58594 3.30469 8.50781ZM8.53906 3L7.36719 2.49219C7.32812 2.49219 7.28906 2.41406 7.28906 2.375C7.28906 2.33594 7.32812 2.29688 7.36719 2.25781L8.53906 1.75L9.04688 0.617188C9.04688 0.539062 9.16406 0.5 9.16406 0.5C9.20312 0.5 9.28125 0.539062 9.32031 0.617188L9.78906 1.75L10.9609 2.21875C11 2.25781 11.0391 2.29688 11.0391 2.375C11.0391 2.41406 11 2.49219 10.9609 2.49219L9.78906 3L9.32031 4.17188C9.28125 4.25 9.24219 4.25 9.16406 4.25C9.125 4.25 9.04688 4.25 9.04688 4.13281L8.53906 3ZM20.4141 2.375C21.1562 3.11719 21.1562 4.32812 20.4141 5.03125L5.49219 19.9531C4.78906 20.6953 3.57812 20.6953 2.83594 19.9531L1.54688 18.625C0.804688 17.9219 0.804688 16.7109 1.54688 16.0078L16.4688 1.08594C17.1719 0.34375 18.3828 0.34375 19.0859 1.08594L20.4141 2.375ZM14.5547 7.84375L18.6562 3.70312L17.7969 2.84375L13.6562 6.94531L14.5547 7.84375ZM20.2578 15.2656C20.3359 15.3438 20.4141 15.4219 20.4141 15.5391C20.4141 15.6172 20.3359 15.6953 20.2578 15.7344L18.3438 16.5547L17.5234 18.5078C17.4844 18.5859 17.3672 18.625 17.2891 18.625C17.2109 18.625 17.0938 18.5859 17.0547 18.5078L16.2344 16.5547L14.3203 15.7344C14.2422 15.6953 14.1641 15.6172 14.1641 15.5C14.1641 15.4219 14.2422 15.3438 14.3203 15.3047L16.2344 14.4844L17.0547 12.5312C17.0938 12.4531 17.2109 12.375 17.2891 12.375C17.3672 12.375 17.4844 12.4531 17.5234 12.5312L18.3438 14.4844L20.2578 15.2656Z\", fill: \"currentColor\" })));\n    }\n    Icons.MagicWand = MagicWand;\n    /**\n     * Copy icon\n     */\n    function Copy(props) {\n        // Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools\n        return (React.createElement(\"svg\", { viewBox: \"0 0 20 21\", xmlns: \"http://www.w3.org/2000/svg\", ...props },\n            React.createElement(\"path\", { d: \"M15 4.25C15 4.95312 15.5469 5.5 16.25 5.5H20V13.625C20 14.6797 19.1406 15.5 18.125 15.5H10.625C9.57031 15.5 8.75 14.6797 8.75 13.625V2.375C8.75 1.35938 9.57031 0.5 10.625 0.5H15V4.25ZM16.25 0.5L20 4.25H16.25V0.5ZM7.5 14.25C7.5 15.6562 8.59375 16.75 10 16.75H11.25V18.625C11.25 19.6797 10.3906 20.5 9.375 20.5H1.875C0.820312 20.5 0 19.6797 0 18.625V7.375C0 6.35938 0.820312 5.5 1.875 5.5H7.5V14.25Z\", fill: \"currentColor\" })));\n    }\n    Icons.Copy = Copy;\n    /**\n     * User icon.\n     */\n    function User(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512H418.3c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304H178.3z\" })));\n    }\n    Icons.User = User;\n    /**\n     * Send icon.\n     */\n    function Send(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M498.1 5.6c10.1 7 15.4 19.1 13.5 31.2l-64 416c-1.5 9.7-7.4 18.2-16 23s-18.9 5.4-28 1.6L284 427.7l-68.5 74.1c-8.9 9.7-22.9 12.9-35.2 8.1S160 493.2 160 480V396.4c0-4 1.5-7.8 4.2-10.7L331.8 202.8c5.8-6.3 5.6-16-.4-22s-15.7-6.4-22-.7L106 360.8 17.7 316.6C7.1 311.3 .3 300.7 0 288.9s5.9-22.8 16.1-28.7l448-256c10.7-6.1 23.9-5.5 34 1.4z\" })));\n    }\n    Icons.Send = Send;\n    /**\n     * Stop icon.\n     */\n    function Stop(props) {\n        return (React.createElement(\"svg\", { width: \"20\", height: \"20\", viewBox: \"0 0 22 23\", xmlns: \"http://www.w3.org/2000/svg\", ...props },\n            React.createElement(\"path\", { d: \"M11 0.75C17.0586 0.75 22 5.69141 22 11.75C22 17.8516 17.0586 22.75 11 22.75C4.89844 22.75 0 17.8516 0 11.75C0 5.69141 4.89844 0.75 11 0.75ZM15.125 14.8438V8.65625C15.125 8.09766 14.6523 7.625 14.0938 7.625H7.90625C7.30469 7.625 6.875 8.09766 6.875 8.65625V14.8438C6.875 15.4453 7.30469 15.875 7.90625 15.875H14.0938C14.6523 15.875 15.125 15.4453 15.125 14.8438Z\", fill: \"currentColor\" })));\n    }\n    Icons.Stop = Stop;\n    /**\n     * Rotate left icon.\n     */\n    function RotateLeft(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M126.9 142.9L184 200l-24 24H0V64L24 40 81.6 97.6l0 0c87.5-87.5 229.3-87.5 316.8 0s87.5 229.3 0 316.8s-229.3 87.5-316.8 0l45.3-45.3c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3s-163.8-62.5-226.3 0l0 0z\" })));\n    }\n    Icons.RotateLeft = RotateLeft;\n    /**\n     * Rotate right icon.\n     */\n    function RotateRight(props) {\n        // <!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M386.3 160H336c-17.7 0-32 14.3-32 32s14.3 32 32 32H464c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32s-32 14.3-32 32v51.2L414.4 97.6c-87.5-87.5-229.3-87.5-316.8 0s-87.5 229.3 0 316.8s229.3 87.5 316.8 0c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0c-62.5 62.5-163.8 62.5-226.3 0s-62.5-163.8 0-226.3s163.8-62.5 226.3 0L386.3 160z\" })));\n    }\n    Icons.RotateRight = RotateRight;\n    /**\n     * Play icon.\n     */\n    function Play(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9V344c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z\" })));\n    }\n    Icons.Play = Play;\n    /**\n     * Error icon.\n     */\n    function Error(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm24-384v24V264v24H232V264 152 128h48zM232 368V320h48v48H232z\" })));\n    }\n    Icons.Error = Error;\n    /**\n     * Thumbs up icon.\n     */\n    function ThumbsUp(props) {\n        return (React.createElement(\"svg\", { \"data-testid\": \"thumbs-up\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2H464c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48H294.5c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3V320 272 247.1c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192H96c17.7 0 32 14.3 32 32V448c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32V224c0-17.7 14.3-32 32-32z\" })));\n    }\n    Icons.ThumbsUp = ThumbsUp;\n    /**\n     * Thumbs down icon.\n     */\n    function ThumbsDown(props) {\n        return (React.createElement(\"svg\", { \"data-testid\": \"thumbs-down\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M313.4 32.9c26 5.2 42.9 30.5 37.7 56.5l-2.3 11.4c-5.3 26.7-15.1 52.1-28.8 75.2H464c26.5 0 48 21.5 48 48c0 18.5-10.5 34.6-25.9 42.6C497 275.4 504 288.9 504 304c0 23.4-16.8 42.9-38.9 47.1c4.4 7.3 6.9 15.8 6.9 24.9c0 21.3-13.9 39.4-33.1 45.6c.7 3.3 1.1 6.8 1.1 10.4c0 26.5-21.5 48-48 48H294.5c-19 0-37.5-5.6-53.3-16.1l-38.5-25.7C176 420.4 160 390.4 160 358.3V320 272 247.1c0-29.2 13.3-56.7 36-75l7.4-5.9c26.5-21.2 44.6-51 51.2-84.2l2.3-11.4c5.2-26 30.5-42.9 56.5-37.7zM32 192H96c17.7 0 32 14.3 32 32V448c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32V224c0-17.7 14.3-32 32-32z\", transform: \"rotate(180, 256, 256)\" })));\n    }\n    Icons.ThumbsDown = ThumbsDown;\n    /**\n     * Change icon.\n     */\n    function Change(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 640 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M150.6 73.4c-12.5-12.5-32.8-12.5-45.3 0l-96 96c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L96 173.3V320c0 53 43 96 96 96H304c17.7 0 32-14.3 32-32s-14.3-32-32-32H192c-17.7 0-32-14.3-32-32V173.3l41.4 41.4c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-96-96zM336 96c-17.7 0-32 14.3-32 32s14.3 32 32 32H448c17.7 0 32 14.3 32 32V338.7l-41.4-41.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l96 96c12.5 12.5 32.8 12.5 45.3 0l96-96c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L544 338.7V192c0-53-43-96-96-96H336z\" })));\n    }\n    Icons.Change = Change;\n    /**\n     * Arrow right icon.\n     */\n    function ArrowRight(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\" })));\n    }\n    Icons.ArrowRight = ArrowRight;\n    /**\n     * Bars icon.\n     */\n    function Bars(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z\" })));\n    }\n    Icons.Bars = Bars;\n    /**\n     * Plus icon.\n     */\n    function Plus(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M256 80V48H192V80 224H48 16v64H48 192V432v32h64V432 288H400h32V224H400 256V80z\" })));\n    }\n    Icons.Plus = Plus;\n    /**\n     * Frame icon.\n     */\n    function Frame(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 448 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M448 128c0-17.7-14.3-32-32-32l-32 0 0-32c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 32L128 96l0-32c0-17.7-14.3-32-32-32S64 46.3 64 64l0 32L32 96C14.3 96 0 110.3 0 128s14.3 32 32 32l32 0 0 192-32 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l32 0 0 32c0 17.7 14.3 32 32 32s32-14.3 32-32l0-32 192 0 0 32c0 17.7 14.3 32 32 32s32-14.3 32-32l0-32 32 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-32 0 0-192 32 0c17.7 0 32-14.3 32-32zM128 352l0-192 192 0 0 192-192 0z\" })));\n    }\n    Icons.Frame = Frame;\n    /**\n     * Code icon.\n     */\n    function Code(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 640 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M392.8 1.2c-17-4.9-34.7 5-39.6 22l-128 448c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l128-448c4.9-17-5-34.7-22-39.6zm80.6 120.1c-12.5 12.5-12.5 32.8 0 45.3L562.7 256l-89.4 89.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l112-112c12.5-12.5 12.5-32.8 0-45.3l-112-112c-12.5-12.5-32.8-12.5-45.3 0zm-306.7 0c-12.5-12.5-32.8-12.5-45.3 0l-112 112c-12.5 12.5-12.5 32.8 0 45.3l112 112c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256l89.4-89.4c12.5-12.5 12.5-32.8 0-45.3z\" })));\n    }\n    Icons.Code = Code;\n    /**\n     * Chevron right icon.\n     */\n    function ChevronRight(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 320 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z\" })));\n    }\n    Icons.ChevronRight = ChevronRight;\n    /**\n     * Chevron left icon.\n     */\n    function ChevronLeft(props) {\n        return (React.createElement(\"svg\", { width: \"8\", height: \"14\", viewBox: \"0 0 8 14\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props },\n            React.createElement(\"path\", { d: \"M7.82582 11.9242L2.9016 6.99996L7.82582 2.0757L6.5 0.75L0.25 6.99996L6.5 13.25L7.82582 11.9242Z\", fill: \"currentColor\" })));\n    }\n    Icons.ChevronLeft = ChevronLeft;\n    /**\n     * Message icon.\n     */\n    function Message(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M160 368c26.5 0 48 21.5 48 48v16l72.5-54.4c8.3-6.2 18.4-9.6 28.8-9.6H448c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H64c-8.8 0-16 7.2-16 16V352c0 8.8 7.2 16 16 16h96zm48 124l-.2 .2-5.1 3.8-17.1 12.8c-4.8 3.6-11.3 4.2-16.8 1.5s-8.8-8.2-8.8-14.3V474.7v-6.4V468v-4V416H112 64c-35.3 0-64-28.7-64-64V64C0 28.7 28.7 0 64 0H448c35.3 0 64 28.7 64 64V352c0 35.3-28.7 64-64 64H309.3L208 492z\" })));\n    }\n    Icons.Message = Message;\n    /**\n     * Solid message icon.\n     */\n    function SolidMessage(props) {\n        return (\n        // Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc.\n        React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M64 0C28.7 0 0 28.7 0 64V352c0 35.3 28.7 64 64 64h96v80c0 6.1 3.4 11.6 8.8 14.3s11.9 2.1 16.8-1.5L309.3 416H448c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64z\" })));\n    }\n    Icons.SolidMessage = SolidMessage;\n    /**\n     * Close icon.\n     */\n    function Close(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 384 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" })));\n    }\n    Icons.Close = Close;\n    /**\n     * Clip icon.\n     */\n    function Clip(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"10\", height: \"14\", viewBox: \"0 0 10 14\", ...props },\n            React.createElement(\"path\", { d: \"M9.6875 3.875V9.15625C9.6875 11.7461 7.45312 13.8281 4.78711 13.5996C2.47656 13.3965 0.75 11.3398 0.75 9.00391V6.10938C0.75 5.75391 1.00391 5.52539 1.33398 5.52539C1.63867 5.52539 1.94336 5.7793 1.94336 6.10938V9.0293C1.94336 10.7051 3.28906 12.2793 4.96484 12.3809C6.89453 12.5332 8.46875 11.0352 8.46875 9.15625V4.00195C8.46875 2.93555 7.68164 1.9707 6.61523 1.86914C5.39648 1.76758 4.40625 2.70703 4.40625 3.875V9.15625C4.40625 9.63867 4.83789 10.0195 5.3457 9.94336C5.75195 9.89258 6.03125 9.51172 6.03125 9.10547V4.48438C6.03125 4.12891 6.28516 3.875 6.61523 3.875C6.91992 3.875 7.25 4.1543 7.25 4.48438V9.0293C7.25 10.1211 6.46289 11.0859 5.39648 11.1621C4.17773 11.2891 3.1875 10.3242 3.1875 9.15625L3.16211 4.02734C3.16211 2.32617 4.50781 0.751953 6.18359 0.650391C8.11328 0.523438 9.6875 2.02148 9.6875 3.875Z\", fill: \"currentColor\" })));\n    }\n    Icons.Clip = Clip;\n    /**\n     * Warning icon.\n     */\n    function Warning(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 512 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480H40c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24V296c0 13.3 10.7 24 24 24s24-10.7 24-24V184c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\" })));\n    }\n    Icons.Warning = Warning;\n    /**\n     * Trash icon.\n     */\n    function Trash(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: \"1em\", viewBox: \"0 0 448 512\", ...props },\n            React.createElement(\"path\", { fill: \"currentColor\", d: \"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\" })));\n    }\n    Icons.Trash = Trash;\n    /**\n     * Book icon.\n     */\n    function Book(props) {\n        return (React.createElement(\"svg\", { height: \"1em\", viewBox: \"0 0 14 16\", xmlns: \"http://www.w3.org/2000/svg\", ...props },\n            React.createElement(\"path\", { d: \"M14 11.25C14 11.5938 13.7812 11.875 13.5 11.9688V14.0625C13.7812 14.1562 14 14.4375 14 14.75V15.25C14 15.6875 13.6562 16 13.25 16H3C1.3125 16 0 14.6875 0 13V3C0 1.34375 1.3125 0 3 0H13.25C13.6562 0 14 0.34375 14 0.75V11.25ZM8.15625 6.1875L6.59375 6.8125C6.53125 6.84375 6.5 6.90625 6.5 7C6.5 7.0625 6.53125 7.15625 6.59375 7.1875L8.15625 7.8125L8.8125 9.375C8.84375 9.4375 8.90625 9.5 9 9.5C8.96875 9.5 9 9.5 9 9.5C9.0625 9.5 9.125 9.4375 9.15625 9.375L9.8125 7.8125L11.375 7.1875C11.4375 7.15625 11.5 7.0625 11.5 7C11.5 6.9375 11.4375 6.875 11.375 6.84375L9.8125 6.1875L9.15625 4.625C9.125 4.5625 9.0625 4.5 8.96875 4.5C8.90625 4.5 8.84375 4.5625 8.8125 4.625L8.15625 6.15625V6.1875ZM4.0625 3.40625C4 3.40625 4 3.46875 4 3.5C4 3.5625 4 3.59375 4.0625 3.625L4.96875 4L5.375 4.9375C5.40625 4.96875 5.375 5 5.46875 5C5.53125 5 5.5625 4.96875 5.59375 4.9375L5.96875 4L6.90625 3.625C6.96875 3.59375 7 3.5625 7 3.5C7 3.46875 6.96875 3.4375 6.90625 3.40625L5.96875 3L5.5625 2.09375C5.5625 2.03125 5.46875 2 5.46875 2C5.4375 2 5.40625 2.03125 5.34375 2.09375L4.96875 3L4.0625 3.40625ZM12 14V12H3C2.4375 12 2 12.4688 2 13C2 13.5625 2.4375 14 3 14H12Z\", fill: \"currentColor\" })));\n    }\n    Icons.Book = Book;\n    /**\n     * DataCatalog icon.\n     */\n    function DataCatalog(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"30\", height: \"31\", viewBox: \"0 0 30 31\", ...props },\n            React.createElement(\"path\", { d: \"M30 4.8125C30 4.82031 30 4.82812 30 4.83594C29.9609 7.48438 23.2578 9.625 15 9.625C6.74219 9.625 0.0390625 7.48438 0 4.83594C0 4.82812 0 4.82031 0 4.8125C0 2.15625 6.71875 0 15 0C23.2812 0 30 2.15625 30 4.8125ZM30 8.4375C30 8.4375 30 8.45312 30 8.46094C29.9609 11.1094 23.2578 13.25 15 13.25C6.74219 13.25 0.0390625 11.1094 0 8.46094V8.4375L0.078125 15.2187C0.078125 15.2187 0.078125 15.25 0.078125 15.2578C0.117188 17.8906 6.78125 20.0234 15 20.0234C23.2188 20.0234 29.8828 17.8906 29.9219 15.2578C29.9219 15.25 29.9219 15.2187 29.9219 15.2187L30 8.4375ZM30 18.4375C30 18.4375 30 18.4531 30 18.4609C29.9609 21.1094 23.2578 23.25 15 23.25C6.74219 23.25 0.0390625 21.1094 0 18.4609V18.4375L0.078125 25.2188C0.078125 25.2188 0.078125 25.25 0.078125 25.2578C0.117188 27.8906 6.78125 30.0234 15 30.0234C23.2188 30.0234 29.8828 27.8906 29.9219 25.2578C29.9219 25.25 29.9219 25.2188 29.9219 25.2188L30 18.4375Z\", fill: \"currentColor\" })));\n    }\n    Icons.DataCatalog = DataCatalog;\n    /**\n     * Share icon.\n     */\n    function Share(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", ...props },\n            React.createElement(\"g\", { clipPath: \"url(#clip0_289_5006)\" },\n                React.createElement(\"path\", { d: \"M18 16.08C17.24 16.08 16.56 16.38 16.04 16.85L8.91 12.7C8.96 12.47 9 12.24 9 12C9 11.76 8.96 11.53 8.91 11.3L15.96 7.19C16.5 7.69 17.21 8 18 8C19.66 8 21 6.66 21 5C21 3.34 19.66 2 18 2C16.34 2 15 3.34 15 5C15 5.24 15.04 5.47 15.09 5.7L8.04 9.81C7.5 9.31 6.79 9 6 9C4.34 9 3 10.34 3 12C3 13.66 4.34 15 6 15C6.79 15 7.5 14.69 8.04 14.19L15.16 18.35C15.11 18.56 15.08 18.78 15.08 19C15.08 20.61 16.39 21.92 18 21.92C19.61 21.92 20.92 20.61 20.92 19C20.92 17.39 19.61 16.08 18 16.08Z\", fill: \"currentColor\" })),\n            React.createElement(\"defs\", null,\n                React.createElement(\"clipPath\", { id: \"clip0_289_5006\" },\n                    React.createElement(\"rect\", { width: \"24\", height: \"24\", fill: \"white\" })))));\n    }\n    Icons.Share = Share;\n    /**\n     * Panel icon.\n     */\n    function Panel(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"18\", height: \"18\", viewBox: \"0 0 18 18\", ...props },\n            React.createElement(\"g\", { clipPath: \"url(#clip0_345_19040)\" },\n                React.createElement(\"path\", { d: \"M17.9113 0.428824C17.8716 0.1857 17.6841 0.0656821 17.3871 0.0427376C16.5951 -0.018595 15.8057 -0.0247723 15.0168 0.0970103C14.1202 0.23556 13.2544 0.476919 12.4179 0.823735C11.2931 1.28969 10.265 1.91801 9.31549 2.67783C9.26077 2.72151 9.17297 2.76034 9.10899 2.75019C8.68937 2.68313 8.27328 2.5962 7.8541 2.52648C6.92352 2.37161 6.0481 2.53134 5.27328 3.07362C4.92955 3.3141 4.6348 3.62826 4.33211 3.92345C3.58288 4.65415 2.22253 6.00435 2.09678 6.1279L1.17723 7.17364C1.00603 7.37573 1.10266 7.66651 1.40756 7.72078L2.94661 7.89507C3.66363 7.96125 4.38109 8.02215 5.09855 8.08745C5.14576 8.09186 5.19165 8.11348 5.24062 8.12804C5.09281 8.51987 4.95205 8.89183 4.81218 9.26468C4.73187 9.47868 4.7857 9.65783 4.9472 9.81667C5.25033 10.1145 5.54817 10.4172 5.8491 10.7172C6.6398 11.5071 7.43006 12.2969 8.22253 13.0849C8.3527 13.2147 8.51155 13.2584 8.69025 13.197C8.79526 13.1613 8.89984 13.1229 9.00397 13.0836C9.29475 12.9733 9.58509 12.8621 9.89043 12.7456C9.90057 12.8184 9.90984 12.8687 9.91469 12.9195C10.025 14.0861 10.1353 15.2532 10.2447 16.4199C10.2633 16.6166 10.3401 16.7724 10.5333 16.8492C10.7345 16.929 10.9084 16.8726 11.0544 16.727L14.8628 12.8502C14.9647 12.683 15.0741 12.5308 15.1558 12.3648C15.4695 11.7272 15.6041 11.0526 15.5048 10.3453C15.4386 9.87271 15.338 9.40544 15.2656 8.93375C15.2528 8.84991 15.2806 8.74049 15.3292 8.67033C15.6045 8.27277 15.909 7.89507 16.1715 7.49001C16.8409 6.45795 17.3421 5.34558 17.658 4.15599C17.8667 3.37014 17.9974 2.56929 17.9965 1.75211L18.0004 1.34925C17.9726 1.04215 17.9612 0.731957 17.9118 0.428383L17.9113 0.428824ZM16.2567 5.3769C15.5326 7.04171 14.4617 8.44883 13.1 9.64327C12.484 10.1833 11.82 10.6542 11.1197 11.076C11.0527 11.1161 10.9834 11.1523 10.8669 11.2167C10.5761 10.9114 10.2853 10.595 9.98265 10.2901C8.97044 9.27174 7.95646 8.25512 6.93631 7.24468C6.82159 7.13084 6.81056 7.05097 6.89087 6.91595C7.77511 5.43382 8.88484 4.15378 10.2655 3.11201C11.0632 2.5106 11.9268 2.02876 12.8445 1.63783C13.0329 1.55752 13.1499 1.57385 13.3003 1.72696C14.2199 2.66283 15.1496 3.58855 16.0819 4.51163C16.4649 4.8911 16.4707 4.8836 16.2562 5.37646L16.2567 5.3769Z\", fill: \"currentColor\" }),\n                React.createElement(\"path\", { d: \"M11.9237 4.4438C11.016 4.44159 10.2959 5.16214 10.2959 6.07286C10.2959 6.99594 10.9962 7.70104 11.9135 7.70193C12.8269 7.70325 13.5452 6.99329 13.5523 6.08213C13.5589 5.18773 12.822 4.44601 11.9237 4.44336V4.4438Z\", fill: \"currentColor\" }),\n                React.createElement(\"path\", { d: \"M0.733782 17.2304C0.573611 17.2304 0.413882 17.1655 0.297394 17.038C0.0776562 16.7971 0.0944234 16.4234 0.335782 16.2036L4.91013 12.0299C5.15105 11.8102 5.52478 11.8274 5.74452 12.0683C5.96426 12.3092 5.94749 12.683 5.70613 12.9027L1.13178 17.0759C1.01838 17.1792 0.875862 17.2304 0.733782 17.2304Z\", fill: \"currentColor\" }),\n                React.createElement(\"path\", { d: \"M4.13178 17.3977C3.97161 17.3977 3.81188 17.3328 3.6954 17.2053C3.47566 16.9644 3.49243 16.5906 3.73379 16.3709L5.55699 14.7074C5.79791 14.4877 6.17164 14.5049 6.39138 14.7458C6.61112 14.9867 6.59435 15.3604 6.35299 15.5802L4.52978 17.2437C4.41639 17.3469 4.27386 17.3981 4.13178 17.3981V17.3977Z\", fill: \"currentColor\" }),\n                React.createElement(\"path\", { d: \"M0.590823 14.3828C0.430652 14.3828 0.270923 14.3179 0.154435 14.1904C-0.0653034 13.9495 -0.0485362 13.5757 0.192823 13.356L2.01603 11.6925C2.25695 11.4728 2.63024 11.49 2.85042 11.7309C3.07016 11.9718 3.05339 12.3455 2.81203 12.5653L0.988822 14.2288C0.875423 14.332 0.732902 14.3832 0.590823 14.3832V14.3828Z\", fill: \"currentColor\" })),\n            React.createElement(\"defs\", null,\n                React.createElement(\"clipPath\", { id: \"clip0_345_19040\" },\n                    React.createElement(\"rect\", { width: \"18\", height: \"17.3977\", fill: \"white\" })))));\n    }\n    Icons.Panel = Panel;\n    /**\n     * Question icon.\n     */\n    function Question(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"20\", height: \"20\", viewBox: \"0 0 20 20\", ...props },\n            React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M18.75 10C18.75 14.832 14.832 18.75 10 18.75C5.16797 18.75 1.25 14.832 1.25 10C1.25 5.16797 5.16797 1.25 10 1.25C14.832 1.25 18.75 5.16797 18.75 10ZM17.5 10C17.5 5.85938 14.1406 2.5 10 2.5C5.85938 2.5 2.5 5.85938 2.5 10C2.5 14.1406 5.85938 17.5 10 17.5C14.1406 17.5 17.5 14.1406 17.5 10ZM13.75 7.5C13.75 9.26562 12.8359 10.0742 12.1641 10.6641C11.5742 11.1836 11.25 11.4727 11.25 12.5H8.75C8.75 10.3438 9.80859 9.40625 10.5117 8.78906C11.0508 8.31641 11.25 8.13672 11.25 7.5C11.25 6.8125 10.6875 6.25 10 6.25C9.3125 6.25 8.75 6.8125 8.75 7.5H6.25C6.25 5.42969 7.92969 3.75 10 3.75C12.0703 3.75 13.75 5.42969 13.75 7.5ZM11.25 16.25V13.75H8.75V16.25H11.25Z\", fill: \"currentColor\" })));\n    }\n    Icons.Question = Question;\n    /**\n     * Bulb icon.\n     */\n    function Bulb(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"10\", height: \"14\", viewBox: \"0 0 10 14\", ...props },\n            React.createElement(\"path\", { d: \"M4.625 0.625C7.08789 0.650391 9.09375 2.63086 9.09375 5.09375C9.09375 6.23633 8.66211 7.25195 7.97656 8.01367C7.54492 8.49609 6.91016 9.51172 6.65625 10.3496C6.65625 10.3496 6.65625 10.3496 6.65625 10.375H2.56836C2.56836 10.3496 2.56836 10.3496 2.56836 10.3496C2.31445 9.51172 1.67969 8.49609 1.24805 8.01367C0.5625 7.22656 0.15625 6.21094 0.15625 5.09375C0.15625 2.73242 2.03516 0.650391 4.625 0.625ZM7.0625 7.25195C7.57031 6.64258 7.875 5.88086 7.875 5.09375C7.875 3.31641 6.40234 1.84375 4.59961 1.84375C2.59375 1.86914 1.375 3.51953 1.375 5.09375C1.375 5.88086 1.6543 6.64258 2.16211 7.25195C2.56836 7.68359 3.05078 8.41992 3.40625 9.15625H5.81836C6.17383 8.41992 6.65625 7.68359 7.0625 7.25195ZM2.59375 12.1777V11.1875H6.65625L6.63086 12.1777C6.63086 12.3047 6.58008 12.5078 6.50391 12.6348L6.07227 13.2695C5.94531 13.4727 5.64062 13.625 5.38672 13.625H3.83789C3.58398 13.625 3.2793 13.4727 3.15234 13.2695L2.7207 12.6348C2.64453 12.4824 2.59375 12.3301 2.59375 12.1777ZM4.59961 6.71875C5.05664 6.71875 5.4375 7.09961 5.4375 7.53125C5.4375 7.98828 5.05664 8.34375 4.625 8.34375C4.16797 8.34375 3.8125 7.98828 3.8125 7.53125C3.8125 7.09961 4.16797 6.71875 4.59961 6.71875ZM4.625 5.90625C4.26953 5.90625 4.01562 5.65234 4.01562 5.29688V3.26562C4.01562 2.93555 4.26953 2.68164 4.59961 2.68164C4.95508 2.68164 5.23438 2.93555 5.23438 3.26562V5.29688C5.23438 5.65234 4.95508 5.90625 4.625 5.90625Z\", fill: \"currentColor\" })));\n    }\n    Icons.Bulb = Bulb;\n    /**\n     * UserPrompt icon.\n     */\n    function UserPrompt(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"28\", height: \"25\", viewBox: \"0 0 28 25\", ...props },\n            React.createElement(\"path\", { d: \"M14 0.25C21.7109 0.25 27.9453 5.33594 27.9453 11.625C27.9453 17.8594 21.7656 23 14 23C11.9219 23 9.95312 22.5625 8.14844 21.9062C6.72656 23 4.10156 24.75 0.4375 24.75C0.273438 24.75 0.109375 24.6406 0.0546875 24.4766C0 24.3125 0 24.0938 0.164062 23.9844C0.164062 23.9844 2.46094 21.5234 3.11719 18.7344C1.20312 16.8203 0 14.3047 0 11.625C0 5.33594 6.23438 0.25 14 0.25ZM13.6172 17.75C14.4375 17.75 15.0391 17.1484 15.0391 16.3281C15.0391 15.5625 14.3828 14.9062 13.6172 14.9062C12.8516 14.9062 12.25 15.5625 12.25 16.3281C12.25 17.1484 12.8516 17.75 13.6172 17.75ZM16.7891 11.4062C17.7734 10.8047 18.375 9.76562 18.375 8.67188C18.375 6.92188 16.9531 5.5 15.1484 5.5H12.7969C10.9922 5.5 9.625 6.92188 9.625 8.67188C9.625 9.27344 10.1172 9.76562 10.6641 9.76562C11.2656 9.76562 11.7578 9.27344 11.7578 8.67188C11.7578 8.125 12.25 7.6875 12.7969 7.6875H15.1484C15.6953 7.6875 16.1875 8.125 16.1875 8.67188C16.1875 9.05469 15.9688 9.38281 15.6406 9.49219L13.0703 11.0234C12.6875 11.2422 12.5234 11.625 12.5234 12.0078V12.7734C12.5234 13.3203 13.0156 13.8672 13.6172 13.8672C14.2188 13.8672 14.7109 13.3203 14.7109 12.7734V12.6641L16.7891 11.4062Z\", fill: \"currentColor\" })));\n    }\n    Icons.UserPrompt = UserPrompt;\n    /**\n     * NewChat icon.\n     */\n    function NewChat(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"23\", height: \"20\", viewBox: \"0 0 23 20\", ...props },\n            React.createElement(\"path\", { d: \"M12 0.125C18.0586 0.125 22.957 4.16406 22.957 9.0625C22.957 14.0039 18.0586 18 12 18C10.3242 18 8.77734 17.6992 7.35938 17.1836C6.28516 18.043 4.17969 19.375 1.34375 19.375C1.17188 19.375 1.04297 19.332 1 19.2031C0.957031 19.0742 0.957031 18.9023 1.08594 18.8164C1.08594 18.7734 2.89062 16.8828 3.40625 14.6914C1.90234 13.1445 1 11.2109 1 9.0625C1 4.16406 5.89844 0.125 12 0.125ZM15.4375 10.0938C15.9961 10.0938 16.4688 9.66406 16.4688 9.0625C16.4688 8.50391 15.9961 8.03125 15.3945 8.03125H12.9883V5.625C12.9883 5.06641 12.5586 4.59375 12 4.59375C11.3984 4.59375 10.9688 5.06641 10.9258 5.625V8.07422H8.51953C7.96094 8.07422 7.53125 8.50391 7.53125 9.0625C7.53125 9.66406 7.96094 10.0938 8.51953 10.0938H10.9688V12.543C10.9688 13.1016 11.3984 13.5312 12 13.5312C12.5586 13.5312 12.9883 13.1016 13.0312 12.5V10.0938H15.4375Z\", fill: \"currentColor\" })));\n    }\n    Icons.NewChat = NewChat;\n    /**\n     * History icon.\n     */\n    function History(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"21\", height: \"19\", viewBox: \"0 0 21 19\", ...props },\n            React.createElement(\"path\", { d: \"M19.1797 7.625C20.3516 13.6406 15.7812 18.875 10 18.875C8.4375 18.875 6.99219 18.5234 5.70312 17.8594C4.96094 17.4688 4.80469 16.4531 5.39062 15.8672C5.78125 15.4766 6.36719 15.3984 6.875 15.6328C7.8125 16.1406 8.86719 16.375 10 16.375C14.2578 16.375 17.6562 12.4688 16.6797 8.01562C16.1328 5.28125 13.6328 2.625 10 2.625C9.49219 2.625 7.1875 2.58594 5.11719 4.65625L6.60156 6.14062C7.14844 6.6875 6.75781 7.625 5.97656 7.625H1.21094C0.898438 7.625 0.625 7.35156 0.625 7V2.27344C0.625 1.49219 1.5625 1.10156 2.10938 1.64844L3.35938 2.89844C4.88281 1.375 7.07031 0.125 10 0.125C16.8359 0.125 18.9062 6.21875 19.1797 7.625ZM10 4.5C10.5078 4.5 10.9375 4.92969 10.9375 5.4375V9.65625L13.0078 11.2578C13.4375 11.5703 13.5156 12.1562 13.2031 12.5859C13.0078 12.8203 12.7344 12.9375 12.4609 12.9375C12.2656 12.9375 12.0703 12.8984 11.9141 12.7812L9.41406 10.9062C9.17969 10.7109 9.0625 10.4375 9.0625 10.125V5.4375C9.0625 4.92969 9.45312 4.5 10 4.5Z\", fill: \"currentColor\" })));\n    }\n    Icons.History = History;\n    /**\n     * Search icon.\n     */\n    function Search(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\", ...props },\n            React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M10.7063 10H11.4156L15 13.5844L13.5844 15L10 11.4156V10.7063L9.16562 9.87187C8.30312 10.5781 7.2 11 6 11C3.2375 11 1 8.7625 1 6C1 3.2375 3.2375 1 6 1C8.7625 1 11 3.2375 11 6C11 7.2 10.5781 8.30312 9.87187 9.16562L10.7063 10ZM6 2C3.79063 2 2 3.79063 2 6C2 8.20937 3.79063 10 6 10C8.20937 10 10 8.20937 10 6C10 3.79063 8.20937 2 6 2Z\", fill: \"currentColor\" })));\n    }\n    Icons.Search = Search;\n    /**\n     * External link icon.\n     */\n    function ExternalLink(props) {\n        return (React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", viewBox: \"0 0 16 16\", ...props },\n            React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M16 11.2V16H0V0H4.8V1.6H1.6V14.4H14.4V11.2H16ZM16 0H8L10.87 2.865L4.8 8.935L7.065 11.2L13.13 5.13L16 8V0Z\", fill: \"currentColor\" })));\n    }\n    Icons.ExternalLink = ExternalLink;\n})(Icons || (Icons = {}));\n","export * from './icons';\nexport * from './base-elements';\nexport * from './chat-elements';\nexport * from './AssistantComponentContext';\nexport * from './contents';\nexport * from './pages';\nexport * from './types';\nexport * from './utils';\nexport * from './suggestion-elements';\nexport * from './store';\nexport * from './api';\n","import { orderBy } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport { Tooltip } from 'react-tooltip';\nimport TimeAgo from 'timeago-react';\nimport { Button, Div, Dropdown, Style } from '../base-elements';\nimport { Icons } from '../icons';\n/**\n * Style for the chat history page.\n * (hierarchy of children styles is fixed automatically)\n * @alpha\n */\nexport const styleOfHistoryPage = `\n  .anaconda-assistant-history-page {\n    font-family: 'Inter', sans-serif;\n    font-family: Inter;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 20px;\n    color: var(--as-main-font-color, #2c303a);\n\n    overflow-y: scroll;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 16px;\n  }\n\n  .anaconda-assistant-history-page-title {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 24px;\n    margin-bottom: 8px;\n  }\n\n  .anaconda-assistant-history-page-no-chats {\n    height: calc(100% - 100px);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    color: var(--as-main-disabled-color:, #2121214d);\n  }\n\n  .anaconda-assistant-history-page-search {\n    display: flex;\n    align-items: center;\n    margin-bottom: 16px;\n    width: 100%;\n    position: relative;\n\n    svg {\n      position: absolute;\n      z-index: 1;\n      right: 10px;\n    }\n  }\n\n  .anaconda-assistant-history-page-search input {\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 20px;\n    color: var(--as-main-font-color-black, #000);\n    background: none;\n    border-radius: 4px;\n    border: 1px solid var(--as-border-color-secondary, #8c94a6);\n    padding: 7px 36px 7px 12px;\n    width: 100%;\n    overflow: hidden;\n  }\n\n  .anaconda-assistant-history-page-sort {\n    display: flex;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 20px;\n    margin: 0 0 12px 8px;\n    align-items: center;\n  }\n\n  .anaconda-assistant-history-page-sort label {\n    margin-right: 8px;\n  }\n\n  .anaconda-assistant-history-page-list {\n    display: flex;\n    flex-direction: column;\n  }\n\n\n  .anaconda-assistant-history-page-list-item,\n  .anaconda-assistant-history-page-list-item-active\n  {\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    padding: 8px;\n    margin-bottom: 8px;\n    color: var(--jp-ui-font-color1, rgba(0, 0, 0, 0.87));\n    border: none;\n    background: none;\n  }\n\n  .anaconda-assistant-history-page-list-item-active {\n    background: #f3f4f6;\n    color: rgba(0, 0, 0, 0.87);\n  }\n\n  .anaconda-assistant-history-page-list-item,\n  .anaconda-assistant-history-page-list-item-active {\n    &:hover,\n    &:focus {\n      background: #f3f4f6;\n      color: #6c5af6;\n      cursor: pointer;\n    }\n  }\n\n  .anaconda-assistant-history-page-list-item-icon,\n  .anaconda-assistant-history-page-list-item-active-icon {\n    display: flex;\n    align-items: center;\n  }\n\n  .anaconda-assistant-history-page-list-item-icon svg,\n  .anaconda-assistant-history-page-list-item-active-icon svg {\n    width: 20px;\n    margin-right: 8px;\n    color: #6c5af6;\n  }\n\n  .anaconda-assistant-history-page-list-item-text,\n  .anaconda-assistant-history-page-list-item-active-text {\n    overflow: hidden;\n    font-size: 15px;\n    font-style: normal;\n    line-height: 20px;\n    white-space: nowrap;\n    text-align: left;\n    text-overflow: ellipsis;\n    flex: 1;\n  }\n\n  .anaconda-assistant-history-page-list-item-date,\n  .anaconda-assistant-history-page-list-item-active-date,\n  .anaconda-assistant-history-page-list-item-close-icon-date,\n  .anaconda-assistant-history-page-list-item-active-close-icon-date {\n    font-size: 0.9em;\n    margin-left: 4px;\n    color: #6c5af6;\n  }\n\n  .anaconda-assistant-history-page-list-item-close-icon,\n  .anaconda-assistant-history-page-list-item-active-close-icon {\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    padding: 0;\n    display: flex;\n    align-items: center;\n  }\n\n  .anaconda-assistant-history-page-list-item-close-icon svg,\n  .anaconda-assistant-history-page-list-item-active-close-icon svg {\n    width: 0;\n    height: 20px;\n    color: #6a718a;\n  }\n\n  .anaconda-assistant-history-page-list-item,\n  .anaconda-assistant-history-page-list-item-close-icon {\n    &:hover,\n    &:focus {\n      .anaconda-assistant-history-page-list-item-close-icon-date {\n        display: none;\n      }\n      & svg {\n        width: 20px;\n      }\n    }\n  }\n  `;\n/**\n * History page\n * @alpha\n */\nexport const HistoryPage = (props) => {\n    const { chats, activeChat, setActiveChat, deleteChat, closeHistory } = props;\n    const [inputValue, setInputValue] = useState('');\n    const [filteredChats, setFilteredChats] = useState(chats);\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n    const sortOptions = [\n        { value: 'desc', label: 'Most Recent' },\n        { value: 'asc', label: 'Oldest' }\n    ];\n    const [sortOrder, setSortOrder] = useState(sortOptions[0]);\n    const handleSortChange = (option) => {\n        setSortOrder(option);\n    };\n    useEffect(() => {\n        const sortedChats = orderBy(chats, ['lastUpdated'], [sortOrder.value]);\n        setFilteredChats(sortedChats.filter(chat => chat.name.toLowerCase().includes(inputValue.toLowerCase())));\n    }, [chats, inputValue, sortOrder]);\n    function selectChat(chatKey) {\n        // If the chat is already active, just close the menu\n        if (!activeChat || activeChat.key !== chatKey) {\n            const chat = chats.find(c => c.key === chatKey);\n            // If a chat of the same name is already active, moving back and forward\n            // might feel as if there was no change at all, so let's clear the active chat\n            // while we come up with a better solution.\n            if (activeChat?.name === chat?.name) {\n                setActiveChat(null);\n            }\n            setActiveChat(chatKey);\n        }\n        closeHistory();\n    }\n    return (React.createElement(Div, { asChildName: \"history-page\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfHistoryPage),\n        React.createElement(Div, { asChildName: \"title\" }, \"Chat History\"),\n        chats.length === 0 && React.createElement(Div, { asChildName: \"no-chats\" }, \"No Previous Chats\"),\n        chats.length > 0 && (React.createElement(React.Fragment, null,\n            React.createElement(Div, { asChildName: \"search\" },\n                React.createElement(\"input\", { type: \"text\", role: \"searchbox\", onChange: handleInputChange }),\n                React.createElement(Icons.Search, null)),\n            React.createElement(Div, { asChildName: \"sort\" },\n                React.createElement(\"label\", null, \"Sort by: \"),\n                React.createElement(Dropdown, { className: \"as-history-sort-dropdown\", options: sortOptions, selectionChanged: handleSortChange })),\n            React.createElement(Div, { asChildName: \"list\" }, filteredChats.map(chat => (React.createElement(Button, { key: chat.key, role: \"listitem\", asChildName: `item${chat.key === activeChat?.key ? '-active' : ''}`, title: chat.name, onClick: () => selectChat(chat.key) },\n                React.createElement(Div, { asChildName: \"icon\" },\n                    React.createElement(Icons.UserPrompt, null)),\n                React.createElement(Div, { asChildName: \"text\" }, chat.name),\n                chat.key === activeChat?.key ? (React.createElement(Div, { asChildName: \"date\" },\n                    React.createElement(TimeAgo, { datetime: chat.lastUpdated, live: false }))) : (React.createElement(Button, { \"data-tooltip-id\": `delete-tooltip-${chat.key}`, \"data-tooltip-content\": \"Delete chat\", \"data-testid\": `delete-tooltip-${chat.key}`, asChildName: \"close-icon\", onClick: e => {\n                        e.stopPropagation();\n                        deleteChat(chat.key);\n                    } },\n                    React.createElement(Div, { asChildName: \"date\" },\n                        React.createElement(TimeAgo, { datetime: chat.lastUpdated, live: false })),\n                    React.createElement(Icons.Close, null),\n                    React.createElement(Tooltip, { className: \"anaconda-assistant-tooltip\", id: `delete-tooltip-${chat.key}`, place: \"top\" })))))))))));\n};\n","import React from 'react';\nimport { Div, Style } from '../base-elements';\nimport { GenerateSuggestions, SelectChatStarter, LoadADataframe } from '../suggestion-elements';\nimport { SelectContext } from '../chat-elements';\n/**\n * Style for the HomeScreen component.\n * @alpha\n */\nexport const styleOfHomeScreen = `\n\n.anaconda-assistant-home-screen-header {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 44px;\n}\n\n.anaconda-assistant-home-screen-header h3 {\n  margin: 0 0 24px;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 23px;\n}\n\n.anaconda-assistant-home-screen-header p {\n  text-align: center;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n  max-width: 375px;\n  margin: 0 0 32px;\n}\n`;\n/**\n * Home Screen component.\n * @alpha\n */\nexport const HomeScreen = (props) => {\n    const { chatStarters, selectedChatStarter, selectChatStarter, makeChatRequest, getActiveCodeCell, dataFrames, enableDataCollection, activeNotebook, suggestionState, updateSuggestions, setSuggestionsDataframe, isProTier, resetActiveChat, showLogoutButton, logout, suggestionDataFrame } = props;\n    if (!activeNotebook)\n        return null;\n    if (selectedChatStarter === null) {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Style, { asChildName: \"style\" }, styleOfHomeScreen),\n            React.createElement(Div, { asChildName: \"home-screen-header\" },\n                React.createElement(\"h3\", null, \"What would you like to do?\"),\n                React.createElement(\"p\", null, \"The Anaconda Assistant is an AI-powered chat application designed to enhance the productivity of data scientists, developers, and researchers.\")),\n            React.createElement(SelectChatStarter, { chatStarters: chatStarters, setChatStarter: selectChatStarter, makeChatRequest: makeChatRequest })));\n    }\n    if (selectedChatStarter.suggestions) {\n        return (React.createElement(LoadADataframe, { options: selectedChatStarter.suggestions, makeChatRequest: makeChatRequest }));\n    }\n    else if (selectedChatStarter.generateSuggestions && selectedChatStarter.suggestionsType) {\n        return (React.createElement(GenerateSuggestions, { chatStarterName: selectedChatStarter.suggestionsType, buttonLabel: selectedChatStarter.buttonLabel, getActiveCodeCell: getActiveCodeCell, dataFrames: dataFrames, makeChatRequest: makeChatRequest, onSubmit: setSuggestionsDataframe, enableDataCollection: enableDataCollection, activeNotebook: activeNotebook, suggestionState: suggestionState, updateSuggestions: updateSuggestions, setSuggestionsDataframe: setSuggestionsDataframe, isProTier: isProTier, resetActiveChat: resetActiveChat, showLogoutButton: showLogoutButton, logout: logout, suggestionDataFrame: suggestionDataFrame }));\n    }\n    else if (selectedChatStarter.contextSelectionRequired) {\n        return (React.createElement(SelectContext, { contextType: selectedChatStarter.contextType, buttonLabel: selectedChatStarter.buttonLabel, makeChatRequest: makeChatRequest, enableDataCollection: enableDataCollection, dataFrames: dataFrames }));\n    }\n    else {\n        return null;\n    }\n};\n","import React from 'react';\nimport { Switch } from '@mui/material';\nimport { Button, Div } from '../base-elements';\nimport { Style } from '../base-elements/Style';\nimport { Icons } from '../icons';\nimport { getAssistantStore } from '../store';\nimport { startCase } from 'lodash';\nimport { Dropdown } from '../base-elements';\n/**\n * Style for the settings page.\n * (hierarchy of children styles is fixed automatically)\n * @alpha\n */\nexport const styleOfSettingsPage = `\n.anaconda-assistant-settings-page {\n  --text-color: var(--as-main-font-color, #2c303a);\n  --text-color-header-secondary: var(--as-main-font-color-secondary, #6a718a);\n  font-family: 'Inter', sans-serif;\n  font-family: Inter;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  padding: 16px;\n  overflow-y: auto;\n  color: var(--text-color);\n  height: 100%;\n}\n\n.anaconda-assistant-settings-page-section-title {\n  color: var(--text-color-header-secondary);\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 24px;\n  margin-bottom: 20px;\n}\n\n.anaconda-assistant-settings-page-logout-control-title,\n.anaconda-assistant-settings-page-upgrade-control-title,\n.anaconda-assistant-settings-page-data-collection-control-container-title,\n.anaconda-assistant-settings-page-run-code-control-container-title {\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 20px;\n}\n\n.anaconda-assistant-settings-page-logout-control-container,\n.anaconda-assistant-settings-page-data-collection-control-container,\n.anaconda-assistant-settings-page-run-code-control-container,\n.anaconda-assistant-settings-page-upgrade-control-container {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.anaconda-assistant-settings-page-logout-control-container-description,\n.anaconda-assistant-settings-page-upgrade-control-container-description {\n    max-width: 100%;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description-account {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n.anaconda-assistant-settings-page-logout-control-container-action-logout-button {\n  border-radius: 4px;\n  border: 1px solid var(--primary, #0cca4a);\n  background: #0cca4a;\n  color: #06262d;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 24px;\n  display: inline-flex;\n  padding: 8px 14px;\n  justify-content: center;\n  align-items: center;\n}\n\n.anaconda-assistant-settings-page-logout-control-container-action-logout-button:disabled {\n  background-color: rgba(67, 176, 73, 0.50);\n  border: none;\n  color: #fff;\n  cursor: default;\n}\n\n.anaconda-assistant-settings-page-logout-control-container-action-logout-button:hover:enabled {\n  color: black;\n  cursor: pointer;\n  background: #4fab4f;\n  border: 1px solid #4fab4f;\n}\n\n.anaconda-assistant-settings-page-data-collection-control-container-description,\n.anaconda-assistant-settings-page-run-code-control-container-description {\n  max-width: 77%;\n}\n\n.anaconda-assistant-settings-page-run-code-control-container-description a {\n  color: #6c5af6;\n  text-decoration: underline;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description {\n  flex-grow: 1;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description svg {\n  width: 12px;\n  margin-right: 4px;\n  display: inline-block;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description-upgrade-button {\n  align-items: center;\n  background: #4fab4f;\n  border-radius: 4px;\n  border: none;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  font-size: 16px;\n  font-style: normal;\n  justify-content: center;\n  margin-bottom: 5px;\n  margin-top: 15px;\n  margin-left: auto;\n  margin-right: 20px;\n  padding: 8px;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description-upgrade-button:hover {\n  background: #0cca4a;\n  color: #06262d;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description a {\n  color: #6c5af6;\n  text-decoration: underline;\n}\n\n.anaconda-assistant-settings-page-data-collection-control-container-action,\n.anaconda-assistant-settings-page-data-collection-control-container-action-disabled {\n  align-items: center;\n  display: flex;\n  gap: 10px;\n}\n\n.anaconda-assistant-settings-page-data-collection-control-container-action\n.Mui-checked  {\n  color: var(--primary, #0cca4a);\n\n}\n\n.anaconda-assistant-settings-page-data-collection-control-container-action\n.MuiSwitch-root.MuiSwitch-sizeMedium .MuiSwitch-track {\n  background-color: #43B049;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description-account-link a {\n  color: #0cca4a;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description-account-link a:hover {\n  color: #337234;\n}\n\n.anaconda-assistant-settings-page-upgrade-control-container-description-account-link svg {\n  width: 16px;\n  margin-left: 10px;\n}\n`;\n/**\n * Titles of where to add code to the notebook.\n * @alpha\n */\nexport const settingAddCodeToNotebookTitles = {\n    'below-active-cell': 'Below active cell',\n    'at-end-of-notebook': 'At end of the notebook',\n    'in-place': 'In the active cell'\n};\n/**\n * Settings page\n * @alpha\n */\nexport function SettingsPage(props) {\n    const { showLogout, enableDataCollection, setEnableDataCollection, addCodeToNotebook, setAddCodeToNotebook, isProTier, isStarterTier, isCloudNotebooks } = props;\n    const logoutProps = showLogout ? showLogout() : null;\n    const upgradeURL = 'https://anaconda.cloud/pricing';\n    const addCodeToNotebookDropdownOptions = Object.entries(settingAddCodeToNotebookTitles).map(([key, value]) => ({\n        value: key,\n        label: value.replace('notebook', getAssistantStore().clientContextType)\n    }));\n    let accountTierTitle = 'Free';\n    let clientVersionTypeWording = 'In the local version';\n    let messagesAllowedWording = (React.createElement(React.Fragment, null,\n        \"30 responses for free, and will need to\",\n        ' ',\n        React.createElement(\"a\", { \"data-testid\": \"upgrade-link\", href: \"https://anaconda.cloud/pricing\", target: \"_blank\" }, \"upgrade\"),\n        ' ',\n        \"to continue using the Assistant\"));\n    if (isCloudNotebooks) {\n        clientVersionTypeWording = 'In the cloud version';\n        messagesAllowedWording =\n            '60 responses per day the first week, then 30 responses per day afterwards';\n    }\n    let maxTokens = 4096;\n    if (isProTier) {\n        accountTierTitle = 'Pro';\n        messagesAllowedWording = '120 responses per day';\n        maxTokens = 16384;\n    }\n    else if (isStarterTier) {\n        accountTierTitle = 'Starter';\n        messagesAllowedWording = '60 responses per day';\n    }\n    return (React.createElement(Div, { asChildName: \"settings-page\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfSettingsPage),\n        React.createElement(Div, { asChildName: \"section-title\" }, \"My Account\"),\n        showLogout && logoutProps ? (React.createElement(Div, { asChildName: \"logout-control\" },\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"description\" },\n                    \"You're currently logged in as: \",\n                    React.createElement(\"b\", null, logoutProps.accountUserEmail),\n                    \".\"),\n                React.createElement(Div, { asChildName: \"action\" },\n                    React.createElement(Button, { asChildName: \"logout-button\", onClick: () => logoutProps.logout() }, \"Logout\"))))) : null,\n        React.createElement(Div, { asChildName: \"upgrade-control\" },\n            React.createElement(Div, { asChildName: \"title\" }, \"Account tier limits\"),\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"description\" },\n                    React.createElement(Div, { asChildName: \"account\" },\n                        React.createElement(\"span\", null,\n                            \"Your account tier is \",\n                            React.createElement(\"b\", null, accountTierTitle),\n                            \".\"),\n                        React.createElement(Div, { asChildName: \"link\" },\n                            React.createElement(\"a\", { target: \"blank\", href: \"https://anaconda.cloud/profile/account-settings\" },\n                                \"View your account\",\n                                React.createElement(Icons.ExternalLink, null)))),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"span\", { \"data-testid\": \"client-version-type\" }, clientVersionTypeWording),\n                    \" of the Anaconda Assistant, you can receive\",\n                    ' ',\n                    React.createElement(\"span\", { \"data-testid\": \"messages-allowed\" }, messagesAllowedWording),\n                    \".\",\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"span\", { \"data-testid\": \"context-limit\" },\n                        \"Your current context limit is \",\n                        maxTokens || 4096,\n                        \" tokens.\"),\n                    isProTier ? (React.createElement(\"span\", { \"data-testid\": \"infinite-chat\" },\n                        ' ',\n                        \"You're on the Pro tier, so your chats will seem infinite. Be aware that the longer you continue any chat, the less accurate it will become. See our\",\n                        ' ',\n                        React.createElement(\"a\", { href: \"https://docs.anaconda.com/free/anaconda-notebooks/anaconda-assistant/#course-correcting-the-conversation\", target: \"_blank\" }, \"Assistant documentation\"),\n                        ' ',\n                        \"for more information.\")) : null,\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    isProTier ? null : (React.createElement(React.Fragment, null,\n                        \"If you reach this limit during one of your chats, you can create a new chat by clicking the \",\n                        React.createElement(Icons.NewChat, null),\n                        \" icon at the top of the chat window.\",\n                        React.createElement(\"br\", null),\n                        React.createElement(\"br\", null),\n                        \"Visit our\",\n                        ' ',\n                        React.createElement(\"a\", { \"data-testid\": \"pricing-link\", href: \"https://anaconda.cloud/pricing\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"pricing page\"),\n                        ' ',\n                        \"to upgrade to a higher tier to increase the number of daily responses allowed or to use a model with a larger context-window.\",\n                        React.createElement(Button, { \"data-testid\": \"upgrade-button\", asChildName: \"upgrade-button\", onClick: () => {\n                                window.open(upgradeURL);\n                            } },\n                            React.createElement(Div, { asChildName: \"upgrade-icon\" },\n                                React.createElement(Icons.Sparkle, null)),\n                            React.createElement(Div, { asChildName: \"text\" }, \"Upgrade\"))))))),\n        React.createElement(Div, { asChildName: \"section-title\" }, \"Settings\"),\n        React.createElement(Div, { asChildName: \"data-collection-control\" },\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"title\" }, \"Data Collection\"),\n                React.createElement(Div, { asChildName: \"action\" },\n                    React.createElement(Switch, { checked: enableDataCollection, onChange: (_, checked) => setEnableDataCollection(checked) }),\n                    React.createElement(\"div\", null, enableDataCollection ? 'Enabled' : 'Not enabled'))),\n            React.createElement(Div, { asChildName: \"description\" },\n                React.createElement(\"p\", null, \"Enable to enjoy personalized recommendations and contribute to smarter features.\"),\n                React.createElement(\"p\", null, \"We prioritize your privacy:\"),\n                React.createElement(\"ul\", null,\n                    React.createElement(\"li\", null, \"Your data is never sold\"),\n                    React.createElement(\"li\", null, \"Always secured\"),\n                    React.createElement(\"li\", null, \"This setting only affects the data Anaconda stores\"),\n                    React.createElement(\"li\", null, \"It does not affect the data that is sent to Open AI\")))),\n        React.createElement(Div, { asChildName: \"run-code-control\" },\n            React.createElement(Div, { asChildName: \"container\" },\n                React.createElement(Div, { asChildName: \"title\" },\n                    \"Run code in \",\n                    startCase(getAssistantStore().clientContextType)),\n                React.createElement(Div, { asChildName: \"action\" },\n                    React.createElement(Dropdown, { defaultSelection: addCodeToNotebookDropdownOptions.find(option => option.value === addCodeToNotebook), options: addCodeToNotebookDropdownOptions, selectionChanged: (option) => setAddCodeToNotebook(option.value) }))),\n            React.createElement(Div, { asChildName: \"description\" },\n                \"When you run code in the Assistant, the code first gets added to your\",\n                ' ',\n                getAssistantStore().clientContextType,\n                \" before it is executed. You can choose where the code gets added here.\"))));\n}\n","import React from 'react';\nimport { Div } from '../base-elements';\nimport { TermsAndConditions, styleOfTermsAndConditions } from '../contents';\nimport { AssistantComponentContext } from '../AssistantComponentContext';\nimport { Style } from '../base-elements/Style';\nimport { childFixer } from './childFixer';\n/**\n * Style for the page for the terms and conditions.\n * (hierarchy of children styles is fixed automatically)\n * @alpha\n */\nexport const styleOfTermsAndConditionsPage = `\n.anaconda-assistant-terms-page {\n  --text-color: var(--as-main-font-color, #2c303a);\n  --text-color-secondary: var(--as-main-font-color, #52596b);\n  font-family: 'Inter', sans-serif;\n  font-family: Inter;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  padding: 16px;\n  color: var(--text-color);\n  overflow: auto;\n  margin: 19px 24px 0 24px;\n}\n\n.anaconda-assistant-terms-page-branding {\n  background: var(--as-main-bg-color-secondary, #fff);\n  display: flex;\n}\n\n.anaconda-assistant-terms-page-branding-content {\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n}\n\n.anaconda-assistant-terms-page-branding-content-header h1 {\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 24px;\n  margin: 3px 0;\n}\n\n.anaconda-assistant-terms-page-branding-content-header p {\n  line-height: 24px;\n  margin: 0;\n  color: var(--text-color-secondary);\n}\n\n.anaconda-assistant-terms-page-branding-icon {\n  margin-right: 9px;\n}\n\n.anaconda-assistant-terms-page-branding-icon svg {\n  width: 30px;\n}\n`;\n/**\n * Page for the terms and conditions.\n * @alpha\n */\nexport function TermsAndConditionsPage(props) {\n    const { accept, enableDataCollection, setEnableDataCollection, olderThan13, setOlderThan13 } = props;\n    const { replaceChildren } = React.useContext(AssistantComponentContext);\n    return (React.createElement(Div, { asChildName: \"terms-page\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfTermsAndConditionsPage),\n        React.createElement(Div, { asChildName: \"branding\" },\n            React.createElement(Div, { asChildName: \"content\" },\n                React.createElement(Div, { asChildName: \"header\" },\n                    React.createElement(\"h1\", null, \"Agree to use Assistant\"),\n                    React.createElement(\"p\", null, \"Anaconda Assistant is an AI-powered chat application designed to enhance the productivity of data scientists, developers, and researchers.\")),\n                React.createElement(AssistantComponentContext.Provider, { value: childFixer({\n                        parentName: 'terms-page',\n                        childName: 'terms',\n                        childrenStyle: styleOfTermsAndConditions,\n                        replaceChildren\n                    }) },\n                    React.createElement(TermsAndConditions, { accept: accept, enableDataCollection: enableDataCollection, setEnableDataCollection: setEnableDataCollection, olderThan13: olderThan13, setOlderThan13: setOlderThan13 }))))));\n}\n","import { fixStyleHierarchy } from '../style/styleUtils';\n/**\n * Creates the properties for AssistantComponentContext\n * in a way that fixes the hierarchy of the children and the styles.\n * @alpha\n */\nexport function childFixer(params) {\n    const { parentName, childName, childrenStyle, replaceChildren } = params;\n    return {\n        parentClassName: parentName,\n        replaceChildren: (childClassName) => {\n            let styleFixer = () => null;\n            if (childrenStyle) {\n                styleFixer = fixStyleHierarchy(parentName, childName, childrenStyle);\n            }\n            return replaceChildren?.(childClassName) || styleFixer(childClassName) || null;\n        }\n    };\n}\n","export * from './TermsAndConditionsPage';\nexport * from './SettingsPage';\nexport * from './HistoryPage';\nexport * from './HomeScreen';\n","import { useStore } from './store';\nlet assistantStore;\nexport const initAssistantStore = async (opts) => {\n    assistantStore = new AssistantStore(opts);\n    await useStore;\n    return assistantStore;\n};\nexport const getAssistantStore = () => {\n    if (!assistantStore) {\n        throw new Error('Assistant store not initialized');\n    }\n    return assistantStore;\n};\nexport class AssistantStore {\n    _getAssistantSdk;\n    _getServerUrl;\n    _getNucleusAccount;\n    _getAccountMaxTokens;\n    _isLocalDev;\n    _syncDiskStateChained;\n    _unbindSyncDiskStateChained;\n    clientContextType;\n    deletedChatKeys;\n    getFeatureFlagBool;\n    constructor(opts) {\n        this._getAssistantSdk = opts.getAssistantSdk;\n        this._getServerUrl = opts.getServerUrl;\n        this._getNucleusAccount = opts.getNucleusAccount;\n        this._getAccountMaxTokens = opts.getAccountMaxTokens;\n        this._isLocalDev = opts.isLocalDev;\n        this._syncDiskStateChained = opts.syncDiskStateChained;\n        this._unbindSyncDiskStateChained = opts.unbindSyncDiskStateChained;\n        this.deletedChatKeys = opts.deletedChatKeys;\n        this.clientContextType = opts.clientContextType || 'notebook';\n        this.getFeatureFlagBool = opts.getFeatureFlagBool || (() => false);\n    }\n    getAssistantSdk = () => {\n        return this._getAssistantSdk();\n    };\n    getServerUrl = () => {\n        return this._getServerUrl();\n    };\n    getNucleusAccount = () => {\n        return this._getNucleusAccount();\n    };\n    getAccountMaxTokens = (account) => {\n        return this._getAccountMaxTokens(account);\n    };\n    isLocalDev = () => {\n        return this._isLocalDev();\n    };\n    syncDiskStateChained = (termsAccepted) => {\n        return this._syncDiskStateChained(termsAccepted);\n    };\n    unbindSyncDiskStateChained = () => {\n        return this._unbindSyncDiskStateChained();\n    };\n}\n","// Chat starters - could be externalised in the fut\nimport { getActiveNotebook } from './state-fns';\nexport function initialHomeScreenState(dataframes, getChatStarters) {\n    return {\n        chatStarters: getChatStarters(dataframes.length === 0),\n        selectedChatStarter: null\n    };\n}\nexport function updateHomeScreenState(homeScreen, dataframes, getChatStarters) {\n    if (selectedStarterNeedsDataframe(homeScreen) && dataframes.length === 0) {\n        homeScreen.chatStarters = getChatStarters(true);\n        homeScreen.selectedChatStarter = null;\n        return;\n    }\n    homeScreen.chatStarters = getChatStarters(dataframes.length === 0);\n}\nexport function selectChatStarter(state, chatStarter) {\n    const activeNotebook = getActiveNotebook(state);\n    if (!activeNotebook)\n        return;\n    activeNotebook.homeScreen.selectedChatStarter = chatStarter;\n}\nexport function resetToHomeScreen(state) {\n    const activeNotebook = getActiveNotebook(state);\n    if (!activeNotebook)\n        return;\n    activeNotebook.homeScreen.selectedChatStarter = null;\n    activeNotebook.previousChatKey = activeNotebook.activeChatKey;\n    activeNotebook.activeChatKey = null;\n}\nfunction selectedStarterNeedsDataframe(homeScreen) {\n    const { selectedChatStarter } = homeScreen;\n    return (selectedChatStarter?.name === 'graph-dataframe' ||\n        selectedChatStarter?.name === 'describe-dataframe' ||\n        selectedChatStarter?.name === 'data-cleaning-suggestions' ||\n        selectedChatStarter?.name === 'dataframe-suggestions');\n}\n","export * from './test-storage';\nexport * from './suggestions-fns';\nexport * from './state-fns';\nexport * from './rehydration-utils';\nexport * from './home-screen-state-fns';\nexport * from './store';\nexport * from './AssistantStore';\n","import { entries, flatten, values } from 'lodash';\nimport { getActiveChat, getActiveNotebook } from './state-fns';\nlet MAX_STORED_CHATS = 50;\nexport function updateStoreState(state, error) {\n    if (state) {\n        const notebooks = state.notebooks;\n        notebooks.forEach(nb => {\n            values(nb.chats).forEach(chat => {\n                // Need to ensure chat timestamps strings are converted to Date objects\n                chat.lastUpdated = new Date(chat.lastUpdated);\n            });\n        });\n        state.menuOpen = false;\n        const notebook = getActiveNotebook(state);\n        const activeChat = getActiveChat(state);\n        if (notebook && activeChat) {\n            if (activeChat.inProgress) {\n                // If there is an in progress chat request, we want to remove it\n                activeChat.inProgress = null;\n                notebook.activeChatKey = null;\n                if (activeChat.messages.length === 1) {\n                    // If there is only one message in the chat, we want to remove the chat altogether\n                    delete notebook.chats[activeChat.key];\n                }\n                else {\n                    // Otherwise, we want to remove the last message from the chat\n                    activeChat.messages.pop();\n                }\n            }\n        }\n        if (notebook) {\n            // Don't want to rehydrate cell execution errors\n            notebook.notebookState.error = null;\n            // Don't want to rehydrate selected text\n            notebook.notebookState.selectedText = null;\n        }\n        // Want to cap the total number of chats in case we fill up local storage\n        // Get all chat lastUpdated dates, and remove any chats that are older than the\n        // 50th most recent chat across all notebooks\n        const allDates = getLastUpdatedOfAllChats(state);\n        if (allDates.length > MAX_STORED_CHATS) {\n            const sortedDates = allDates.sort((a, b) => b.getTime() - a.getTime());\n            const cutoffDate = sortedDates[MAX_STORED_CHATS];\n            notebooks.forEach(nb => {\n                const chats = entries(nb.chats);\n                const chatKeysToDelete = chats\n                    .filter(([_, chat]) => chat.lastUpdated <= cutoffDate)\n                    .map(([key, _]) => key);\n                chatKeysToDelete.forEach(key => delete nb.chats[key]);\n            });\n        }\n        let i = notebooks.length;\n        while (i--) {\n            // If there are no chats in a notebook, and this is not the active notebook, remove it\n            if (Object.values(notebooks[i].chats).length === 0 && notebooks[i].path !== state.path) {\n                notebooks.splice(i, 1);\n            }\n        }\n    }\n}\nfunction getLastUpdatedOfAllChats(state) {\n    return flatten(state.notebooks.map(nb => values(nb.chats).map(chat => chat.lastUpdated)));\n}\n// Only use for testing\nexport function _overrideMaxChatsForTesting(maxChats) {\n    MAX_STORED_CHATS = maxChats;\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { AssistantError, extractMessageBlocks, attachmentMessagePrefix, cleanMessageWithAttachmentPrefix, formatContextVariables, hasActiveCodeResponse } from '../.';\nimport { original } from 'immer';\nimport { orderBy, values } from 'lodash';\nimport { initialHomeScreenState, updateHomeScreenState } from './home-screen-state-fns';\nexport function setNotebook(state, path, nbState, getChatStarters) {\n    state.path = path;\n    state.user = nbState.user;\n    const notebook = state.notebooks.find(notebook => notebook.path === path);\n    if (notebook) {\n        notebook.notebookState.dataframes = nbState.dataframes;\n        updateHomeScreenState(notebook.homeScreen, nbState.dataframes, getChatStarters);\n    }\n    else {\n        state.notebooks.push({\n            path,\n            activeChatKey: null,\n            previousChatKey: null,\n            chats: {},\n            notebookState: {\n                dataframes: nbState.dataframes,\n                selectedCell: null,\n                selectedText: null,\n                error: null\n            },\n            homeScreen: initialHomeScreenState(nbState.dataframes, getChatStarters),\n            suggestionState: { loading: false, suggestions: null, dataframe: null, error: null }\n        });\n    }\n    return state;\n}\nexport function setActiveChat(state, chatKey) {\n    const notebook = getActiveNotebook(state);\n    if (notebook) {\n        notebook.previousChatKey = notebook.activeChatKey;\n        if (chatKey === null) {\n            notebook.activeChatKey = null;\n        }\n        else if (chatKey && notebook.chats[chatKey] != null) {\n            notebook.activeChatKey = chatKey;\n            const activeChat = notebook.chats[chatKey];\n            if (activeChat.inProgress) {\n                activeChat.inProgress = null;\n            }\n        }\n    }\n}\nexport function getActiveNotebookChats(state) {\n    const activeNotebook = getActiveNotebook(state);\n    return activeNotebook\n        ? orderBy(values(activeNotebook.chats).map(chat => ({\n            name: chat.name,\n            key: chat.key,\n            lastUpdated: chat.lastUpdated\n        })), [chat => chat.lastUpdated.getTime()], ['desc'])\n        : [];\n}\nexport function showBackButton(state) {\n    const activeNotebook = getActiveNotebook(state);\n    const previousChat = getPreviousChat(state);\n    const activeChat = getActiveChat(state);\n    const chatStarter = activeNotebook?.homeScreen.selectedChatStarter;\n    const isNotSuggestions = chatStarter &&\n        chatStarter.name !== 'data-cleaning-suggestions' &&\n        chatStarter.name !== 'dataframe-suggestions';\n    return Boolean(previousChat && (activeChat || isNotSuggestions));\n}\nexport function setupInitialRequestState(state, context, instruction) {\n    const chatState = getActiveChat(state);\n    state.attachContextOpen = false;\n    state.hidePopups = true;\n    if (chatState) {\n        addNewInstruction(chatState, instruction);\n    }\n    else {\n        setInitialChatState(state, context, instruction);\n    }\n}\nexport function requireChatState(state) {\n    const notebook = getActiveNotebook(state);\n    const chatState = getActiveChat(state);\n    const { path, settings } = state;\n    if (!notebook?.activeChatKey || !chatState || !path)\n        throw new Error('No active chat');\n    const { activeChatKey } = notebook;\n    return { notebook, chatState, activeChatKey: activeChatKey, path, settings };\n}\nexport function messageId(session, messageIdx) {\n    return `${session.sessionId}-${messageIdx}`;\n}\nexport function updateCode(state, response) {\n    const { chatState } = requireChatState(state);\n    if (hasActiveCodeResponse(chatState.inProgress)) {\n        chatState.inProgress.content = response.content;\n        if (response.tokens)\n            chatState.tokens = response.tokens;\n        if (response.maxTokens)\n            chatState.maxTokens = response.maxTokens;\n    }\n}\nexport async function completeRequest(state, wasAborted, onComplete) {\n    const { chatState } = requireChatState(state);\n    const code = hasActiveCodeResponse(chatState.inProgress) ? chatState.inProgress.content : '';\n    const message_id = messageId(chatState.session, chatState.messages.length + 1);\n    const content = chatState.inProgress.content;\n    if (!content && !wasAborted) {\n        throw new AssistantError('error', 'Missing content', 200);\n    }\n    chatState.messages.push({\n        role: 'assistant',\n        content,\n        messageId: message_id,\n        feedback: null,\n        tokens: chatState.tokens ?? 0,\n        maxTokens: chatState.maxTokens\n    });\n    chatState.inProgress = null;\n    chatState.lastUpdated = new Date();\n    // chatState.session is a wrapped immer proxy at this point, need to unwrap it\n    const session = original(chatState.session);\n    if (onComplete && session) {\n        const blocks = extractMessageBlocks(code);\n        const firstCodeBlock = blocks.find(block => block.type === 'python' && block.content !== '');\n        if (firstCodeBlock)\n            onComplete(firstCodeBlock.content, message_id, session);\n    }\n}\nexport function cleanupError(state, path, selectedChat, error) {\n    const notebook = state.notebooks.find(nb => nb.path === path);\n    const chatState = notebook?.chats[selectedChat];\n    if (!notebook || !chatState)\n        return;\n    if (error) {\n        chatState.inProgress = error;\n    }\n    else if (chatState.messages.length === 1) {\n        delete notebook.chats[selectedChat];\n    }\n    else {\n        chatState.messages.pop(); // Remove the last instruction\n        chatState.inProgress = null;\n    }\n}\nexport function removeFailedMessages(state) {\n    const notebook = getActiveNotebook(state);\n    const chatState = getActiveChat(state);\n    if (!notebook?.activeChatKey || !chatState || chatState?.inProgress?.type !== 'error')\n        return;\n    if (chatState.messages.length === 0) {\n        delete notebook.chats[notebook.activeChatKey];\n    }\n    else {\n        chatState.messages.pop(); // Remove the last instruction\n        chatState.inProgress = null;\n    }\n}\nexport function resetActiveChat(state) {\n    const { notebook, activeChatKey } = requireChatState(state);\n    delete notebook.chats[activeChatKey];\n}\nexport function submitFeedback(state, feedback) {\n    const { chatState } = requireChatState(state);\n    const message = chatState.messages.find(msg => msg.messageId === feedback.messageId);\n    if (message?.role === 'assistant')\n        message.feedback = feedback;\n}\nexport function setCellError(state, outputError) {\n    const activeNotebook = getActiveNotebook(state);\n    state.hidePopups = false;\n    if (activeNotebook)\n        activeNotebook.notebookState.error = outputError;\n}\nexport function setTextSelection(state, selection) {\n    const activeNotebook = getActiveNotebook(state);\n    state.hidePopups = false;\n    if (activeNotebook)\n        activeNotebook.notebookState.selectedText = selection;\n}\nexport function setSuggestionsLoading(state, loading) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = { ...activeNotebook.suggestionState, loading };\n    }\n}\nexport function setSuggestionsError(state, error) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = { ...activeNotebook.suggestionState, loading: false, error };\n    }\n}\nexport function setSuggestionsDataframe(state, dataframe) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = {\n            ...activeNotebook.suggestionState,\n            suggestions: null,\n            error: null,\n            loading: false,\n            dataframe\n        };\n    }\n}\nexport function updateSuggestions(state, suggestions) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = {\n            ...activeNotebook.suggestionState,\n            error: null,\n            loading: false,\n            suggestions: suggestions?.length ? suggestions : activeNotebook.suggestionState.suggestions\n        };\n    }\n}\nexport function resetSuggestions(state) {\n    const activeNotebook = getActiveNotebook(state);\n    if (activeNotebook) {\n        activeNotebook.suggestionState = {\n            dataframe: null,\n            error: null,\n            loading: false,\n            suggestions: null\n        };\n    }\n}\nexport function addNewInstruction(chatState, instruction) {\n    const { session, messages } = chatState;\n    const message_id = messageId(session, messages.length + 1);\n    const responseMessageId = messageId(session, messages.length + 2);\n    chatState.messages.push({\n        role: 'user',\n        content: instruction,\n        messageId: message_id\n    });\n    chatState.inProgress = { type: 'active', content: '', message_id: responseMessageId };\n}\nfunction setInitialChatState(state, context, instruction) {\n    const notebook = getActiveNotebook(state);\n    const chatKey = uuidv4();\n    if (notebook) {\n        notebook.chats[chatKey] = initialChatState(state.user || '', chatKey, context, instruction);\n        notebook.activeChatKey = chatKey;\n    }\n}\nfunction initialChatState(user_id, chatKey, context, instruction) {\n    const session = { sessionId: uuidv4(), userId: user_id };\n    const name = determineChatName(context, instruction);\n    return {\n        key: chatKey,\n        name,\n        context,\n        messages: [\n            {\n                role: 'user',\n                content: instruction,\n                messageId: messageId(session, 1),\n                tokens: 0\n            }\n        ],\n        inProgress: { type: 'active', content: '', message_id: messageId(session, 2) },\n        session,\n        tokens: 0,\n        lastUpdated: new Date(),\n        maxTokens: 4096\n    };\n}\nexport function getActiveChat(state) {\n    const notebook = state.notebooks.find(notebook => notebook.path === state.path);\n    return notebook?.activeChatKey ? notebook.chats[notebook.activeChatKey] || null : null;\n}\nexport function getInProgressResponse(state) {\n    const activeChat = getActiveChat(state);\n    return activeChat?.inProgress?.type === 'active' ? activeChat.inProgress : null;\n}\nexport function getPreviousChat(state) {\n    const notebook = state.notebooks.find(notebook => notebook.path === state.path);\n    return notebook?.previousChatKey ? notebook.chats[notebook.previousChatKey] || null : null;\n}\nexport function getActiveNotebook(state) {\n    const notebook = state.notebooks.find(notebook => notebook.path === state.path);\n    return notebook || null;\n}\nexport function getChatTitle(state) {\n    const activeNotebook = getActiveNotebook(state);\n    return !activeNotebook ? '' : titleFromChat(getActiveChat(state), activeNotebook);\n}\nexport function getIsNewChat(state) {\n    const activeNotebook = getActiveNotebook(state);\n    return !activeNotebook ? false : !activeNotebook.activeChatKey;\n}\nexport function getIsOnChatStarter(state) {\n    const activeNotebook = getActiveNotebook(state);\n    return !activeNotebook ? false : activeNotebook.homeScreen.selectedChatStarter !== null;\n}\nexport function getPreviousChatName(state) {\n    const activeNotebook = getActiveNotebook(state);\n    if (!activeNotebook)\n        return '';\n    const chat = getPreviousChat(state);\n    return chat ? determineChatName(chat.context, chat.messages[0].content) : '';\n}\nexport function gotoPreviousChat(state) {\n    const previousChat = getPreviousChat(state);\n    setActiveChat(state, previousChat?.key || null);\n}\nfunction determineChatName(context, instruction) {\n    const suffix = formatContextVariables(context, instruction);\n    switch (context.type) {\n        case 'graph-dataframe':\n            return `Graph ${suffix}`;\n        case 'describe-dataframe':\n            return `Describe data in ${suffix}`;\n        case 'explain-code':\n            return `Explain ${suffix}`;\n        case 'comment-code':\n            return `Comment ${suffix}`;\n        case 'improve-code':\n            return `Refactor ${suffix}`;\n        case 'debug-error':\n            return `Debugging ${suffix}`;\n        case 'suggestions-chat':\n        case 'default-python':\n        default:\n            if (instruction.startsWith(attachmentMessagePrefix)) {\n                return cleanMessageWithAttachmentPrefix(instruction);\n            }\n            else {\n                return `${instruction} (using ${suffix})`;\n            }\n    }\n}\nfunction titleFromChat(activeChat, activeNotebook) {\n    if (activeChat) {\n        return chatTitleFromContext(activeChat.context);\n    }\n    else if (activeNotebook.homeScreen.selectedChatStarter) {\n        return chatTitleFromStarterName(activeNotebook.homeScreen.selectedChatStarter.name);\n    }\n    else {\n        return 'New Chat';\n    }\n}\nfunction chatTitleFromContext(context) {\n    switch (context.type) {\n        case 'graph-dataframe':\n            return 'Generate graph from a Dataframe';\n        case 'describe-dataframe':\n            return 'Describe dataframe';\n        case 'explain-code':\n            return 'Explain code';\n        case 'comment-code':\n            return 'Comment code';\n        case 'improve-code':\n            return 'Format code';\n        case 'debug-error':\n            return 'Debug error';\n        case 'suggestions-chat':\n            return 'Assistant Suggestions';\n        case 'default-python':\n            return 'Generate Python code';\n        default:\n            return 'default-python';\n    }\n}\nfunction chatTitleFromStarterName(name) {\n    switch (name) {\n        case 'load-volcano-data':\n            return 'Volcano data from the Smithsonian Institute';\n        case 'plot-fibonacci':\n            return 'Plot Fibonacci numbers';\n        case 'mask-emails':\n            return 'Mask emails';\n        case 'load-a-dataframe':\n            return 'Load a DataFrame';\n        case 'describe-dataframe':\n            return 'Describe DataFrame';\n        case 'graph-dataframe':\n            return 'Generate graph from a DataFrame';\n        case 'data-cleaning-suggestions':\n            return 'Suggestions for cleaning data';\n        case 'dataframe-suggestions':\n            return 'Suggestions for working with DataFrames';\n        default:\n            return name;\n    }\n}\n","import { createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { createJSONStorage, devtools, persist } from 'zustand/middleware';\nimport { immer } from 'zustand/middleware/immer';\nimport { ASSISTANT_API_ERROR_NAME, ASSISTANT_API_NETWORK_ERROR_NAME, ASSISTANT_API_SERVER_ERROR_NAME, ASSISTANT_API_INVALID_RESPONSE_ERROR_NAME, ASSISTANT_API_UNKNOWN_ERROR_NAME, ASSISTANT_SDK_ERROR_NAME, ASSISTANT_SDK_INVALID_VERSION_ERROR_NAME, ASSISTANT_SDK_INVALID_API_URL_ERROR_NAME, ASSISTANT_SDK_UNKNOWN_ERROR_NAME } from '@anaconda/assistant-sdk';\nimport { ASSISTANT_ERROR, fetchSummary, generateRequest, getSuggestions, postFeedback } from '../.';\nimport { isTestMode, createTestStorage } from './test-storage';\nimport { cleanupError, completeRequest, getActiveChat, getActiveNotebook, gotoPreviousChat, removeFailedMessages, resetActiveChat, setActiveChat, setCellError, setNotebook, setSuggestionsDataframe, setSuggestionsError, setSuggestionsLoading, resetSuggestions, setTextSelection, setupInitialRequestState, submitFeedback, updateCode, updateSuggestions, addNewInstruction, requireChatState } from './state-fns';\nimport { resetToHomeScreen, selectChatStarter } from './home-screen-state-fns';\nimport { updateStoreState } from './rehydration-utils';\nimport { createContextInstructions } from '../utils/contextUtils';\nimport { getAssistantStore } from './AssistantStore';\nexport const STATE_VERSION = 11;\nexport let lastFetchedMaxTokens = 4096;\n// The abortController is used to ensure we only have one in-flight request at a time\nlet abortController = null;\n/**\n * This is where we define our global Zustand store. All actions that modify the store are also\n * defined here. We use the immer middleware to allow us to use immutable state in a more ergonomic way\n *\n * The store describes all the state of the application and the actions that can be taken to modify that state.\n * As such you should try and ensure to keep the store as clean as possible and extract any logic to external functions\n * such as the state-fns.ts file.\n *\n * In practice these external functions will be pure functions, since we are passing an immer 'draft' state to them\n * In the function, you can mutate the state as if it were mutable, and immer will take care of creating a new state\n *\n */\nexport const useStore = createWithEqualityFn(persist(devtools(immer((set, get) => ({\n    access: true,\n    terms: {\n        accepted: false,\n        version: null\n    },\n    serverUrl: null,\n    notebooks: [],\n    path: null,\n    settings: {\n        enableDataCollection: false,\n        open: false,\n        addCodeToNotebook: null\n    },\n    user: null,\n    account: null,\n    menuOpen: false,\n    attachContextOpen: false,\n    summarizedFiles: {},\n    setServerUrl: async () => {\n        let _serverUrl = null;\n        try {\n            _serverUrl = await getAssistantStore().getServerUrl();\n        }\n        catch (e) {\n            console.error('Error getting server url', e);\n        }\n        if (!_serverUrl) {\n            set(state => void (state.serverUrl = _serverUrl));\n        }\n    },\n    setPath: (path, nbState, getChatStarters) => {\n        if (path !== get().path && abortController) {\n            abortController.abort();\n            get().resetToHomeScreen();\n        }\n        set(state => setNotebook(state, path, nbState, getChatStarters));\n    },\n    setAccess: (access) => {\n        set(state => {\n            if (!access) {\n                state.logout();\n            }\n            else {\n                state.access = true;\n            }\n        }, true);\n    },\n    setTermsVersion: (version) => {\n        set(state => void (state.terms.version = version));\n    },\n    acceptTerms: (version, accepted) => {\n        set(state => {\n            state.terms.accepted = accepted;\n            // Ensure that other copies of the app also accept terms and conditions.\n            // We'll leave rejecting T&C to the API call that checks for the version on load.\n            if (accepted) {\n                getAssistantStore().syncDiskStateChained(accepted);\n            }\n        });\n    },\n    updateAccount: async () => {\n        if (getAssistantStore().isLocalDev())\n            return;\n        const account = await getAssistantStore().getNucleusAccount();\n        const maxTokens = await getAssistantStore().getAccountMaxTokens(account);\n        lastFetchedMaxTokens = maxTokens;\n        set(state => {\n            state.account = account;\n            const activeChat = getActiveChat(state);\n            if (!activeChat)\n                return;\n            activeChat.maxTokens = maxTokens;\n        }, true);\n    },\n    selectChatStarter: (chatStarter) => {\n        set(state => selectChatStarter(state, chatStarter));\n    },\n    resetToHomeScreen: () => {\n        abortController?.abort();\n        get().setAttachContextOpen(false);\n        get().setHidePopups(true);\n        set(state => void resetSuggestions(state));\n        set(state => resetToHomeScreen(state));\n        get().setMenuOpen(false);\n        set(state => void (state.settings.open = false));\n    },\n    setActiveChat: (chatKey) => {\n        abortController?.abort();\n        set(state => setActiveChat(state, chatKey));\n    },\n    setMenuOpen: (menuOpen) => {\n        set(state => void (state.menuOpen = menuOpen));\n    },\n    setCellError: (error) => {\n        set(state => void setCellError(state, error));\n    },\n    setTextSelection: (selection) => {\n        set(state => void setTextSelection(state, selection));\n    },\n    updateSuggestions: async (activeCell, type, dataframe, assistantSdk) => {\n        set(state => void setSuggestionsLoading(state, true));\n        try {\n            const suggestions = await getSuggestions(get(), activeCell, type, dataframe, assistantSdk, getActiveChat(get()), getActiveNotebook(get()));\n            set(state => void updateSuggestions(state, suggestions));\n        }\n        catch (e) {\n            set(state => void setSuggestionsLoading(state, false));\n            set(state => void setSuggestionsError(state, e.message));\n        }\n    },\n    setSuggestionsDataframe: (dataframe) => {\n        set(state => void setSuggestionsDataframe(state, dataframe));\n    },\n    toggleMenuOpen: () => {\n        set(state => void (state.menuOpen = !state.menuOpen));\n    },\n    setAttachContextOpen: (attachContextOpen) => {\n        set(state => {\n            state.hidePopups = false;\n            state.attachContextOpen = attachContextOpen;\n        });\n    },\n    addInstruction: async ({ instruction, fetchFileSummary }) => {\n        const chat = getActiveChat(get());\n        const context = chat ? chat.context : { type: 'default-python', variables: {} };\n        await get().makeChatRequest({ context, instruction, fetchFileSummary });\n    },\n    abortChatRequest: () => {\n        const chat = getActiveChat(get());\n        if (!chat?.inProgress)\n            return;\n        if (abortController) {\n            abortController.abort('User aborted request');\n            abortController = null;\n        }\n    },\n    makeChatRequest: async ({ context, instruction, fetchFileSummary }) => {\n        const account = await getAssistantStore().getNucleusAccount();\n        const isPro = account?.metadata?.is_pro_tier;\n        abortController = new AbortController();\n        const signal = abortController.signal;\n        set(state => setupInitialRequestState(state, context, instruction));\n        const contextInstructions = await createContextInstructions(get(), instruction, fetchFileSummary, isPro, abortController);\n        set(state => {\n            const activeChat = getActiveChat(state);\n            if (!activeChat)\n                return;\n            contextInstructions.forEach(instruction => {\n                addNewInstruction(activeChat, instruction);\n            });\n        });\n        const { path, activeChatKey, chatState } = requireChatState(get());\n        const sdk = getAssistantStore().getAssistantSdk();\n        let request = generateRequest(getActiveChat(get()), getActiveNotebook(get()));\n        if (isPro && chatState.summary) {\n            request.chatSummary =\n                chatState.summary.summary;\n        }\n        const onComplete = async () => {\n            set(state => {\n                completeRequest(state, Boolean(signal.aborted), () => {\n                    // Sync the latest messages from the active chat up to the disk state\n                    getAssistantStore().syncDiskStateChained();\n                });\n            });\n            const activeChat = getActiveChat(get());\n            if (activeChat && isPro) {\n                try {\n                    const summary = await fetchSummary({\n                        assistantSdk: sdk,\n                        activeChat,\n                        isPro\n                    });\n                    set(state => {\n                        const activeChat = getActiveChat(state);\n                        if (activeChat) {\n                            activeChat.summary = summary;\n                        }\n                    });\n                }\n                catch (e) {\n                    console.error('Error fetching summary', e);\n                }\n            }\n        };\n        try {\n            for await (const code of sdk.streamResponse(request, { abortController, isPro })) {\n                set(state => updateCode(state, code));\n            }\n            onComplete();\n        }\n        catch (e) {\n            // If the request was aborted, we don't want to show an error.\n            const isAborted = signal.aborted && signal.reason === 'User aborted request';\n            if (isAborted) {\n                onComplete();\n                return; // In this case we don't want to show an error\n            }\n            console.error('Error making chat request', e);\n            const error = refineError(e, instruction);\n            set(state => cleanupError(state, path, activeChatKey, error));\n        }\n        finally {\n            abortController = null;\n        }\n    },\n    addSyncedChats: (notebook, chats) => {\n        if (!(notebook && notebook.path))\n            return;\n        let findNotebook = (state) => state.notebooks.find(nb => nb.path === notebook.path);\n        for (const chat of chats) {\n            set(state => {\n                let _foundNotebook = findNotebook(state);\n                if (!_foundNotebook) {\n                    console.log(`Adding notebook ${notebook.path} to state after sync`);\n                    state.notebooks.push(notebook);\n                    _foundNotebook = notebook;\n                }\n                // Only add the chat if it doesn't already exist\n                if (!_foundNotebook.chats[chat.key]) {\n                    _foundNotebook.chats[chat.key] = chat;\n                }\n            });\n        }\n    },\n    resetActiveChat: () => {\n        abortController?.abort();\n        const chat = getActiveChat(get());\n        set(state => resetActiveChat(state));\n        if (chat && chat.messages.length > 0)\n            get().makeChatRequest({ context: chat.context, instruction: chat.messages[0].content });\n    },\n    deleteMessagesStartingWith: (message_id) => {\n        set(state => {\n            const activeChat = getActiveChat(state);\n            if (!activeChat)\n                return;\n            const index = activeChat.messages.findIndex(msg => msg.messageId === message_id);\n            activeChat.messages = activeChat.messages.slice(0, index);\n            activeChat.tokens = activeChat.messages[activeChat.messages.length - 1].tokens || 0;\n        });\n    },\n    submitFeedback: async (feedback) => {\n        set(state => void submitFeedback(state, feedback));\n        const session = getActiveChat(get())?.session;\n        if (session)\n            await postFeedback(getAssistantStore().getAssistantSdk(), { session, feedback });\n    },\n    retryError: () => {\n        const chatState = getActiveChat(get());\n        if (chatState?.inProgress?.type === 'error') {\n            const instruction = chatState.inProgress.failingInstruction;\n            const context = chatState.context;\n            set(state => removeFailedMessages(state));\n            get().makeChatRequest({ context, instruction });\n        }\n    },\n    gotoPreviousChat: () => {\n        set(state => void gotoPreviousChat(state));\n    },\n    toggleSettings: () => {\n        set(state => void (state.settings.open = !state.settings.open));\n    },\n    setEnableDataCollection: (enableDataCollection) => {\n        const sdk = getAssistantStore().getAssistantSdk();\n        if (enableDataCollection) {\n            sdk.enableDataCollection();\n        }\n        else {\n            sdk.disableDataCollection();\n        }\n        set(state => void (state.settings.enableDataCollection = enableDataCollection));\n    },\n    setAddCodeToNotebook: (addCodeToNotebook) => {\n        set(state => void (state.settings.addCodeToNotebook = addCodeToNotebook));\n    },\n    deleteChat: (chatKey) => {\n        set(state => {\n            const notebook = getActiveNotebook(state);\n            if (notebook && notebook.activeChatKey !== chatKey) {\n                getAssistantStore().deletedChatKeys.push(chatKey);\n                delete notebook.chats[chatKey];\n                return state;\n            }\n        });\n        getAssistantStore().syncDiskStateChained();\n    },\n    setHidePopups: (hidePopups) => {\n        set(state => {\n            state.hidePopups = hidePopups;\n            state.attachContextOpen = false;\n        });\n    },\n    addSummarizedFile: (path, summary, lastModified) => {\n        if (!path)\n            return;\n        set(state => {\n            state.summarizedFiles[path] = { summary, lastModified };\n        });\n    },\n    logout: () => {\n        set(state => {\n            getAssistantStore().unbindSyncDiskStateChained();\n            state.account = null;\n            state.user = null;\n            state.terms.accepted = false;\n            state.terms.version = null;\n            state.settings.open = false;\n            state.settings.enableDataCollection = false;\n            const notebook = getActiveNotebook(state);\n            state.notebooks = [\n                {\n                    ...notebook,\n                    path: notebook?.path,\n                    activeChatKey: null,\n                    previousChatKey: null,\n                    chats: {},\n                    notebookState: {\n                        dataframes: [],\n                        selectedCell: null,\n                        selectedText: null,\n                        error: null\n                    },\n                    suggestionState: {\n                        loading: false,\n                        suggestions: null,\n                        dataframe: null,\n                        error: null\n                    },\n                    homeScreen: {\n                        chatStarters: notebook?.homeScreen.chatStarters,\n                        selectedChatStarter: null\n                    }\n                }\n            ];\n            return state;\n        }, true);\n    }\n})), { enabled: process.env.NODE_ENV === 'development' } // Only enable devtools in development\n), {\n    name: 'anaconda-assistant',\n    version: STATE_VERSION,\n    storage: createJSONStorage(() => (isTestMode() ? createTestStorage() : localStorage)),\n    onRehydrateStorage: () => updateStoreState\n}), shallow);\nfunction refineError(e, instruction) {\n    if (abortController?.signal.aborted) {\n        return null; // In this case we don't want to show an error\n    }\n    const name = e.name;\n    const isKnownError = [\n        ASSISTANT_ERROR,\n        ASSISTANT_API_ERROR_NAME,\n        ASSISTANT_API_NETWORK_ERROR_NAME,\n        ASSISTANT_API_SERVER_ERROR_NAME,\n        ASSISTANT_API_INVALID_RESPONSE_ERROR_NAME,\n        ASSISTANT_API_UNKNOWN_ERROR_NAME,\n        ASSISTANT_SDK_ERROR_NAME,\n        ASSISTANT_SDK_INVALID_VERSION_ERROR_NAME,\n        ASSISTANT_SDK_INVALID_API_URL_ERROR_NAME,\n        ASSISTANT_SDK_UNKNOWN_ERROR_NAME\n    ].includes(name);\n    return {\n        type: 'error',\n        errorType: isKnownError ? e.type : 'unknown',\n        status: isKnownError ? e.status : 0,\n        message: isKnownError ? e.message : 'An unknown error occurred',\n        failingInstruction: instruction || ''\n    };\n}\n","// Store an abort controller per path\nconst abortControllers = {};\nexport async function getSuggestions(state, activeCell, type, dataframe, assistantSdk, activeChat, activeNotebook) {\n    return activeNotebook && (!activeChat || !abortControllers[activeNotebook.path])\n        ? _getSuggestions({\n            state,\n            activeNotebook,\n            activeChat,\n            activeCell,\n            type,\n            dataframe,\n            assistantSdk\n        })\n        : null;\n}\nasync function _getSuggestions(params) {\n    const { assistantSdk, state, activeNotebook, activeChat, activeCell, type, dataframe } = params;\n    if (!state.user) {\n        throw new Error('User is not logged in');\n    }\n    try {\n        const abortController = new AbortController();\n        abortControllers[activeNotebook.path] = abortController;\n        return await assistantSdk.fetchSuggestions({\n            session: activeChat?.session || {\n                userId: state.user,\n                // TODO: This is a legacy session ID that we should remove\n                // once we make suggestions create a new chat before fetching.\n                // Attempting to do so today causes an error which says that the list of chats cannot be modified.\n                // This is due to where I was trying to modify the chats.\n                // I will deal with this after the release.\n                sessionId: 'LEGACY_SUGGESTIONS'\n            },\n            type,\n            variables: {\n                code_cell: activeCell,\n                name: dataframe?.name || '',\n                dtypes_str: dataframe?.dtypesStr || ''\n            }\n        }, { abortController });\n    }\n    catch (e) {\n        console.error('Error fetching suggestions', e);\n        throw e;\n    }\n    finally {\n        // Remove the abort controller\n        abortControllers[activeNotebook.path] = null;\n    }\n}\n","const items = {};\nexport function isTestMode() {\n    return typeof localStorage === 'undefined';\n}\nexport function createTestStorage() {\n    return {\n        getItem: (name) => {\n            return items[name] ? JSON.parse(items[name]) : null;\n        },\n        setItem: (name, value) => {\n            items[name] = JSON.stringify(value);\n        },\n        removeItem: (name) => {\n            delete items[name];\n        }\n    };\n}\n","import React from 'react';\nexport const rootClassName = 'anaconda-assistant';\n/**\n * Fix the style hierarchy for a child component.\n * @internal\n */\nexport function fixStyleHierarchy(parentName, childName, childStyle) {\n    const expectedChildName = `${rootClassName}-${parentName}-${childName}-style`.replace('style-style', 'style');\n    return function innerFixStyleHierarchy(asChildName) {\n        // If ends in `-style`, replace style to match parent's hierarchy\n        if (asChildName === expectedChildName) {\n            return (React.createElement(\"style\", { className: asChildName }, childStyle.replaceAll(`${rootClassName}-${childName}`, `${rootClassName}-${parentName}-${childName}`)));\n        }\n        return null;\n    };\n}\n","import React from 'react';\nimport { Button, Div, Style } from '../base-elements';\nimport { Icons } from '../icons';\n/**\n * Style for the CodeOption component.\n * @alpha\n */\nexport const styleOfCodeOption = `\n.anaconda-assistant-code-option {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 8px 0;\n  border-radius: 8px;\n  border: 1px solid #8c94a6;\n  padding: 8px 8px 8px 12px;\n  cursor: pointer;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 20px;\n  width: 100%;\n  background-color: transparent;\n  color: var(--as-main-font-color, #2c303a);\n}\n\n.anaconda-assistant-code-option:hover,\n.anaconda-assistant-code-option:focus {\n  border-color: var(--as-border-color-secondary, #abb1bf);\n  background-color: var(--as-background-hover, #f3f4f6);\n}\n\n.anaconda-assistant-code-option-icon {\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid var(--as-border-color-secondary, #8c94a6);\n  display: flex;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  box-sizing: border-box;\n}\n\n.anaconda-assistant-code-option-icon svg {\n  width: 20px;\n  height: 20px;\n  color: #8c94a6;\n}\n\n.anaconda-assistant-code-option:hover,\n.anaconda-assistant-code-option:focus {\n  .anaconda-assistant-code-option-icon {\n    background: #0cca4a;\n    color: #fff;\n\n    svg {\n      color: white;\n    }\n  }\n}\n`;\n/**\n * Code block.\n * @alpha\n */\nexport const CodeOption = (props) => {\n    const { label, instruction, submit } = props;\n    return (React.createElement(Button, { mainContainer: true, asChildName: \"code-option\", onClick: () => submit(instruction ?? '') },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfCodeOption),\n        React.createElement(Div, { asChildName: \"label\" }, label),\n        React.createElement(Div, { asChildName: \"icon\" },\n            React.createElement(Icons.Send, null))));\n};\n","import React, { useEffect } from 'react';\nimport { Div, Style } from '../base-elements';\nimport { ErrorMessage } from '../chat-elements';\nimport { CodeOption } from './CodeOption';\nimport { getAssistantStore } from '../store';\n/**\n * Style for the CodeOptions component.\n * @alpha\n */\nexport const styleOfCodeOptions = `\n.anaconda-assistant-code-options {\n  margin-bottom: 56px;\n}\n\n.anaconda-assistant-code-options-header {\n  display: flex;\n  align-items: center;\n}\n\n.anaconda-assistant-code-options-header h4 {\n  flex: 1;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 20px;\n  padding: 0 0 0 12px;\n  margin: 0;\n}\n\n.anaconda-assistant-code-options-header-loading:after {\n  overflow: hidden;\n  display: inline-block;\n  vertical-align: bottom;\n  -webkit-animation: ellipsis steps(4, end) 1200ms infinite;\n  animation: ellipsis steps(4, end) 1200ms infinite;\n  content: '...';\n  width: 0;\n}\n\n.anaconda-assistant-code-options-header-refresh {\n  color: #6c5af6;\n  cursor: pointer;\n  margin-right: 12px;\n}\n\n.anaconda-assistant-code-options-header-refresh.disabled {\n  color: rgb(56, 116, 203, 0.5);\n  cursor: not-allowed;\n}\n`;\n/**\n * Code block.\n * @alpha\n */\nexport const CodeOptions = (props) => {\n    const { suggestionState, defaultDataFrame, chatStarterName, getActiveCodeCell, makeChatRequest, updateSuggestions, setSuggestionsDataframe, isProTier, resetActiveChat, showLogoutButton, logout } = props;\n    const { loading, suggestions, dataframe, error } = suggestionState ?? {\n        loading: false,\n        suggestions: null,\n        dataframe: null,\n        error: null\n    };\n    useEffect(() => {\n        // If suggestions are null, kick off a request to get suggestions\n        if (suggestions === null && !loading && !error) {\n            updateSuggestions(getActiveCodeCell(), chatStarterName, dataframe || defaultDataFrame);\n        }\n    }, [\n        chatStarterName,\n        dataframe,\n        defaultDataFrame,\n        getActiveCodeCell,\n        loading,\n        error,\n        suggestions,\n        updateSuggestions\n    ]);\n    const activeDataFrame = defaultDataFrame || dataframe;\n    function submit(instruction) {\n        makeChatRequest({\n            context: {\n                type: 'suggestions-chat',\n                variables: {\n                    code_cell: getActiveCodeCell(),\n                    name: activeDataFrame?.name || '',\n                    dtypes_str: activeDataFrame?.dtypesStr || ''\n                }\n            },\n            instruction\n        });\n    }\n    function refreshSuggestions() {\n        if (!loading)\n            setSuggestionsDataframe(null);\n    }\n    const isCleaning = chatStarterName === 'data-cleaning-suggestions';\n    return error ? (React.createElement(ErrorMessage, { errorMessage: error, retryError: refreshSuggestions, showLogoutButton: showLogoutButton, isProTier: isProTier, resetChat: resetActiveChat, logout: logout })) : (React.createElement(Div, { mainContainer: true, asChildName: \"code-options\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfCodeOptions),\n        React.createElement(Div, { asChildName: \"header\" },\n            loading ? (React.createElement(\"h4\", { className: \"anaconda-assistant-code-options-header-loading\" },\n                ' ',\n                \"Fetching suggestions for\",\n                ' ',\n                isCleaning ? 'data cleaning' : `this ${getAssistantStore().clientContextType}`)) : (React.createElement(\"h4\", null, activeDataFrame\n                ? `Some ideas to ${isCleaning ? 'clean' : 'make use of'} dataframe ${activeDataFrame.name}`\n                : 'What would you like to do?')),\n            React.createElement(Div, { onClick: refreshSuggestions, asChildName: \"refresh\", className: loading ? 'disabled' : '' }, \"Refresh Suggestions\")),\n        !loading &&\n            suggestions &&\n            suggestions.map((suggestion, idx) => (React.createElement(CodeOption, { key: idx, label: suggestion, instruction: suggestion, submit: submit })))));\n};\n","import React from 'react';\nimport { CodeOptions } from './CodeOptions';\nimport { SelectContext } from '../chat-elements/SelectContext';\n/**\n * Style for the GenerateSuggestions component.\n * @alpha\n */\nexport const styleOfGenerateSuggestions = `\n`;\n/**\n * Code block.\n * @alpha\n */\nexport const GenerateSuggestions = (props) => {\n    const { dataFrames, makeChatRequest, onSubmit, buttonLabel, enableDataCollection, activeNotebook, suggestionState, chatStarterName, getActiveCodeCell, updateSuggestions, setSuggestionsDataframe, isProTier, resetActiveChat, showLogoutButton, logout, suggestionDataFrame } = props;\n    if (!suggestionDataFrame && dataFrames) {\n        return (React.createElement(SelectContext, { dataFrames: dataFrames, makeChatRequest: makeChatRequest, contextType: \"assistant-suggestions\", buttonLabel: buttonLabel, onSubmit: onSubmit, enableDataCollection: enableDataCollection }));\n    }\n    return activeNotebook ? (React.createElement(CodeOptions, { suggestionState: suggestionState, defaultDataFrame: null, chatStarterName: chatStarterName, getActiveCodeCell: getActiveCodeCell, makeChatRequest: makeChatRequest, updateSuggestions: updateSuggestions, setSuggestionsDataframe: setSuggestionsDataframe, isProTier: isProTier, resetActiveChat: resetActiveChat, showLogoutButton: showLogoutButton, logout: logout })) : null;\n};\n","import React from 'react';\nimport { Div, Style } from '../base-elements';\nimport { CodeOption } from './CodeOption';\n/**\n * Style for the LoadADataframe component.\n * @alpha\n */\nexport const styleOfLoadADataframe = `\n.anaconda-assistant-load-dataframe {\n  margin-bottom: 56px;\n}\n\n.anaconda-assistant-load-dataframe h4 {\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 20px;\n  padding: 0 0 0 12px;\n  margin: 0;\n}\n`;\n/**\n * Code block.\n * @alpha\n */\nexport const LoadADataframe = (props) => {\n    const { options, makeChatRequest } = props;\n    function submit(instruction) {\n        makeChatRequest({ context: { type: 'default-python', variables: {} }, instruction });\n    }\n    return (React.createElement(Div, { mainContainer: true, asChildName: \"load-dataframe\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfLoadADataframe),\n        React.createElement(\"h4\", null, \"What would you like to do?\"),\n        options?.map((option, idx) => (React.createElement(CodeOption, { key: idx, label: option.label, instruction: option.instruction, submit: submit })))));\n};\n","import React from 'react';\nimport { Div, Style } from '../base-elements';\nimport { CodeOption } from './CodeOption';\n/**\n * Style for the SelectChatStarter component.\n * @alpha\n */\nexport const styleOfSelectChatStarter = `\n.anaconda-asistant-select-chat-starter {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.anaconda-asistant-select-chat-starter-section {\n  margin-bottom: 56px;\n}\n\n.anaconda-asistant-select-chat-starter-section h4 {\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 20px;\n  padding: 0 0 0 12px;\n  margin: 0;\n}\n`;\n/**\n * Code block.\n * @alpha\n */\nexport const SelectChatStarter = (props) => {\n    const { chatStarters, setChatStarter, makeChatRequest } = props;\n    if (!chatStarters) {\n        return null;\n    }\n    return (React.createElement(Div, { mainContainer: true, asChildName: \"select-chat-starter\" },\n        React.createElement(Style, { asChildName: \"style\" }, styleOfSelectChatStarter),\n        chatStarters.categories.map((category, idx) => (React.createElement(React.Fragment, { key: idx }, !category.doNotDisplay && (React.createElement(Div, { asChildName: \"section\" },\n            React.createElement(\"h4\", null, category.label),\n            category.starters.map((chatStarter, idc) => (React.createElement(React.Fragment, { key: idc }, !chatStarter.doNotDisplay && (React.createElement(CodeOption, { label: chatStarter.label, submit: () => chatStarter.instruction\n                    ? makeChatRequest({\n                        context: { type: 'default-python', variables: {} },\n                        instruction: chatStarter.instruction\n                    })\n                    : setChatStarter(chatStarter) }))))))))))));\n};\n","export * from './SelectChatStarter';\nexport * from './CodeOptions';\nexport * from './GenerateSuggestions';\nexport * from './LoadADataframe';\n","/**\n * Array of available options for adding code to a notebook.\n * @alpha\n */\nexport const ADD_CODE_TO_NOTEBOOK_TYPES = [\n    'below-active-cell',\n    'at-end-of-notebook',\n    'in-place'\n];\n","const extractPartsRegex = /\\n?``` ?(python)?\\n?/gms;\nexport function extractMessageBlocks(message) {\n    const matches = message.matchAll(extractPartsRegex);\n    const blocks = [];\n    let currentIdx = 0;\n    let currentType = 'text';\n    for (const match of matches) {\n        if (match.index !== undefined && match.index !== -1) {\n            const part = message.substring(currentIdx, match.index);\n            blocks.push({ type: currentType, content: part });\n            currentIdx = match.index + match[0].length;\n            currentType = currentType === 'text' ? (match[1] === 'python' ? 'python' : 'output') : 'text';\n        }\n    }\n    if (currentIdx < message.length)\n        blocks.push({ type: currentType, content: message.substring(currentIdx) });\n    return blocks.filter(block => block.content !== '');\n}\n","import { startCase, truncate } from 'lodash';\nimport { attachmentMessagePrefix } from './SpecialPrefixes';\nimport { getAssistantStore } from '../store';\nexport function formatContextVariables(context, content, notebookName) {\n    const contextMessages = [];\n    switch (context.type) {\n        case 'graph-dataframe':\n        case 'describe-dataframe':\n            contextMessages.push(`dataframe ${context.variables.dataframe.name}`);\n            break;\n        case 'explain-code':\n        case 'comment-code':\n        case 'improve-code':\n            if (context.variables.selected_code) {\n                contextMessages.push('selected code');\n            }\n            break;\n        case 'debug-error':\n            if (context.variables.error_cell_code) {\n                contextMessages.push('error cell');\n            }\n            if (context.variables.error_output) {\n                contextMessages.push(`error output: ${truncate(context.variables.error_output, { length: 100 })}`);\n            }\n            break;\n        case 'suggestions-chat':\n            if (context.variables.code_cell) {\n                contextMessages.push('active code cell');\n            }\n            if (context.variables.name) {\n                contextMessages.push(`dataframe ${context.variables.name}`);\n            }\n            break;\n        case 'default-python':\n        default:\n            if (content.startsWith(attachmentMessagePrefix)) {\n                return '';\n            }\n            else {\n                const contextTypeTitle = startCase(getAssistantStore().clientContextType);\n                contextMessages.push(notebookName\n                    ? `${contextTypeTitle} ${notebookName}`\n                    : `no context from ${contextTypeTitle}`);\n            }\n            break;\n    }\n    if (contextMessages.length === 0) {\n        return '';\n    }\n    if (contextMessages.length === 1) {\n        return contextMessages[0];\n    }\n    return `${contextMessages.slice(0, -1).join(', ')} and ${contextMessages.slice(-1)}`;\n}\n","import React, { useEffect } from 'react';\n/**\n * Function to clear timeout\n * @alpha\n */\nfunction doClearTimeout(timeout) {\n    if (timeout) {\n        clearTimeout(timeout);\n    }\n}\n/**\n * Remove DOM element after animation is done\n * @alpha\n */\nexport function RemoveAfter(params) {\n    const { delay, show, children } = params;\n    // Used to remove elements from the DOM after an animation is done,\n    // otherwise they might be visible in certain screens or after resizing the window.\n    const [remove, setRemove] = React.useState(true);\n    // Debounce the removal of the popup, to allow the animation to finish\n    const timeoutRef = React.useRef(null);\n    useEffect(() => {\n        doClearTimeout(timeoutRef.current);\n        if (show) {\n            setRemove(false);\n        }\n        else {\n            timeoutRef.current = setTimeout(() => {\n                setRemove(true);\n            }, delay);\n        }\n        return () => {\n            doClearTimeout(timeoutRef.current);\n        };\n    }, [show, delay]);\n    return React.createElement(React.Fragment, null, remove ? null : children);\n}\n","/**\n * We will inject this prefix to all messages that contain attachments.\n * Before sending messages to our API, we will remove this prefix.\n * @alpha\n */\nexport const attachmentMessagePrefix = 'attachment://';\n/**\n * The identifier for a dataframe message.\n * @alpha\n */\nexport const dataframeMessageIdentifier = 'DataFrame.dtypes>>>';\n/**\n * The identifier for a file message.\n * @alpha\n */\nexport const fileMessageIdentifier = 'File>>>';\n/**\n * A helper function that instructs the AI to respond acknowledging the receipt of a dataframe.\n * @alpha\n */\nexport function attachmentDataframeInstruction(name, cols) {\n    return (`${attachmentMessagePrefix}` +\n        `In a brief sentence, acknowledge you have received the following dataframe information: ` +\n        `\\`${dataframeMessageIdentifier} ${name}.dtypes\\` outputs:\\n\\`\\`\\`\\n${cols\n            .map(col => `${col[0]} ${col[1]}`)\n            .join('\\n')}\\n\\`\\`\\``);\n}\n/**\n * A helper function that instructs the AI to observe the file, but only answer to the user's request.\n */\nexport function attachmentFileInstruction(name, path, summary) {\n    return (`${attachmentMessagePrefix}` +\n        `<active-notebook>\\n` +\n        `\\`${fileMessageIdentifier} ${name}\\`\\npath:${path}\\nsummary:\\n\\`\\`\\`\\n${summary}\\n\\`\\`\\`\\n` +\n        `</active-notebook>`);\n}\n/**\n * A helper function that cleans the message sent by the AI to the user.\n * @alpha\n */\nexport function cleanMessageWithAttachmentPrefix(message) {\n    // Extracting df.dtypes from the message.\n    const matchDataframeMessage = message.match(/`DataFrame.dtypes>>> (.*)`/);\n    const matchFileMessage = message.match(/`File>>> (.*)`/);\n    if (matchDataframeMessage) {\n        const name = matchDataframeMessage[1].split('.')[0];\n        return `Attached the column names and types of dataframe ${name}: \\`${matchDataframeMessage[1]}\\`.`;\n    }\n    else if (matchFileMessage) {\n        return `Attached the file ${matchFileMessage[1]}.`;\n    }\n    else {\n        return message;\n    }\n}\n","import { attachmentDataframeInstruction, attachmentFileInstruction, useStore } from '../.';\nimport { getActiveChat, getActiveNotebook } from '../store/state-fns';\nexport async function createContextInstructions(state, instruction, fetchFileSummary, isPro, abortController) {\n    if (!isPro) {\n        return [];\n    }\n    const activeNotebook = getActiveNotebook(state);\n    const activeNotebookState = activeNotebook?.notebookState;\n    const dataframes = activeNotebookState?.dataframes || [];\n    const instructions = [];\n    const activeChat = getActiveChat(useStore.getState());\n    if (!activeChat || !activeNotebook) {\n        return instructions;\n    }\n    const summarizedFiles = useStore.getState().summarizedFiles;\n    const summarizedFilesKeys = Object.keys(summarizedFiles);\n    const activeNotebookSummaryKey = summarizedFilesKeys.find(path => path.slice(-activeNotebook.path.length) === activeNotebook.path);\n    // Find active notebook by matching `@file:${name}`\n    if (activeNotebookSummaryKey) {\n        const activeNotebookSummary = summarizedFiles[activeNotebookSummaryKey];\n        const name = activeNotebook.path.split('/').pop() || activeNotebook.path;\n        const newInstruction = attachmentFileInstruction(name, activeNotebook.path, activeNotebookSummary.summary);\n        const alreadyAttached = activeChat.messages.length > 1;\n        if (newInstruction && !alreadyAttached) {\n            instructions.push(newInstruction);\n        }\n    }\n    // Find dataframe by matching `@dataframe:${name}`\n    for (const df of dataframes) {\n        const isReferenced = instruction.includes(`@dataframe:${df.name}`);\n        if (isReferenced) {\n            const newInstruction = attachmentDataframeInstruction(df.name, df.cols);\n            const alreadyExistsInChatHistory = activeChat.messages.some(message => message.content === newInstruction);\n            if (!alreadyExistsInChatHistory) {\n                instructions.push(newInstruction);\n            }\n        }\n    }\n    // Find file by matching `@file:${name}`\n    for (const fileName of summarizedFilesKeys) {\n        try {\n            const isReferenced = instruction.includes(`@file:${fileName}`);\n            if (isReferenced && fetchFileSummary) {\n                const summary = await fetchFileSummary(activeChat, fileName, summarizedFiles[fileName].lastModified, state.settings.enableDataCollection, undefined, abortController);\n                if (!summary) {\n                    continue;\n                }\n                const newInstruction = attachmentFileInstruction(fileName, fileName, summary);\n                const alreadyExistsInChatHistory = activeChat.messages.some(message => message.content === newInstruction);\n                if (!alreadyExistsInChatHistory) {\n                    instructions.push(newInstruction);\n                }\n            }\n        }\n        catch (error) {\n            console.log('Error fetching file summary', error);\n            return [];\n        }\n    }\n    return instructions;\n}\n","export const ASSISTANT_ERROR = 'ASSISTANT_ERROR';\nexport class AssistantError extends Error {\n    name = ASSISTANT_ERROR;\n    status;\n    type;\n    constructor(type, message, status) {\n        super(message);\n        this.status = status;\n        this.type = type;\n    }\n}\n","export * from './SpecialPrefixes';\nexport * from './RemoveAfterHide';\nexport * from './CodeCleaner';\nexport * from './ContextMessage';\nexport * from './summaryUtils';\nexport * from './testUtils';\nexport * from './errors';\nexport * from './contextUtils';\nexport * from './testStoreUtils';\nexport * from './tokenCounter';\n","export async function fetchSummary({ assistantSdk, activeChat, isPro, maxTokens: number = 15565 // As received from the API\n }) {\n    if (!(activeChat && isPro))\n        return;\n    const messages = chatMessagesUnderLimit(activeChat);\n    return assistantSdk.proFetchSummary({\n        session: activeChat.session,\n        responseMessageId: activeChat.messages[activeChat.messages.length - 1].messageId,\n        source: {\n            name: 'chat-history',\n            type: 'chat-history',\n            data: messages.map(msg => ({\n                role: msg.role,\n                content: msg.content,\n                messageId: msg.messageId,\n                tokens: msg.tokens || 0\n            }))\n        }\n    });\n}\n// If there is a summary in the active chat,\n// And if the total tokens of the chat + the summary tokens exceed the max tokens of the model,\n// we remove the oldest messages until the total tokens are under the limit.\nexport function chatMessagesUnderLimit(activeChat, maxTokens = 15565 // As received from the API\n) {\n    let messages = Array.prototype.slice.call(activeChat.messages);\n    // If there is no summary, return the messages as is\n    if (!activeChat.summary) {\n        return messages;\n    }\n    // The API currently doesn't return the number of tokens in the summary, but this should be enough for now.\n    const summaryTokens = Math.ceil((activeChat.summary?.summary.length || 0) / 3);\n    const totalTokens = activeChat.tokens + summaryTokens;\n    const tokensOverTheLimit = totalTokens - maxTokens;\n    if (tokensOverTheLimit > 0) {\n        let messagesToRemove = 0;\n        let tokensToRemove = tokensOverTheLimit;\n        for (let i = 0; i < messages.length; i++) {\n            const msg = messages[i];\n            if (tokensToRemove > 0) {\n                tokensToRemove -= msg.tokens || Math.ceil(msg.content.length / 3);\n                messagesToRemove++;\n            }\n            else {\n                break;\n            }\n        }\n        messages = messages.slice(messagesToRemove);\n    }\n    return messages;\n}\n","import { sleep } from './testUtils';\nimport { AssistantError } from './errors';\nexport function graphChatType(df1) {\n    return {\n        type: 'graph-dataframe',\n        variables: { dataframe: df1 }\n    };\n}\nexport const exampleCodeResponses = [\n    'imp',\n    'import',\n    'import matplot',\n    'import matplotlib.pyplot',\n    'import matplotlib.pyplot as plt',\n    'import matplotlib.pyplot as plt\\ndf.plot()'\n];\nexport async function* mockStream(request, options) {\n    let aborted = false;\n    options?.abortController?.signal.addEventListener('abort', () => (aborted = true));\n    for (const item of exampleCodeResponses) {\n        if (aborted) {\n            throw new DOMException('Aborted', 'AbortError');\n        }\n        await sleep(100);\n        yield {\n            content: item,\n            tokens: Math.floor(item.length / 4),\n            maxTokens: 0\n        };\n    }\n}\nexport async function* mockStreamWithError(request, options) {\n    let count = 0;\n    for (const item of exampleCodeResponses) {\n        if (count++ === 2)\n            throw new AssistantError('network error', 'network error', 400);\n        await sleep(100);\n        yield {\n            content: item,\n            tokens: Math.floor(item.length / 4),\n            maxTokens: 0\n        };\n    }\n}\n","export function createDataframe(name, hash) {\n    return {\n        name,\n        hash: hash || 'dataframe_hash',\n        type: 'DataFrame',\n        cols: [\n            ['PassengerId', 'int64'],\n            ['Survived', 'int64']\n        ],\n        dtypesStr: 'dtypes_str'\n    };\n}\nexport function createEmptyState(path, dataframe) {\n    return {\n        access: true,\n        terms: {\n            accepted: true,\n            version: '1.0.0'\n        },\n        notebooks: [\n            {\n                path,\n                activeChatKey: dataframe.hash,\n                previousChatKey: null,\n                notebookState: {\n                    dataframes: [dataframe],\n                    selectedCell: null,\n                    selectedText: null,\n                    error: null\n                },\n                chats: {\n                    [dataframe.hash]: {\n                        key: 'key',\n                        name: 'Chat',\n                        context: { type: 'graph-dataframe', variables: { dataframe } },\n                        messages: [{ role: 'user', messageId: '123', content: '' }],\n                        inProgress: { type: 'active', content: 'import p', message_id: '1' },\n                        session: { sessionId: '1', userId: '1' },\n                        tokens: 0,\n                        lastUpdated: new Date(),\n                        maxTokens: 4096\n                    }\n                },\n                homeScreen: {\n                    chatStarters: {}, // replace with mock chatStarters\n                    selectedChatStarter: null\n                },\n                suggestionState: { loading: false, suggestions: null, dataframe: null, error: null }\n            }\n        ],\n        path: './notebook1',\n        settings: { open: false, enableDataCollection: false, addCodeToNotebook: 'below-active-cell' },\n        user: 'assistant_user',\n        account: null,\n        menuOpen: false,\n        attachContextOpen: false,\n        serverUrl: null,\n        summarizedFiles: {}\n    };\n}\nexport async function sleep(time) {\n    await new Promise(resolve => setTimeout(resolve, time));\n}\n","// We use https://github.com/nem035/GPT-3-Encoder, which is a fork of https://github.com/latitudegames/GPT-3-Encoder\n// since the original uses node apis which cannot be bundled in the library\n// Should look at either vendoring it, or creating our own fork\nimport { encode } from '@nem035/gpt-3-encoder';\nexport function countTokens(message) {\n    return encode(message).length;\n}\n","/**\n * Access token management\n * @alpha\n */\nexport class AnacondaAssistantAccessTokenManager {\n    _accessToken = null;\n    _accessTokenExpiresAt = null;\n    constructor(opts) {\n        this._accessToken = opts.accessToken || null;\n        this._accessTokenExpiresAt = opts.expiresAt || null;\n    }\n    setAccessToken(accessToken) {\n        this._accessToken = accessToken.accessToken;\n        this._accessTokenExpiresAt = accessToken.expiresAt || null;\n    }\n    ensureValidAccessToken() {\n        if (this._accessToken === null) {\n            throw new Error('No access token set');\n        }\n        if (this._accessTokenExpiresAt === null) {\n            throw new Error('No access token expiration set');\n        }\n        if (this._accessTokenExpiresAt < Date.now()) {\n            throw new Error('Access token expired');\n        }\n    }\n    getAccessToken() {\n        this.ensureValidAccessToken();\n        return {\n            accessToken: this._accessToken,\n            expiresAt: this._accessTokenExpiresAt\n        };\n    }\n}\n","import { AnacondaAssistantAccessTokenManager } from './accessToken';\nimport { AssistantEnvironmentTypes } from './environmentTypes';\nimport { AnacondaAssistantHTTPClient } from './http';\nimport { fetchAccess } from './methods/fetchAccess';\nimport { fetchSuggestions } from './methods/fetchSuggestions';\nimport { fetchTermsAndConditionsVersion } from './methods/fetchTermsAndConditions';\nimport { proStreamResponse } from './methods/proStreamResponse';\nimport { proFetchSummary } from './methods/proFetchSummary';\nimport { streamResponse } from './methods/streamResponse';\nimport { submitCodeExecutionResult } from './methods/submitCodeExecutionResult';\nimport { submitFeedback } from './methods/submitFeedback';\nimport { ANACONDA_ASSISTANT_PRODUCTION_API_URL } from './publicTypes';\nimport { transformSubmitCodeExecutionRequest, transformCompletionRequest, transformFetchSuggestionsRequest, transformSubmitFeedbackRequest, transformProCompletionRequest, transformProFetchSummaryRequest } from './transformations';\nimport { validateAPIUrl } from './validators';\nexport const SDK_VERSION = '0.0.1';\n/**\n * Anaconda Assistant SDK\n * @alpha\n */\nexport class AnacondaAssistant {\n    sdkVersion = SDK_VERSION;\n    apiUrl;\n    clientVersion;\n    accessToken;\n    environmentTypes;\n    _http;\n    _enableDataCollection;\n    _transformHeaders = headers => headers;\n    constructor(opts) {\n        const apiUrl = opts.apiUrl || ANACONDA_ASSISTANT_PRODUCTION_API_URL;\n        const routePrefix = opts.routePathPrefix || '';\n        validateAPIUrl(apiUrl);\n        this.apiUrl = apiUrl + routePrefix;\n        this.clientVersion = opts.clientVersion;\n        this._enableDataCollection = opts.enableDataCollection || false;\n        this.accessToken = new AnacondaAssistantAccessTokenManager({\n            accessToken: opts.authorization?.accessToken || '',\n            expiresAt: opts.authorization?.expiresAt || 0\n        });\n        this.environmentTypes = new AssistantEnvironmentTypes(opts.environmentType);\n        this._http = new AnacondaAssistantHTTPClient({\n            apiUrl: this.apiUrl,\n            getHeaders: this.makeHeaders.bind(this)\n        });\n    }\n    enableDataCollection() {\n        this._enableDataCollection = true;\n    }\n    disableDataCollection() {\n        this._enableDataCollection = false;\n    }\n    setTransformHeaders(transformHeaders) {\n        this._transformHeaders = transformHeaders;\n    }\n    makeHeaders() {\n        return this._transformHeaders({\n            'X-Client-Version': this.clientVersion,\n            'X-SDK-Version': SDK_VERSION,\n            'Content-Type': 'application/json',\n            'X-Client-Source': this.environmentTypes.getClientSource(),\n            Authorization: `Bearer ${this.accessToken.getAccessToken()?.accessToken}`\n        });\n    }\n    async fetchAccess() {\n        return fetchAccess({\n            http: this._http\n        });\n    }\n    async fetchTermsAndConditionsVersion() {\n        return fetchTermsAndConditionsVersion({\n            http: this._http\n        });\n    }\n    async submitFeedback(request, options) {\n        return submitFeedback({\n            version: options?.version || 'v2',\n            http: this._http,\n            request: transformSubmitFeedbackRequest(request, this._enableDataCollection)\n        });\n    }\n    async *streamResponse(request, options) {\n        let stream;\n        if (options?.isPro) {\n            stream = proStreamResponse({\n                version: options?.version || 'v1',\n                http: this._http,\n                request: transformProCompletionRequest(request, this._enableDataCollection),\n                abortController: options?.abortController\n            });\n        }\n        else {\n            stream = streamResponse({\n                version: options?.version || 'v3',\n                http: this._http,\n                request: transformCompletionRequest(request, this._enableDataCollection),\n                abortController: options?.abortController\n            });\n        }\n        for await (const response of stream) {\n            yield response;\n        }\n    }\n    async fetchSuggestions(request, options) {\n        const suggestions = await fetchSuggestions({\n            version: options?.version || 'v2',\n            http: this._http,\n            request: transformFetchSuggestionsRequest(request, this._enableDataCollection),\n            abortController: options?.abortController\n        });\n        return suggestions.map(suggestion => suggestion.text);\n    }\n    async submitCodeExecutionResult(request, options) {\n        return submitCodeExecutionResult({\n            version: options?.version || 'v2',\n            http: this._http,\n            request: transformSubmitCodeExecutionRequest(request, this._enableDataCollection),\n            abortController: options?.abortController\n        });\n    }\n    async proFetchSummary(request, options) {\n        return proFetchSummary({\n            version: options?.version || 'v1',\n            http: this._http,\n            request: transformProFetchSummaryRequest(request, this._enableDataCollection)\n        });\n    }\n}\n","/**\n * Anaconda Assistant Environment Types\n * @alpha\n */\nexport class AssistantEnvironmentTypes {\n    _environmentType;\n    constructor(_environmentType) {\n        this._environmentType = _environmentType;\n    }\n    isLocalDev() {\n        return this._environmentType === 'local-dev';\n    }\n    isLocalNotebooks() {\n        return this._environmentType === 'local-notebooks-prod' || this.isLocalNotebooksDev();\n    }\n    isLocalNotebooksDev() {\n        return this._environmentType === 'local-notebooks-dev';\n    }\n    isCloudNotebooks() {\n        return this._environmentType === 'cloud-notebooks-prod';\n    }\n    isCloudNotebooksStaging() {\n        return this._environmentType === 'cloud-notebooks-staging';\n    }\n    isEnterpriseNotebooksDev() {\n        return this._environmentType === 'enterprise-notebooks-dev';\n    }\n    isEnterpriseNotebooks() {\n        return this._environmentType === 'enterprise-notebooks-prod' || this.isEnterpriseNotebooksDev();\n    }\n    isPyexcelDev() {\n        return this._environmentType === 'pyexcel-dev';\n    }\n    isPyexcel() {\n        return this._environmentType === 'pyexcel-prod' || this.isPyexcelDev();\n    }\n    getClientSource() {\n        if (this.isLocalDev())\n            return 'anaconda-local-dev';\n        if (this.isCloudNotebooksStaging())\n            return 'anaconda-cloud-notebooks-staging';\n        if (this.isCloudNotebooks())\n            return 'anaconda-cloud-notebooks-prod';\n        if (this.isLocalNotebooksDev())\n            return 'anaconda-local-notebooks-dev';\n        if (this.isLocalNotebooks())\n            return 'anaconda-local-notebooks-prod';\n        if (this.isEnterpriseNotebooksDev())\n            return 'anaconda-enterprise-notebooks-dev';\n        if (this.isEnterpriseNotebooks())\n            return 'anaconda-enterprise-notebooks-prod';\n        if (this.isPyexcelDev())\n            return 'anaconda-pyexcel-dev';\n        if (this.isPyexcel())\n            return 'anaconda-pyexcel-prod';\n        throw new Error('Unknown environment type');\n    }\n}\n","import { ASSISTANT_API_SERVER_ERROR_NAME, AssistantAPINetworkError, AssistantAPIServerError } from './publicTypes';\n/**\n * Anaconda Assistant HTTP Client\n * @alpha\n */\nexport class AnacondaAssistantHTTPClient {\n    _apiUrl;\n    _getHeaders;\n    constructor(opts) {\n        this._apiUrl = opts.apiUrl;\n        this._getHeaders = opts.getHeaders;\n    }\n    async fetchSafely(options) {\n        const { path, body, method, abortController } = options;\n        const headers = this._getHeaders();\n        const request = new Request(`${this._apiUrl}${path}`, {\n            method,\n            headers,\n            body,\n            signal: abortController?.signal\n        });\n        try {\n            const response = await fetch(request);\n            if (response.status > 299) {\n                const text = await response.text();\n                if (matchesKnownError(text)) {\n                    throw new AssistantAPIServerError(text, { request, response });\n                }\n                throw new AssistantAPIServerError('There was an issue connecting to the Assistant server. Please try again.', { request, response });\n            }\n            return { request, response };\n        }\n        catch (e) {\n            if (e.name === ASSISTANT_API_SERVER_ERROR_NAME) {\n                throw e;\n            }\n            throw new AssistantAPINetworkError('There was an issue connecting to the Assistant server. Please try again.', { request });\n        }\n    }\n}\nexport function matchesKnownError(text) {\n    if (text.includes('Too many requests') ||\n        text.includes('requests allowed exceeded') ||\n        text.includes('maximum context length') ||\n        text.includes('org_blacklisted')) {\n        return true;\n    }\n    return false;\n}\n","export { AnacondaAssistantAccessTokenManager as AnacondaAssistantAccessToken } from './accessToken';\nexport { AssistantEnvironmentTypes } from './environmentTypes';\nexport { AnacondaAssistantHTTPClient } from './http';\nexport { AnacondaAssistant } from './assistant';\nexport * from './publicTypes';\n","import { AssistantAPIServerError } from '../publicTypes';\n/**\n * Helps determine whether user has access to Assistant\n * @internal\n */\nexport async function fetchAccess(opts) {\n    const { http } = opts;\n    const { request, response } = await http.fetchSafely({\n        method: 'POST',\n        path: '/access'\n    });\n    // Return false only if access denied due to org being blacklisted\n    if (response.status === 403) {\n        const data = await response.json();\n        const errorCode = data.error.code;\n        if (errorCode === 'org_blacklisted')\n            return false;\n    }\n    // Handle other errors. User should not be allowed, if we can't determine\n    // if they have access due to their org being blacklisted.\n    if (response.status !== 200) {\n        throw new AssistantAPIServerError('Unable to determine if user has access.', {\n            request,\n            response\n        });\n    }\n    return true;\n}\n","import { AssistantSupportedEndpointVersions, AssistantAPIServerError, AssistantAPIInvalidResponseError, validateVersion } from '../publicTypes';\n/**\n * Fetch suggestions\n * @internal\n */\nexport async function fetchSuggestions(opts) {\n    const { version, http, request, abortController } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.FETCH_SUGGESTIONS_SUPPORTED_VERSIONS);\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/${version}/suggestions`,\n        body: JSON.stringify(request),\n        abortController\n    });\n    if (response.status !== 200) {\n        throw new AssistantAPIServerError('Unable to fetch suggestions.', {\n            request: fetchRequest,\n            response\n        });\n    }\n    let suggestions;\n    try {\n        suggestions = (await response.json()).suggestions;\n    }\n    catch (e) {\n        throw new AssistantAPIInvalidResponseError('Unable to parse suggestions response.', {\n            request: fetchRequest,\n            response\n        });\n    }\n    if (!Array.isArray(suggestions)) {\n        throw new AssistantAPIInvalidResponseError('Received suggestions is not an array.', {\n            request: fetchRequest,\n            response\n        });\n    }\n    return suggestions;\n}\n","import { AssistantAPIInvalidResponseError, AssistantAPIServerError } from '../publicTypes';\n/**\n * Reads the last available version of the terms and conditions,\n * which should be used to force the user to accept the new ones if they have changed.\n * @internal\n */\nexport async function fetchTermsAndConditionsVersion(opts) {\n    const { http } = opts;\n    const { request, response } = await http.fetchSafely({\n        path: '/terms-and-conditions-version',\n        method: 'GET'\n    });\n    if (response.status !== 200) {\n        throw new AssistantAPIServerError('Unable to fetch terms and conditions version.', {\n            request,\n            response\n        });\n    }\n    try {\n        const data = await response.json();\n        return data.version;\n    }\n    catch (e) {\n        throw new AssistantAPIInvalidResponseError('Unable to parse terms and conditions version.', {\n            request,\n            response\n        });\n    }\n}\n","import { AssistantAPIServerError, AssistantSupportedEndpointVersions, validateVersion } from '../publicTypes';\n/**\n * Post feedback\n * @internal\n */\nexport async function proFetchSummary(opts) {\n    const { version, http, request } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.PRO_SUMMARIES_SUPPORTED_VERSIONS);\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/${version}/pro/summaries`,\n        body: JSON.stringify(request)\n    });\n    if (response.status !== 200) {\n        throw new AssistantAPIServerError('Unable to create summary', {\n            request: fetchRequest,\n            response\n        });\n    }\n    const json = await response.json();\n    return {\n        summary: json.data.summary,\n        summaryDate: json.data.summary_date,\n        summaryTechnique: json.data.summary_technique\n    };\n}\n","import { AssistantAPIInvalidResponseError, AssistantSupportedEndpointVersions, validateVersion } from '../publicTypes';\nimport { containsTokenCount, parseMaxTokenCount, parseTokenCount, removeTokenCount } from '../responseTokens';\n/**\n * Stream response\n * @internal\n */\nexport async function* proStreamResponse(opts) {\n    const { version, http, request, abortController } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.PRO_STREAM_RESPONSE_SUPPORTED_VERSIONS);\n    // Similar streamed call as to OpenAI but to https://assistant.anaconda.cloud/v2/completions\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/${version}/pro/completions`,\n        body: JSON.stringify(request),\n        abortController\n    });\n    if (!response.body) {\n        throw new AssistantAPIInvalidResponseError('Empty stream when parsing response', {\n            request: fetchRequest,\n            response\n        });\n    }\n    const reader = response.body.getReader();\n    const decoder = new TextDecoder();\n    let done = false;\n    let chunk = '';\n    while (!done) {\n        const { value, done: doneReading } = await reader.read();\n        done = doneReading;\n        const chunkValue = decoder.decode(value);\n        chunk = chunk + chunkValue;\n        if (!containsTokenCount(chunk)) {\n            yield {\n                content: chunk\n            };\n        }\n        else {\n            const tokens = parseTokenCount(chunk);\n            const maxTokens = parseMaxTokenCount(chunk);\n            yield {\n                content: removeTokenCount(chunk),\n                tokens,\n                maxTokens\n            };\n        }\n    }\n}\n","import { AssistantAPIInvalidResponseError, AssistantSupportedEndpointVersions, validateVersion } from '../publicTypes';\nimport { containsTokenCount, parseMaxTokenCount, parseTokenCount, removeTokenCount } from '../responseTokens';\n/**\n * Stream response\n * @internal\n */\nexport async function* streamResponse(opts) {\n    const { version, http, request, abortController } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.STREAM_RESPONSE_SUPPORTED_VERSIONS);\n    // Similar streamed call as to OpenAI but to https://assistant.anaconda.cloud/v2/completions\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/${version}/completions`,\n        body: JSON.stringify(request),\n        abortController\n    });\n    if (!response.body) {\n        throw new AssistantAPIInvalidResponseError('Empty stream when parsing response', {\n            request: fetchRequest,\n            response\n        });\n    }\n    const reader = response.body.getReader();\n    const decoder = new TextDecoder();\n    let done = false;\n    let chunk = '';\n    while (!done) {\n        const { value, done: doneReading } = await reader.read();\n        done = doneReading;\n        const chunkValue = decoder.decode(value);\n        chunk = chunk + chunkValue;\n        if (!containsTokenCount(chunk)) {\n            yield {\n                content: chunk\n            };\n        }\n        else {\n            const tokens = parseTokenCount(chunk);\n            const maxTokens = parseMaxTokenCount(chunk);\n            yield {\n                content: removeTokenCount(chunk),\n                tokens,\n                maxTokens\n            };\n        }\n    }\n}\n","import { AssistantAPIServerError, AssistantSupportedEndpointVersions, validateVersion } from '../publicTypes';\n/**\n * Submit code executed, used to study effectiveness of generated code\n * @internal\n */\nexport async function submitCodeExecutionResult(opts) {\n    const { version, http, request, abortController } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.SUBMIT_CODE_EXECUTION_SUPPORTED_VERSIONS);\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/v2/execution_result`,\n        body: JSON.stringify(request),\n        abortController\n    });\n    if (response.status !== 201) {\n        throw new AssistantAPIServerError('Unable to fetch suggestions.', {\n            request: fetchRequest,\n            response\n        });\n    }\n    return true;\n}\n","import { AssistantAPIServerError, AssistantSupportedEndpointVersions, validateVersion } from '../publicTypes';\n/**\n * Post feedback\n * @internal\n */\nexport async function submitFeedback(opts) {\n    const { version, http, request } = opts;\n    validateVersion(version, AssistantSupportedEndpointVersions.SUBMIT_FEEDBACK_SUPPORTED_VERSIONS);\n    const { request: fetchRequest, response } = await http.fetchSafely({\n        method: 'POST',\n        path: `/${version}/feedback`,\n        body: JSON.stringify(request)\n    });\n    if (response.status !== 201) {\n        throw new AssistantAPIServerError('Unable to post feedback', {\n            request: fetchRequest,\n            response\n        });\n    }\n    return true;\n}\n","/**\n * Anaconda Assistant SDK supported API URLs\n * @alpha\n */\nexport const ANACONDA_ASSISTANT_SUPPORTED_API_URLS = [\n    'https://jupyterassistant.anacondaconnect.com',\n    'https://assistant.anaconda.cloud',\n    'http://localhost:8000',\n    'https://127.0.0.1:4200',\n    'https://xltb.anacondaconnect.com',\n    'https://xltb-unlocked.anacondaconnect.com',\n    'https://xltb-staging.anaconda.cloud',\n    'https://xltb.anaconda.cloud'\n];\n/**\n * Anaconda Assistant SDK production API URL\n * @alpha\n */\nexport const ANACONDA_ASSISTANT_PRODUCTION_API_URL = 'https://assistant.anaconda.cloud';\n/**\n * Anaconda Assistant SDK supported API endpoint versions\n * @alpha\n */\nexport var AssistantSupportedEndpointVersions;\n(function (AssistantSupportedEndpointVersions) {\n    AssistantSupportedEndpointVersions.STREAM_RESPONSE_SUPPORTED_VERSIONS = ['v3'];\n    AssistantSupportedEndpointVersions.FETCH_SUGGESTIONS_SUPPORTED_VERSIONS = ['v2'];\n    AssistantSupportedEndpointVersions.SUBMIT_FEEDBACK_SUPPORTED_VERSIONS = ['v2'];\n    AssistantSupportedEndpointVersions.SUBMIT_CODE_EXECUTION_SUPPORTED_VERSIONS = ['v2'];\n    AssistantSupportedEndpointVersions.PRO_SUMMARIES_SUPPORTED_VERSIONS = ['v1'];\n    AssistantSupportedEndpointVersions.PRO_STREAM_RESPONSE_SUPPORTED_VERSIONS = ['v1'];\n})(AssistantSupportedEndpointVersions || (AssistantSupportedEndpointVersions = {}));\n/**\n * Environment types for the Assistant SDK\n * @alpha\n */\nexport const ASSISTANT_ENVIRONMENT_TYPES = [\n    'local-notebooks-dev',\n    'local-notebooks-prod',\n    'local-dev',\n    'cloud-notebooks-prod',\n    'cloud-notebooks-staging',\n    'enterprise-notebooks-dev',\n    'enterprise-notebooks-prod',\n    'pyexcel-dev',\n    'pyexcel-prod'\n];\n/**\n * Assistant contexts\n * @alpha\n */\nexport var AssistantContexts;\n(function (AssistantContexts) {\n    /**\n     * Chat context types\n     * @alpha\n     */\n    AssistantContexts.CHAT_CONTEXT_TYPES = [\n        'graph-dataframe',\n        'describe-dataframe',\n        'explain-code',\n        'comment-code',\n        'improve-code',\n        'debug-error',\n        'default-python',\n        'suggestions-chat'\n    ];\n})(AssistantContexts || (AssistantContexts = {}));\n/**\n * Assistant API base error name\n * @alpha\n */\nexport const ASSISTANT_API_ERROR_NAME = 'ASSISTANT_API_ERROR';\n/**\n * Assistant API error\n * @alpha\n */\nexport class AssistantAPIErrorBase extends Error {\n    name = ASSISTANT_API_ERROR_NAME;\n    request;\n    response;\n    constructor(message, options) {\n        super(message);\n        this.request = options.request;\n        this.response = options.response;\n    }\n    toString() {\n        let statusText = `failed to fetch ${this.request.url}`;\n        if (this.response) {\n            statusText = `(status: ${this.response.status})`;\n        }\n        return `[${this.name}] ${this.message} ${statusText}`;\n    }\n}\n/**\n * AssistantAPINetworkError name\n * @alpha\n */\nexport const ASSISTANT_API_NETWORK_ERROR_NAME = 'ASSISTANT_API_NETWORK_ERROR';\n/**\n * Assistant API network error\n * @alpha\n */\nexport class AssistantAPINetworkError extends AssistantAPIErrorBase {\n    name = ASSISTANT_API_NETWORK_ERROR_NAME;\n}\n/**\n * AssistantAPIServerError name\n * @alpha\n */\nexport const ASSISTANT_API_SERVER_ERROR_NAME = 'ASSISTANT_API_SERVER_ERROR';\n/**\n * Assistant API server error\n * @alpha\n */\nexport class AssistantAPIServerError extends AssistantAPIErrorBase {\n    name = ASSISTANT_API_SERVER_ERROR_NAME;\n}\n/**\n * Assistant API invalid response error name\n * @alpha\n */\nexport const ASSISTANT_API_INVALID_RESPONSE_ERROR_NAME = 'ASSISTANT_API_INVALID_RESPONSE_ERROR';\n/**\n * Assistant API invalid response error\n * @alpha\n */\nexport class AssistantAPIInvalidResponseError extends AssistantAPIErrorBase {\n    name = ASSISTANT_API_INVALID_RESPONSE_ERROR_NAME;\n}\n/**\n * Assistant API unknown error name\n * @alpha\n */\nexport const ASSISTANT_API_UNKNOWN_ERROR_NAME = 'ASSISTANT_API_UNKNOWN_ERROR';\n/**\n * Assistant API unknown error\n * @alpha\n */\nexport class AssistantAPIUnknownError extends AssistantAPIErrorBase {\n    name = ASSISTANT_API_UNKNOWN_ERROR_NAME;\n}\n/**\n * Assistant SDK error name\n * @alpha\n */\nexport const ASSISTANT_SDK_ERROR_NAME = 'ASSISTANT_SDK_ERROR';\n/**\n * Assistant SDK error\n * @alpha\n */\nexport class AssistantSDKErrorBase extends Error {\n    name = ASSISTANT_SDK_ERROR_NAME;\n    constructor(message) {\n        super(message);\n    }\n    toString() {\n        return `[${this.name}] ${this.message}`;\n    }\n}\n/**\n * Assistant SDK error for invalid version name\n * @alpha\n */\nexport const ASSISTANT_SDK_INVALID_VERSION_ERROR_NAME = 'ASSISTANT_SDK_INVALID_VERSION_ERROR';\n/**\n * Assistant SDK error for invalid version\n * @alpha\n */\nexport class AssistantSDKInvalidVersionError extends AssistantSDKErrorBase {\n    name = ASSISTANT_SDK_INVALID_VERSION_ERROR_NAME;\n}\n/**\n * Validate version\n * @alpha\n */\nexport function validateVersion(version, supportedVersions) {\n    if (!supportedVersions.includes(version)) {\n        throw new AssistantSDKInvalidVersionError(`Invalid version: ${version}. Supported versions: ${supportedVersions.join(', ')}`);\n    }\n}\n/**\n * Assistant SDK error for invalid API URL name\n * @alpha\n */\nexport const ASSISTANT_SDK_INVALID_API_URL_ERROR_NAME = 'ASSISTANT_SDK_INVALID_API_URL_ERROR';\n/**\n * Assistant SDK error for invalid API URL\n * @alpha\n */\nexport class AssistantSDKInvalidAPIURLError extends AssistantSDKErrorBase {\n    name = ASSISTANT_SDK_INVALID_API_URL_ERROR_NAME;\n}\n/**\n * Assistant SDK error for unknown error name\n * @alpha\n */\nexport const ASSISTANT_SDK_UNKNOWN_ERROR_NAME = 'ASSISTANT_SDK_UNKNOWN_ERROR';\n/**\n * Assistant SDK error for unknown error\n * @alpha\n */\nexport class AssistantSDKUnknownError extends AssistantSDKErrorBase {\n    name = ASSISTANT_SDK_UNKNOWN_ERROR_NAME;\n}\n","const tokenCountIndicator = '__TOKENS_';\n// Token count is added by the assistant server at the end of its response\nconst tokenCountRegex = /__TOKENS_([0-9]+)\\/([0-9]+)__/ms;\nexport function containsTokenCount(message) {\n    return message.includes(tokenCountIndicator);\n}\nexport function parseTokenCount(message) {\n    const matches = message.match(tokenCountRegex);\n    return matches && matches[1] && !isNaN(+matches[1]) ? parseInt(matches[1]) : 0;\n}\nexport function parseMaxTokenCount(message) {\n    const matches = message.match(tokenCountRegex);\n    return matches && matches[2] && !isNaN(+matches[2]) ? parseInt(matches[2]) : 0;\n}\nexport function removeTokenCount(message) {\n    const index = message.indexOf(tokenCountIndicator);\n    return message.slice(0, index === -1 ? message.length : index);\n}\n","/**\n * IMPORTANT: DO NOT ADD SPREAD OPERATORS IN ANY OF THE TRANSFORMERS\n * Spread operators hide properties that are not explicitly defined in the types.\n */\nexport function transformSession(session) {\n    return {\n        user_id: session.userId,\n        session_id: session.sessionId,\n        iteration_id: 0\n    };\n}\n/**\n * Extracts the last 2000 characters of each variable value.\n */\nexport function transformContext(context) {\n    return {\n        type: context.type,\n        variables: transformVariables(context.variables)\n    };\n}\n/**\n * Extracts the last 2000 characters of each variable value.\n */\nexport function transformVariables(variables) {\n    const transformedVariables = {};\n    for (const key in variables) {\n        if (variables.hasOwnProperty(key)) {\n            const value = variables[key];\n            transformedVariables[key] = value.slice(-2000);\n        }\n    }\n    return transformedVariables;\n}\nexport function transformSubmitFeedbackRequest(publicRequest, enableDataCollection) {\n    return {\n        feedback: {\n            text: publicRequest.feedback.text,\n            sentiment: publicRequest.feedback.sentiment,\n            message_id: publicRequest.feedback.messageId\n        },\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session)\n    };\n}\nexport function transformCompletionRequest(publicRequest, enableDataCollection) {\n    return {\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session),\n        chat_context: transformContext(publicRequest.chatContext),\n        response_message_id: publicRequest.responseMessageId,\n        messages: publicRequest.messages.map(message => ({\n            role: message.role,\n            content: message.content,\n            message_id: message.messageId\n        }))\n    };\n}\nexport function transformProCompletionRequest(publicRequest, enableDataCollection) {\n    return {\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session),\n        chat_context: transformContext(publicRequest.chatContext),\n        response_message_id: publicRequest.responseMessageId,\n        chat_summary: publicRequest.chatSummary,\n        messages: publicRequest.messages.map(message => ({\n            role: message.role,\n            content: message.content,\n            message_id: message.messageId\n        }))\n    };\n}\nexport function transformFetchSuggestionsRequest(publicRequest, enableDataCollection) {\n    return {\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session),\n        type: publicRequest.type,\n        variables: transformVariables(publicRequest.variables)\n    };\n}\nexport function transformSubmitCodeExecutionRequest(publicRequest, enableDataCollection) {\n    return {\n        skip_logging: !enableDataCollection,\n        session: transformSession(publicRequest.session),\n        execution_result: {\n            code: publicRequest.executionResult.code,\n            error: publicRequest.executionResult.error,\n            success: publicRequest.executionResult.success,\n            message_id: publicRequest.executionResult.messageId\n        }\n    };\n}\nexport function transformProFetchSummaryRequest(publicRequest, enableDataCollection) {\n    return {\n        skip_logging: !enableDataCollection,\n        session_id: publicRequest.session.sessionId,\n        response_message_id: publicRequest.responseMessageId,\n        source: {\n            name: publicRequest.source.name,\n            type: publicRequest.source.type,\n            data: publicRequest.source.data.map(data => ({\n                role: data.role,\n                content: data.content,\n                message_id: data.messageId,\n                tokens: data.tokens\n            }))\n        }\n    };\n}\n","import { ANACONDA_ASSISTANT_SUPPORTED_API_URLS, AssistantSDKInvalidAPIURLError } from './publicTypes';\nexport function isAE5APIUrl(url) {\n    // API URLs that match \"https://*.dsp.anaconda.com\" are considered AE5 API URLs\n    return url.startsWith('https://') && url.endsWith('.dsp.anaconda.com');\n}\nexport function validateAPIUrl(url) {\n    const _url = url;\n    if (!_url || (ANACONDA_ASSISTANT_SUPPORTED_API_URLS.indexOf(_url) === -1 && !isAE5APIUrl(_url))) {\n        throw new AssistantSDKInvalidAPIURLError(`Invalid API URL: ${url}`);\n    }\n}\n","import { getAccessToken } from '../utils/nucleus/auth';\nimport { getAssistantSdk } from '../assistant-sdk';\nexport async function hasAccess() {\n    try {\n        const accessToken = await getAccessToken();\n        if (!accessToken) {\n            throw new Error('No access token');\n        }\n        const sdk = getAssistantSdk();\n        sdk.accessToken.setAccessToken(accessToken);\n        await sdk.fetchAccess();\n        return true;\n    }\n    catch (e) {\n        console.log('Error fetching access: ', e);\n    }\n    return false;\n}\n","import { AssistantError } from '@anaconda/assistant-components';\nimport { getAssistantSdk } from '../assistant-sdk';\nexport async function fetchTermsAndConditionsVersion() {\n    try {\n        return await getAssistantSdk().fetchTermsAndConditionsVersion();\n    }\n    catch (e) {\n        throw new AssistantError('network_error', 'There was an issue connecting to the Assistant server. Please try again.', 0);\n    }\n}\n","import { AnacondaAssistant } from '@anaconda/assistant-sdk';\nimport { getAccessToken } from './utils/nucleus/auth';\nlet assistantSdk;\nexport function getAssistantSdk() {\n    if (!assistantSdk) {\n        throw new Error('Assistant not initialized');\n    }\n    return assistantSdk;\n}\nexport async function initAssistantSdk(options) {\n    assistantSdk = new AnacondaAssistant(options);\n    try {\n        const accessToken = await getAccessToken();\n        if (!accessToken) {\n            throw new Error('No access token');\n        }\n        assistantSdk.accessToken.setAccessToken(accessToken);\n    }\n    catch (e) {\n        console.log('Error fetching access: ', e);\n    }\n    return assistantSdk;\n}\n","import { AssistantIcon } from './components/icon';\nimport { AssistantButton } from './components/assistant-button';\nimport { AssistantSidebarWidget } from './jupyter/assistantSidebarWidget';\nimport { getActivateAssistantWithCodeSelection } from './jupyter/activateAssistantWithCodeSelection';\nimport { getActivateContextMenuAssistantWithCodeSelection } from './jupyter/activateContextMenuAssistantWithCodeSelection';\nimport { initializeAssistant } from './jupyter/initializeAssistant';\nimport { initAssistantStore, useStore } from '@anaconda/assistant-components';\nimport { sharedCore } from './jupyter/extension-load-utils';\nimport { initAssistantSdk, getAssistantSdk } from './assistant-sdk';\nimport { CLIENT_VERSION } from './config';\nimport { bindSyncDiskStateChained, syncDiskStateChained, unbindSyncDiskStateChained } from './jupyter/syncStateDebounced';\nimport { logout, shareJupyterFrontEndWithLogin } from './utils/nucleus/accountUtils';\nimport { syncFilesForSummarization } from './utils/fileSummarizationUtils';\nimport { getServerUrl } from './config';\nimport { getNucleusAccount } from './utils/nucleus/account';\nimport { getAccountMaxTokens } from './utils/nucleus/accountUtils';\nimport { isLocalDev } from './utils/environmentType';\nimport { DELETED_CHAT_KEYS } from './jupyter/fetchDiskState';\n// This command doesn't do anything, but needs to be defined for the menu item to show up\nexport const assistantMenuHeader = 'assistant:context-header';\nexport const assistantRefactorCommand = 'assistant:refactor';\nexport const assistantCommentCommand = 'assistant:comment';\nexport const assistantExplainCommand = 'assistant:explain';\nexport const assistantToggleCommand = 'assistant:toggle';\nexport const assistantFocusChatInputCommand = 'assistant:focusInput';\nexport const assistantCellCommand = 'assistant:cell';\nexport default class AssistantPlugin {\n    async activate(app, opts) {\n        const { corePlugin, notebookTracker, palette, isJupyterNotebook = false } = opts;\n        await sharedCore.setCore(corePlugin);\n        if (!sharedCore.getFeatureFlagBool('monorepo-assistant')) {\n            return;\n        }\n        // Allowing login to create new notebooks\n        shareJupyterFrontEndWithLogin(app);\n        const config = sharedCore.getCoreReady().config;\n        await initAssistantSdk({\n            clientVersion: CLIENT_VERSION,\n            // The API URL might come as null from the shared core\n            apiUrl: config.assistant.apiUrl || undefined,\n            environmentType: config.assistant.environmentType,\n            enableDataCollection: false\n        });\n        await initAssistantStore({\n            getAssistantSdk,\n            getServerUrl,\n            getNucleusAccount,\n            getAccountMaxTokens,\n            isLocalDev,\n            syncDiskStateChained,\n            unbindSyncDiskStateChained,\n            deletedChatKeys: DELETED_CHAT_KEYS,\n            getFeatureFlagBool: sharedCore.getCoreReady().featureFlag.getBool\n        });\n        if (useStore.getState().settings.enableDataCollection) {\n            getAssistantSdk().enableDataCollection();\n        }\n        console.log('Assistant extension activated!');\n        // Sync state across different ports / windows\n        await syncDiskStateChained();\n        bindSyncDiskStateChained();\n        // Sync files for summarization\n        syncFilesForSummarization();\n        const assistantSidebarWidget = new AssistantSidebarWidget({\n            notebookTracker,\n            jupyterFrontEnd: app,\n            isJupyterNotebook\n        });\n        const assistantButton = new AssistantButton(app.commands);\n        initializeAssistant({ assistant: assistantSidebarWidget, jupyterFrontEnd: app });\n        app.commands.addCommand(assistantMenuHeader, {\n            icon: AssistantIcon,\n            label: 'AI Assistant',\n            isEnabled: () => false,\n            // This menu item is just a heading. It doesn't need to do anything but this function is required.\n            execute: () => { }\n        });\n        app.commands.addCommand(assistantRefactorCommand, {\n            label: 'Refactor Code',\n            execute: getActivateContextMenuAssistantWithCodeSelection({\n                assistant: assistantSidebarWidget,\n                command: 'improve-code',\n                notebookTracker\n            })\n        });\n        app.commands.addCommand(assistantCommentCommand, {\n            label: 'Comment Code',\n            execute: getActivateContextMenuAssistantWithCodeSelection({\n                assistant: assistantSidebarWidget,\n                command: 'comment-code',\n                notebookTracker\n            })\n        });\n        app.commands.addCommand(assistantExplainCommand, {\n            label: 'Explain Code',\n            execute: getActivateContextMenuAssistantWithCodeSelection({\n                assistant: assistantSidebarWidget,\n                command: 'explain-code',\n                notebookTracker\n            })\n        });\n        app.commands.addCommand(assistantToggleCommand, {\n            label: 'Open Anaconda Assistant',\n            execute: () => assistantSidebarWidget.toggleWidget()\n        });\n        app.commands.addCommand(assistantFocusChatInputCommand, {\n            label: 'Focus Anaconda Assistant Chat Input Field',\n            execute: () => {\n                const assistantChatInputTextarea = document.querySelector('#as-instruction-input-textarea');\n                if (assistantChatInputTextarea instanceof HTMLElement) {\n                    assistantChatInputTextarea.focus();\n                }\n            }\n        });\n        app.contextMenu.addItem({\n            rank: 0,\n            command: assistantMenuHeader,\n            selector: '.jp-Notebook'\n        });\n        app.contextMenu.addItem({\n            rank: 0,\n            command: assistantRefactorCommand,\n            selector: '.jp-Notebook'\n        });\n        app.contextMenu.addItem({\n            rank: 0,\n            command: assistantCommentCommand,\n            selector: '.jp-Notebook'\n        });\n        app.contextMenu.addItem({\n            rank: 0,\n            command: assistantExplainCommand,\n            selector: '.jp-Notebook'\n        });\n        app.contextMenu.addItem({\n            rank: 0,\n            command: assistantToggleCommand,\n            selector: '.jp-Notebook'\n        });\n        app.contextMenu.addItem({\n            rank: 0,\n            selector: '.jp-Notebook',\n            type: 'separator'\n        });\n        palette.addItem({ command: assistantToggleCommand, category: 'Assistant' });\n        app.docRegistry.addWidgetExtension('Notebook', assistantButton);\n        app.commands.addCommand(assistantCellCommand, {\n            icon: AssistantIcon,\n            execute: getActivateAssistantWithCodeSelection({\n                assistant: assistantSidebarWidget,\n                notebookTracker\n            })\n        });\n        app.commands.addKeyBinding({\n            command: assistantToggleCommand,\n            keys: ['Accel Shift A'],\n            selector: 'Body'\n        });\n        app.commands.addKeyBinding({\n            command: assistantFocusChatInputCommand,\n            keys: ['Accel Shift C'],\n            selector: 'Body'\n        });\n        const accountInterval = setInterval(async () => {\n            const state = useStore.getState();\n            if (state.account) {\n                clearInterval(accountInterval);\n                const context = app.shell.currentWidget?.context;\n                const factoryName = context?.factoryName;\n                const isNotebook = factoryName && factoryName.toLowerCase() === 'notebook';\n                if (!isNotebook &&\n                    !Boolean(window.localStorage.getItem('anaconda-assistant-opened-once'))) {\n                    await app.commands.execute('notebook:create-new');\n                    window.localStorage.setItem('anaconda-assistant-opened-once', 'true');\n                }\n                await state.updateAccount();\n            }\n        }, 100);\n        // Update account information every 5 minutes,\n        // in case the user changes their account tier.\n        setInterval(async () => {\n            const state = useStore.getState();\n            await state.updateAccount();\n        }, 1000 * 60 * 5);\n        // Detecting logouts from other tabs\n        window.addEventListener('storage', async (e) => {\n            try {\n                if (e.key === 'anaconda-assistant' && e.oldValue && e.newValue) {\n                    const previousStorage = JSON.parse(e.oldValue);\n                    const newStorage = JSON.parse(e.newValue);\n                    const previousStorageState = previousStorage.state;\n                    const newStorageState = newStorage.state;\n                    const previousTermsVersion = previousStorage.terms.version;\n                    const newTermsVersion = newStorage.terms.version;\n                    if (!previousStorageState || !newStorageState) {\n                        return;\n                    }\n                    if (previousTermsVersion !== null && newTermsVersion === null) {\n                        await logout([\n                            'An Assistant in another browser tab logged out.',\n                            'You will need to log in again to use the Assistant.'\n                        ].join(' '));\n                    }\n                }\n            }\n            catch (e) {\n                console.error('Error detecting logouts from other tabs', e);\n            }\n        });\n    }\n}\n","import React from 'react';\nimport { Icons } from '@anaconda/assistant-components';\nimport { CLIENT_VERSION } from '../config';\nimport { logout } from '../utils/nucleus/accountUtils';\nexport function AccessScreen() {\n    const contact_url = 'https://www.anaconda.com/contact';\n    const learn_url = 'https://www.anaconda.com/blog/anaconda-assistant-launches-to-bring-instant-data-analysis-code-generation-and-insights-to-users';\n    function redirectToPage(url) {\n        window.location.href = url;\n    }\n    return (React.createElement(\"div\", { className: \"as-container\" },\n        React.createElement(\"div\", { style: { marginTop: 70 } }),\n        React.createElement(\"div\", { className: \"as-home-screen-container\" },\n            React.createElement(\"div\", { className: \"as-home-screen-icon\" },\n                React.createElement(Icons.ChatBot, null)),\n            React.createElement(\"div\", { className: \"as-title-text\" },\n                \"Anaconda Assistant\",\n                React.createElement(\"div\", { className: \"as-version-text\" }, CLIENT_VERSION)),\n            React.createElement(\"div\", { className: \"as-access-body-container\" },\n                React.createElement(\"div\", { className: \"as-access-inner-container\" },\n                    React.createElement(\"div\", { className: \"as-access-header\" }, \"Welcome!\"),\n                    React.createElement(\"div\", { className: \"as-access-text\" },\n                        \"Unfortunately, you do not seem to have access to the Anaconda Assistant. This could either occur for an issue with your credentials, or because your organization has not requested for access to the Anaconda Assistant for their users. To gain access, please reach out to your organization administrator or our support team. In the meantime, enjoy exploring the many other features and tools available to you. Thank you for being part of the Anaconda community!\",\n                        ' ',\n                        React.createElement(\"a\", { href: learn_url, target: \"_blank\" }, 'Learn About Anaconda Assistant'),\n                        '.')),\n                React.createElement(\"div\", { className: \"as-access-inner-container-buttons\" },\n                    React.createElement(\"button\", { className: \"as-access-button\", onClick: () => redirectToPage(contact_url) }, \"Contact Us\"),\n                    React.createElement(\"button\", { className: \"as-logout-button\", onClick: () => logout() }, \"Logout\"))))));\n}\n","import { ToolbarButton } from '@jupyterlab/apputils';\nimport { AssistantIcon } from './icon';\nimport { assistantToggleCommand } from '../assistant_plugin';\nexport class AssistantButton {\n    /**\n     * Instantiate a new Jupyter Assistant.\n     * @param commands The command registry.\n     */\n    constructor(commands) {\n        this._commands = commands;\n    }\n    /**\n     * Create a new extension object.\n     */\n    createNew(panel) {\n        const button = new ToolbarButton({\n            tooltip: 'Anaconda Assistant',\n            icon: AssistantIcon,\n            onClick: () => {\n                this._commands.execute(assistantToggleCommand);\n            }\n        });\n        // TODO:\n        // This seems to be needed for v4.\n        // On window reload, some extensions might not have loaded, therefore the Assistant can't be placed where it goes on Cloud Notebooks\n        panel.toolbar.insertAfter('cellType', 'assistant', button);\n        // Putting the assistant button before the spacer also means putting it after the Panel menu buttons\n        panel.toolbar.insertBefore('spacer', 'assistant', button);\n        return button;\n    }\n    _commands;\n}\n","import FocusTrap from 'focus-trap-react';\nimport React, { useEffect } from 'react';\nimport { usePopper } from 'react-popper';\nimport { getActiveNotebook, useStore } from '@anaconda/assistant-components';\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { Widget } from '@lumino/widgets';\nimport { assistantCellCommand } from '../assistant_plugin';\nexport function showInCellMenuWidget({ activateWidget }) {\n    const myWidget = ReactWidget.create(React.createElement(InCellAssistantMenu, { onClose: () => Widget.detach(myWidget), activateWidget: activateWidget }));\n    Widget.attach(myWidget, document.body);\n}\nfunction useGetCurrentCellAssistantButtonRef(setRef) {\n    useEffect(() => {\n        const buttonEls = document.querySelectorAll(`[data-command=\"${assistantCellCommand}\"]`);\n        // Buttons can be found in multiple places in the DOM because of slots. We wanna find the one that is rendered.\n        let positionedButtonEl = undefined;\n        for (const buttonEl of buttonEls) {\n            const buttonRect = buttonEl.getBoundingClientRect();\n            if (buttonRect.x !== 0 && buttonRect.y !== 0) {\n                console.log('Found button');\n                positionedButtonEl = buttonEl;\n                break;\n            }\n        }\n        const lastButtonEl = buttonEls[buttonEls.length - 1]?.parentElement;\n        const buttonRect = lastButtonEl?.getBoundingClientRect();\n        console.log({\n            positionedButtonEl,\n            buttons: buttonEls,\n            buttonEl: lastButtonEl,\n            buttonRect: buttonRect?.toJSON()\n        });\n        setRef(positionedButtonEl);\n    }, []);\n}\nexport function InCellAssistantMenu({ activateWidget, onClose }) {\n    const [elementRef, setElementRef] = React.useState(null);\n    const [popperElement, setPopperElement] = React.useState(null);\n    const { styles, attributes } = usePopper(elementRef, popperElement, {\n        strategy: 'fixed',\n        placement: 'bottom-end'\n    });\n    const [makeChatRequest, resetToHomeScreen, selectedText] = useStore(state => [\n        state.makeChatRequest,\n        state.resetToHomeScreen,\n        getActiveNotebook(state)?.notebookState.selectedText\n    ]);\n    useGetCurrentCellAssistantButtonRef(setElementRef);\n    function handleSelection(type) {\n        activateWidget();\n        resetToHomeScreen();\n        makeChatRequest({\n            context: {\n                type,\n                variables: {\n                    active_cell_code: selectedText?.cell.source,\n                    selected_code: selectedText?.text\n                }\n            },\n            instruction: ''\n        });\n        onClose();\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"as-in-cell-menu-backdrop\", onClick: onClose }),\n        React.createElement(\"div\", { ref: setPopperElement, className: \"lm-Widget lm-Menu as-in-cell-menu\", style: styles.popper, ...attributes.popper },\n            React.createElement(FocusTrap, { focusTrapOptions: {\n                    allowOutsideClick: true,\n                    // Doesn't work so we do click outside differently\n                    // clickOutsideDeactivates: true,\n                    escapeDeactivates: true,\n                    onDeactivate: () => onClose,\n                    isKeyForward: e => e.key === 'ArrowDown',\n                    isKeyBackward: e => e.key === 'ArrowUp'\n                } },\n                React.createElement(\"ul\", { className: \"lm-Menu-content\", role: \"menu\", onKeyDown: e => {\n                        if (e.key === 'Escape') {\n                            onClose();\n                        }\n                    } },\n                    React.createElement(MenuItem, { label: \"Explain the selected code\", onSelect: () => handleSelection('explain-code') }),\n                    React.createElement(MenuItem, { label: \"Add comments to the selected code\", onSelect: () => handleSelection('comment-code') }),\n                    React.createElement(MenuItem, { label: \"Refactor the selected code\", onSelect: () => handleSelection('improve-code') }),\n                    React.createElement(WarningMenuItem, null))))));\n}\nfunction WarningMenuItem() {\n    const [enableDataCollection] = useStore(state => [state.settings.enableDataCollection]);\n    return (React.createElement(\"li\", { className: \"lm-Menu-item\" },\n        React.createElement(\"div\", { className: \"lm-Menu-itemIcon\" }),\n        React.createElement(\"div\", { className: \"lm-Menu-itemLabel as-menu-item-label-message\" }, `\n          By adding code to a conversation, the selected code cell will be sent to\n          ${enableDataCollection ? 'the Anaconda Servers and to ' : ''}\n          OpenAI.\n        `)));\n}\nfunction MenuItem({ autoFocus, label, shortcut, onSelect }) {\n    const [isHovered, setIsHovered] = React.useState(false);\n    return (React.createElement(\"li\", { autoFocus: autoFocus, tabIndex: 0, role: \"menuitem\", className: 'lm-Menu-item ' + (isHovered ? ' lm-mod-active' : ''), \"data-type\": \"command\", onMouseOver: () => setIsHovered(true), onMouseOut: () => setIsHovered(false), onFocus: () => setIsHovered(true), onBlur: () => setIsHovered(false), onKeyDown: e => {\n            if (e.key === 'Enter') {\n                onSelect?.();\n            }\n            // console.log('onKeyDown', e.key);\n        }, onClick: onSelect },\n        React.createElement(\"div\", { className: \"lm-Menu-itemIcon\" }),\n        React.createElement(\"div\", { className: \"lm-Menu-itemLabel\" }, label),\n        shortcut && React.createElement(\"div\", { className: \"lm-Menu-itemShortcut\" }, shortcut)));\n}\n","import React from 'react';\nimport { login } from '../utils/nucleus/accountUtils';\nimport { Icons } from '@anaconda/assistant-components';\nimport { CLIENT_VERSION } from '../config';\nexport function AssistantLogin() {\n    return (React.createElement(\"div\", { className: \"as-container\" },\n        React.createElement(\"div\", { className: \"as-login-container\" },\n            React.createElement(\"div\", { className: \"as-login-header\" },\n                React.createElement(\"div\", { className: \"as-login-icon\" },\n                    React.createElement(Icons.AnacondaLogo, null)),\n                React.createElement(\"div\", { className: \"as-title-text\" },\n                    \"Anaconda Assistant\",\n                    React.createElement(\"div\", { className: \"as-subtitle-text\" }, \"AI-powered coding, insights and debugging in your notebooks.\"))),\n            React.createElement(\"div\", { className: \"as-login-body\" },\n                \"To enable the following extensions, create an account or sign in.\",\n                React.createElement(\"ul\", null,\n                    React.createElement(\"li\", null,\n                        React.createElement(Icons.Sparkle, null),\n                        \" Anaconda Assistant\",\n                        React.createElement(\"div\", { className: \"as-version-text\" }, CLIENT_VERSION)),\n                    React.createElement(\"li\", { className: \"coming-soon\" }, \"Coming soon!\"),\n                    React.createElement(\"li\", { className: \"disabled\" },\n                        React.createElement(Icons.DataCatalog, null),\n                        \" Data Catalogs\"),\n                    React.createElement(\"li\", { className: \"disabled\" },\n                        React.createElement(Icons.Panel, null),\n                        \" Panel Deployments\"),\n                    React.createElement(\"li\", { className: \"disabled\" },\n                        React.createElement(Icons.Share, null),\n                        \" Sharing\")),\n                React.createElement(\"button\", { className: \"as-create-account-button\", onClick: login }, \"Create Account\"),\n                React.createElement(\"div\", { className: \"as-login-sign-in-text\" },\n                    \"Already have an account? \",\n                    React.createElement(\"a\", { onClick: login }, \"Sign In\"))),\n            React.createElement(\"div\", { className: \"as-login-footer\" },\n                React.createElement(\"div\", { className: \"as-login-help\" },\n                    React.createElement(Icons.Question, null)),\n                React.createElement(\"div\", { className: \"as-login-footer-text\" },\n                    \"For more information, read our\",\n                    ' ',\n                    React.createElement(\"a\", { href: \"https://docs.anaconda.com/free/anaconda-notebooks/anaconda-assistant/\", target: \"_blank\" }, \"Anaconda Assistant documentation\"),\n                    \".\")))));\n}\n","import * as React from 'react';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { dataFrameCheckerPython, parsePythonResult } from '../utils/dataframe-checker';\nimport { NotebookActions } from '@jupyterlab/notebook';\nimport { KernelMessage } from '@jupyterlab/services';\nimport { AssistantPanel } from './assistant-panel';\nimport { extractErrorContext } from './notebook-error-helper';\nimport { useInterval } from 'usehooks-ts';\nimport { convertSelection, getSelectionFromEditor, isSelectionEqual } from '../utils/text-selection-utils';\nimport { AssistantLogin } from './assistant-login';\nimport { postExecutionResult, useStore } from '@anaconda/assistant-components';\nimport { isLocalNotebooks } from '../utils/environmentType';\nimport { syncDiskStateChained } from '../jupyter/syncStateDebounced';\nimport { getNewChatStarters } from '../utils/ChatStarters';\nimport { getAssistantSdk } from '../assistant-sdk';\nexport function AssistantPanelContainer({ tracker }) {\n    const [account, path, setPath, setCellError] = useStore(state => [\n        state.account,\n        state.path,\n        state.setPath,\n        state.setCellError\n    ]);\n    const restarted = useRef(false);\n    const executingCode = useRef(null);\n    const jupyterSelection = useRef(null);\n    useInterval(() => {\n        // Every 800ms we check the current text selection\n        checkTextSelection(tracker);\n    }, 800);\n    const checkNotebookVariables = useCallback(() => {\n        const requestExecute = getKernel(tracker)?.requestExecute({ code: dataFrameCheckerPython }, false);\n        if (requestExecute) {\n            requestExecute.onIOPub = (msg) => {\n                if (KernelMessage.isExecuteResultMsg(msg)) {\n                    if (msg.content.data && msg.content.data['text/plain']) {\n                        const nbState = parsePythonResult(msg.content.data['text/plain']);\n                        if (nbState) {\n                            const path = tracker.currentWidget?.context.path || '';\n                            setPath(path, nbState, getNewChatStarters);\n                        }\n                    }\n                }\n            };\n        }\n    }, [setPath, tracker]);\n    const cellExecuted = useCallback((_, context) => {\n        const { cell, notebook, success, error } = context;\n        if (!success && error) {\n            setCellError(extractErrorContext(cell, notebook, error.message));\n        }\n        if (executingCode.current?.cellId && executingCode.current?.cellId === cell.model.id) {\n            postExecutionResult(getAssistantSdk(), { ...executingCode.current }, success, error);\n            executingCode.current = null;\n        }\n        checkNotebookVariables();\n    }, [setCellError]);\n    useEffect(() => {\n        function notebookChanged(_, context) {\n            // We want to set the path to the new notebook as soon as we switch, even if we don't\n            // have the notebook state yet.\n            setPath(context?.sessionContext.path || '', { user: '', dataframes: [] }, getNewChatStarters);\n            // When the notebook changes, we sync the disk state to the store\n            syncDiskStateChained();\n            if (!context?.sessionContext.session) {\n                // When opening a new notebook, the session may not be available yet, so we need to\n                // wait a bit before checking the notebook variables.\n                setTimeout(checkNotebookVariables, 1000);\n            }\n            else {\n                checkNotebookVariables();\n            }\n        }\n        function kernelStatusChanged(_, status) {\n            if (status === 'restarting' || status === 'autorestarting') {\n                restarted.current = true;\n            }\n            else if (status === 'idle' && restarted.current) {\n                restarted.current = false;\n                checkNotebookVariables();\n            }\n        }\n        checkNotebookVariables();\n        NotebookActions.executed.connect(cellExecuted);\n        tracker.currentChanged.connect(notebookChanged);\n        getKernel(tracker)?.statusChanged.connect(kernelStatusChanged);\n        return () => {\n            NotebookActions.executed.disconnect(cellExecuted);\n            tracker.currentChanged.disconnect(notebookChanged);\n            getKernel(tracker)?.statusChanged.disconnect(kernelStatusChanged);\n        };\n    }, [checkNotebookVariables, cellExecuted, setPath, tracker]);\n    function checkTextSelection(tracker) {\n        const editor = tracker.currentWidget?.content?.activeCell?.editor;\n        const isMarkdown = editor?.model.mimeType === 'text/x-ipythongfm';\n        if (editor && !isMarkdown) {\n            const selection = editor.getSelection();\n            // We use the jupyterSelection ref as a first check to see if any selection has\n            // changed. If it has, we update the selected text on the global store\n            const selectionEqual = isSelectionEqual(jupyterSelection.current, selection);\n            if (!selectionEqual) {\n                const selectedText = getSelectionFromEditor(editor, selection);\n                useStore.getState().setTextSelection(selectedText);\n                jupyterSelection.current = convertSelection(selection);\n            }\n        }\n    }\n    async function addCodeToNotebook(code, activeMessageId, session, inPlace = false) {\n        const notebook = tracker.currentWidget;\n        const _addCodeToNotebook = useStore.getState().settings.addCodeToNotebook || 'below-active-cell';\n        if (notebook) {\n            if (!inPlace) {\n                switch (_addCodeToNotebook) {\n                    case 'below-active-cell':\n                        NotebookActions.insertBelow(notebook.content);\n                        break;\n                    case 'at-end-of-notebook':\n                        notebook.content.activeCellIndex = notebook.content.widgets.length - 1;\n                        NotebookActions.insertBelow(notebook.content);\n                        break;\n                    case 'in-place':\n                        break;\n                }\n            }\n            await notebook.content?.activeCell?.ready;\n            NotebookActions.replaceSelection(notebook.content, code);\n            const cellId = notebook.content.activeCell?.model.id;\n            executingCode.current = { code, cellId, activeMessageId, session };\n            await NotebookActions.run(notebook.content, notebook.sessionContext);\n        }\n    }\n    function getActiveCodeCell() {\n        // TODO: This seems only needed in v3 in the monorepo, not in the jupyterassistant repo\n        return (tracker.currentWidget?.content.activeCell?.model.sharedModel).source || '';\n    }\n    if (!account && isLocalNotebooks()) {\n        return React.createElement(AssistantLogin, null);\n    }\n    return path ? (React.createElement(AssistantPanel, { tracker: tracker, addCodeToNotebook: addCodeToNotebook, getActiveCodeCell: getActiveCodeCell })) : null;\n}\nfunction getKernel(tracker) {\n    return tracker.currentWidget?.sessionContext.session?.kernel;\n}\n","import * as React from 'react';\nimport { ReactWidget } from '@jupyterlab/apputils';\nimport { AssistantPanelContainer } from './assistant-panel-container';\nimport { ThemeProvider, createTheme } from '@mui/material';\nexport class AssistantPanelWidget extends ReactWidget {\n    _notebookTracker;\n    constructor(notebookTracker) {\n        super();\n        this._notebookTracker = notebookTracker;\n    }\n    render() {\n        const theme = createTheme({\n            palette: {\n                primary: {\n                    main: '#43B049'\n                }\n            }\n        });\n        return (React.createElement(ThemeProvider, { theme: theme },\n            React.createElement(AssistantPanelContainer, { tracker: this._notebookTracker })));\n    }\n}\n","import * as React from 'react';\nimport { Header, TermsAndConditionsPage, HistoryPage, useStore, getActiveChat, getActiveNotebookChats } from '@anaconda/assistant-components';\nimport { ChatPanel } from './chat-panel';\nimport { ErrorBoundary } from 'react-error-boundary';\nimport { ErrorScreen } from './error-screen';\nimport { SettingsWrapper } from './settings';\nimport { AccessScreen } from './access-screen';\nimport { fetchTermsAndConditionsVersion } from '../api/terms-and-conditions-version';\nimport { CLIENT_VERSION, SHOW_SETTINGS } from '../config';\nexport function AssistantPanel(props) {\n    return (React.createElement(ErrorBoundary, { FallbackComponent: ErrorScreen },\n        React.createElement(InnerPanel, { ...props })));\n}\nfunction InnerPanel(props) {\n    const [olderThan13, setOlderThan13] = React.useState(false);\n    const [access, accepted, acceptTerms, settingsOpen, enableDataCollection, setEnableDataCollection, menuOpen, setMenuOpen, toggleMenuOpen, resetToHomeScreen, toggleSettings, chats, activeChat, setActiveChat, deleteChat] = useStore(state => [\n        state.access,\n        state.terms.accepted,\n        state.acceptTerms,\n        state.settings.open,\n        state.settings.enableDataCollection,\n        state.setEnableDataCollection,\n        state.menuOpen,\n        state.setMenuOpen,\n        state.toggleMenuOpen,\n        state.resetToHomeScreen,\n        state.toggleSettings,\n        getActiveNotebookChats(state),\n        getActiveChat(state),\n        state.setActiveChat,\n        state.deleteChat\n    ]);\n    if (!access) {\n        return React.createElement(AccessScreen, null);\n    }\n    if (!accepted) {\n        return (React.createElement(\"div\", { className: \"as-container\" },\n            React.createElement(Header, { disableMenu: true, activeChat: !!activeChat, clientVersion: CLIENT_VERSION, chatsHistoryOpen: menuOpen, showSettings: SHOW_SETTINGS, settingsOpen: settingsOpen, toggleChatsHistory: toggleMenuOpen, newChatClicked: resetToHomeScreen, toggleSettings: toggleSettings }),\n            React.createElement(TermsAndConditionsPage, { accept: async () => {\n                    let version = useStore.getState().terms.version;\n                    if (!version) {\n                        try {\n                            version = await fetchTermsAndConditionsVersion();\n                        }\n                        catch (e) {\n                            console.error('Failed to fetch terms version');\n                            useStore.getState().logout();\n                            return;\n                        }\n                    }\n                    acceptTerms(version, true);\n                }, enableDataCollection: enableDataCollection, setEnableDataCollection: setEnableDataCollection, olderThan13: olderThan13, setOlderThan13: setOlderThan13 })));\n    }\n    return (React.createElement(\"div\", { className: \"as-container\" },\n        React.createElement(Header, { activeChat: !!activeChat, clientVersion: CLIENT_VERSION, chatsHistoryOpen: menuOpen, showSettings: SHOW_SETTINGS, settingsOpen: settingsOpen, toggleChatsHistory: toggleMenuOpen, newChatClicked: resetToHomeScreen, toggleSettings: toggleSettings }),\n        settingsOpen ? (React.createElement(SettingsWrapper, null)) : menuOpen ? (React.createElement(HistoryPage, { chats: chats, activeChat: activeChat, setActiveChat: setActiveChat, deleteChat: deleteChat, closeHistory: () => setMenuOpen(false) })) : (React.createElement(ChatPanel, { ...props }))));\n}\n","import React from 'react';\nimport { Icons, getPreviousChatName, showBackButton, useStore } from '@anaconda/assistant-components';\nexport function BackButton() {\n    const [shouldShowBackButton, previousChatName, gotoPreviousChat] = useStore(state => [\n        showBackButton(state),\n        getPreviousChatName(state),\n        state.gotoPreviousChat\n    ]);\n    // Don't show the back button unless necessary (see showBackButton in state-fns.ts)\n    if (!shouldShowBackButton) {\n        return null;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"as-back-button-container\" },\n            React.createElement(\"button\", { className: \"as-back-button\", onClick: gotoPreviousChat },\n                React.createElement(\"div\", null,\n                    React.createElement(Icons.ChevronLeft, null)),\n                React.createElement(\"div\", { className: \"as-back-button-title\" },\n                    \"Resume previous chat: \",\n                    previousChatName)))));\n}\n","import { ActiveMessage, Button, CompletedMessage, ErrorMessage, Icons, UserMessage, attachmentMessagePrefix, cleanMessageWithAttachmentPrefix, dataframeMessageIdentifier, extractMessageBlocks, fileMessageIdentifier, formatContextVariables, getActiveChat, getActiveNotebook, getAssistantStore, getInProgressResponse, useStore } from '@anaconda/assistant-components';\nimport { NotebookActions } from '@jupyterlab/notebook';\nimport React from 'react';\nimport { isLocalNotebooks } from '../utils/environmentType';\nimport { logout } from '../utils/nucleus/accountUtils';\nimport { BackButton } from './back-button';\nconst exportMessageToNotebook = (tracker) => async (message) => {\n    const notebook = tracker.currentWidget;\n    if (!notebook)\n        return;\n    let addCodeToNotebook = useStore.getState().settings.addCodeToNotebook || 'below-active-cell';\n    if (addCodeToNotebook === 'in-place') {\n        addCodeToNotebook = 'below-active-cell';\n    }\n    const messageBlocks = extractMessageBlocks(message.content);\n    let hasPrintedRole = false;\n    for (const block of messageBlocks) {\n        switch (addCodeToNotebook) {\n            case 'below-active-cell':\n                NotebookActions.insertBelow(notebook.content);\n                break;\n            case 'at-end-of-notebook':\n                notebook.content.activeCellIndex = notebook.content.widgets.length - 1;\n                NotebookActions.insertBelow(notebook.content);\n                break;\n        }\n        if (block.type === 'python') {\n            NotebookActions.changeCellType(notebook.content, 'code');\n        }\n        else {\n            NotebookActions.changeCellType(notebook.content, 'markdown');\n        }\n        const role = message.role === 'user' ? 'User' : 'Assistant';\n        const parts = [`# ${role}`, block.content];\n        if (hasPrintedRole) {\n            parts.shift();\n        }\n        else {\n            hasPrintedRole = true;\n        }\n        const content = parts.join('\\n');\n        await notebook.content?.activeCell?.ready;\n        NotebookActions.replaceSelection(notebook.content, content);\n        await NotebookActions.run(notebook.content, notebook.sessionContext);\n    }\n};\nexport function ChatMessages({ tracker, addCodeToNotebook, scrollFn }) {\n    const contextSelectorFeatureFlagEnabled = getAssistantStore().getFeatureFlagBool('assistant-show-context-selector', false);\n    const [messages, chatContext, inProgressResponse, inProgressType, activeChatSession, retryError, selectedText, activeNotebookName, deleteMessagesAfterId, submitFeedback, response, isProTier, resetActiveChat] = useStore(state => {\n        const activeChat = getActiveChat(state);\n        const activeNotebook = getActiveNotebook(state);\n        return [\n            activeChat?.messages,\n            activeChat?.context,\n            activeChat?.inProgress,\n            activeChat?.inProgress?.type,\n            activeChat?.session,\n            state.retryError,\n            activeNotebook?.notebookState.selectedText?.text,\n            activeNotebook?.path,\n            state.deleteMessagesStartingWith,\n            state.submitFeedback,\n            getInProgressResponse(state),\n            state.account?.metadata?.is_pro_tier,\n            state.resetActiveChat\n        ];\n    });\n    if (!messages || !chatContext)\n        return null;\n    const initialMessage = messages[0];\n    async function exportChatToNotebook() {\n        const notebook = tracker.currentWidget;\n        if (!(notebook && messages))\n            return;\n        let addCodeToNotebook = useStore.getState().settings.addCodeToNotebook || 'below-active-cell';\n        if (addCodeToNotebook === 'in-place') {\n            addCodeToNotebook = 'below-active-cell';\n        }\n        for (const message of messages) {\n            const messageBlocks = extractMessageBlocks(message.content);\n            let hasPrintedRole = false;\n            for (const block of messageBlocks) {\n                switch (addCodeToNotebook) {\n                    case 'below-active-cell':\n                        NotebookActions.insertBelow(notebook.content);\n                        break;\n                    case 'at-end-of-notebook':\n                        notebook.content.activeCellIndex = notebook.content.widgets.length - 1;\n                        NotebookActions.insertBelow(notebook.content);\n                        break;\n                }\n                if (block.type === 'python') {\n                    NotebookActions.changeCellType(notebook.content, 'code');\n                }\n                else {\n                    NotebookActions.changeCellType(notebook.content, 'markdown');\n                }\n                const role = message.role === 'user' ? 'User' : 'Assistant';\n                const parts = [`# ${role}`, block.content];\n                if (hasPrintedRole) {\n                    parts.shift();\n                }\n                else {\n                    hasPrintedRole = true;\n                }\n                const content = parts.join('\\n');\n                await notebook.content?.activeCell?.ready;\n                NotebookActions.replaceSelection(notebook.content, content);\n                await NotebookActions.run(notebook.content, notebook.sessionContext);\n            }\n        }\n    }\n    function handleFeedback(messageId, sentiment, text) {\n        submitFeedback({ messageId, sentiment, text });\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(BackButton, null),\n        initialMessage?.role === 'user' && (React.createElement(UserMessage, { isInitialMessage: true, deleteMessagesAfterId: useStore(state => state.deleteMessagesStartingWith), exportMessage: exportMessageToNotebook(tracker), message: {\n                ...initialMessage,\n                content: determineFirstMessageText(chatContext, initialMessage.content, contextSelectorFeatureFlagEnabled ? activeNotebookName : undefined)\n            } })),\n        messages.slice(1).map((message) => {\n            // Skip attachment messages,\n            // this include the message at the beginning of a chat and subsequent messages after the user tags a file with `@`\n            if (message.content.startsWith(attachmentMessagePrefix) &&\n                (message.content.includes(dataframeMessageIdentifier) ||\n                    message.content.includes(fileMessageIdentifier))) {\n                return null;\n            }\n            switch (message.role) {\n                case 'user':\n                    return (React.createElement(UserMessage, { key: message.messageId, deleteMessagesAfterId: deleteMessagesAfterId, exportMessage: exportMessageToNotebook(tracker), message: {\n                            ...message,\n                            content: cleanMessageWithAttachmentPrefix(message.content)\n                        } }));\n                case 'assistant':\n                    return (React.createElement(CompletedMessage, { key: message.messageId, runCode: addCodeToNotebook, assistantMessage: message, selectedText: selectedText, activeChatSession: activeChatSession, handleFeedback: handleFeedback, handleExportMessage: exportMessageToNotebook(tracker), handleDeleteMessageAfterId: deleteMessagesAfterId }));\n            }\n        }),\n        inProgressType === 'active' && (React.createElement(ActiveMessage, { response: response, selectedText: selectedText, activeChatSession: activeChatSession, scrollFn: scrollFn })),\n        inProgressType === 'error' && inProgressResponse && (React.createElement(ErrorMessage, { errorMessage: 'message' in inProgressResponse ? inProgressResponse.message : 'unknown error', retryError: retryError, showLogoutButton: Boolean(isLocalNotebooks()), isProTier: isProTier, resetChat: resetActiveChat, logout: logout })),\n        inProgressType ? null : (React.createElement(Button, { asChildName: \"export-chat\", onClick: exportChatToNotebook },\n            React.createElement(Icons.ChevronLeft, null),\n            React.createElement(\"div\", null, \"Export and run this chat in your Notebook\")))));\n}\nfunction determineFirstMessageText(context, content, notebookName) {\n    const suffix = formatContextVariables(context, content, notebookName);\n    switch (context.type) {\n        case 'graph-dataframe':\n            return `Generate graph for ${suffix}`;\n        case 'describe-dataframe':\n            return `Explain data in ${suffix}`;\n        case 'explain-code':\n            return `Explain ${suffix}`;\n        case 'comment-code':\n            return `Comment ${suffix}`;\n        case 'improve-code':\n            return `Refactor ${suffix}`;\n        case 'debug-error':\n            return `Debug error using ${suffix}`;\n        case 'suggestions-chat':\n        case 'default-python':\n            if (content.startsWith(attachmentMessagePrefix)) {\n                return cleanMessageWithAttachmentPrefix(content);\n            }\n            else {\n                return `${content} (using ${suffix})`;\n            }\n        default:\n            // Unknown context type\n            return content;\n    }\n}\n","import React, { useCallback, useRef } from 'react';\nimport { HomeScreen, useStore, getActiveNotebook, ChatPanelFooter } from '@anaconda/assistant-components';\nimport { throttle } from 'lodash';\nimport { ChatMessages } from './chat-messages';\nimport { isLocalNotebooks } from '../utils/environmentType';\nimport { logout } from '../utils/nucleus/accountUtils';\nimport { getAssistantSdk } from '../assistant-sdk';\nimport { fetchFileSummary } from '../utils/fileSummarizationUtils';\nimport { TOKEN_LIMIT } from '../config';\nexport function ChatPanel({ tracker, addCodeToNotebook, getActiveCodeCell }) {\n    const activeChatKey = useStore(state => getActiveNotebook(state)?.activeChatKey);\n    const messageEndRef = useRef(null);\n    const [activeNotebook, selectChatStarter, makeChatRequest, enableDataCollection, suggestionDataFrame, dataFrames, isProTier, updateSuggestions, resetActiveChat, setSuggestionsDataframe] = useStore(state => {\n        const activeNotebook = getActiveNotebook(state);\n        return [\n            activeNotebook,\n            state.selectChatStarter,\n            state.makeChatRequest,\n            state.settings.enableDataCollection,\n            activeNotebook?.suggestionState.dataframe,\n            activeNotebook?.notebookState.dataframes,\n            state.account?.metadata?.is_pro_tier,\n            state.updateSuggestions,\n            state.resetActiveChat,\n            state.setSuggestionsDataframe\n        ];\n    });\n    const showLogoutButton = Boolean(isLocalNotebooks());\n    const chatStarters = activeNotebook?.homeScreen?.chatStarters ?? null;\n    const selectedChatStarter = activeNotebook?.homeScreen?.selectedChatStarter ?? null;\n    const suggestionState = activeNotebook?.suggestionState;\n    function scrollToBottom() {\n        messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const throttledScroll = useCallback(throttle(scrollToBottom, 500), []);\n    const handleUpdateSuggestions = (activeCell, type, dataframe) => {\n        updateSuggestions(activeCell, type, dataframe, getAssistantSdk());\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: \"as-chat-main-section\" },\n            !activeChatKey ? (React.createElement(HomeScreen, { chatStarters: chatStarters, selectedChatStarter: selectedChatStarter, selectChatStarter: selectChatStarter, makeChatRequest: makeChatRequest, getActiveCodeCell: getActiveCodeCell, dataFrames: dataFrames, enableDataCollection: enableDataCollection, activeNotebook: Boolean(activeNotebook), suggestionState: suggestionState, updateSuggestions: handleUpdateSuggestions, setSuggestionsDataframe: setSuggestionsDataframe, isProTier: isProTier, resetActiveChat: resetActiveChat, showLogoutButton: showLogoutButton, logout: logout, suggestionDataFrame: suggestionDataFrame })) : (React.createElement(ChatMessages, { tracker: tracker, addCodeToNotebook: addCodeToNotebook, scrollFn: throttledScroll })),\n            React.createElement(\"div\", { style: { float: 'left', clear: 'both' }, ref: messageEndRef })),\n        React.createElement(ChatPanelFooter, { scrollFn: throttledScroll, tokenLimit: TOKEN_LIMIT, fetchFileSummary: fetchFileSummary })));\n}\n","import React from 'react';\nimport { ErrorMessage } from '@anaconda/assistant-components';\nimport { logout } from '../utils/nucleus/accountUtils';\nexport function ErrorScreen({ error, resetErrorBoundary }) {\n    return (React.createElement(\"div\", { className: \"as-error-screen\" },\n        React.createElement(ErrorMessage, { showLogoutButton: true, errorMessage: error.message, retryError: resetErrorBoundary, logout: () => logout() })));\n}\n","import { LabIcon } from '@jupyterlab/ui-components';\nexport const AssistantIcon = new LabIcon({\n    name: 'assistant:wizard',\n    svgstr: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 16 16\" fill=\"none\">\n  <path\n    d=\"M10.125 3.25C10.0312 3.1875 10 3.09375 10 3C10 2.90625 10.0312 2.84375 10.125 2.78125L12 2L12.75 0.15625C12.8125 0.0625 12.9062 0 13 0C13.0938 0 13.1562 0.0625 13.2188 0.15625L14 2L15.8438 2.78125C15.9375 2.84375 16 2.90625 16 3C16 3.09375 15.9375 3.1875 15.8438 3.25L14 4L13.2188 5.875C13.1562 5.96875 13.0938 6 13 6C12.9062 6 12.8125 5.96875 12.75 5.875L12 4L10.125 3.25ZM15.8438 12.7812C15.9375 12.8438 16 12.9062 16 13C16 13.0938 15.9375 13.1875 15.8438 13.25L14 14L13.2188 15.875C13.1562 15.9688 13.0938 16 13 16C12.9062 16 12.8125 15.9688 12.75 15.875L12 14L10.125 13.25C10.0312 13.1875 10 13.0938 10 13C10 12.9062 10.0312 12.8438 10.125 12.7812L12 12L12.75 10.1562C12.8125 10.0625 12.9062 10 13 10C13.0938 10 13.1562 10.0625 13.2188 10.1562L14 12L15.8438 12.7812ZM12 8C12 8.1875 11.875 8.375 11.7188 8.4375L8.1875 10.2188L6.4375 13.75C6.34375 13.9062 6.15625 14 6 14C5.78125 14 5.625 13.9062 5.53125 13.75L3.78125 10.2188L0.25 8.4375C0.09375 8.375 0 8.1875 0 8C0 7.8125 0.09375 7.625 0.25 7.5625L3.78125 5.78125L5.53125 2.28125C5.71875 1.9375 6.25 1.9375 6.4375 2.28125L8.1875 5.78125L11.7188 7.5625C11.875 7.625 12 7.8125 12 8Z\"\n    fill=\"#31a824\"\n  />\n</svg>`\n});\n","const MAX_LENGTH = 2500;\nexport function extractErrorContext(errorCell, notebook, error) {\n    const errorCellId = errorCell.model.sharedModel.getId();\n    const idx = notebook.widgets.findIndex(cell => cell.model.sharedModel.getId() === errorCellId);\n    if (idx === -1)\n        return null; // Cell not found (shouldn't happen)\n    // Get the source for the cells preceding the error cell\n    const precedingCells = trimPrecedingCells(notebook.widgets\n        .slice(0, idx)\n        .filter(cell => cell.model.type === 'code')\n        .map(cell => ({\n        id: cell.model.sharedModel.getId(),\n        source: cell.model.sharedModel.getSource()\n    })));\n    return {\n        precedingCells,\n        cell: {\n            id: errorCellId,\n            source: errorCell.model.sharedModel.getSource()\n        },\n        errorText: error\n    };\n}\n/**\n * Trims the preceding cells to a maximum length of 1250 characters\n * Tries to keep cells closest to the error (last in the array) intact\n * @param precedingCells\n */\nexport function trimPrecedingCells(precedingCells) {\n    let totalLength = 0;\n    return precedingCells\n        .reverse() // Start with cells closest to the error\n        .map(cell => {\n        totalLength += cell.source.length;\n        return { id: cell.id, source: truncateIfTooLong(totalLength, cell) };\n    })\n        .reverse();\n}\nfunction truncateIfTooLong(totalLength, cell) {\n    if (totalLength > MAX_LENGTH && totalLength - cell.source.length < MAX_LENGTH) {\n        // This cell has pushed length over the limit, so truncate the cell to fit the max length\n        return cell.source.slice(0, MAX_LENGTH - (totalLength - cell.source.length) - 3) + '...';\n    }\n    else if (totalLength > MAX_LENGTH) {\n        // Over the limit, so truncate entirely\n        return '...';\n    }\n    else {\n        // Under the limit, so return the full cell\n        return cell.source;\n    }\n}\n","import React from 'react';\nimport { SettingsPage, getActiveChat, useStore } from '@anaconda/assistant-components';\nimport { ThemeProvider, createTheme } from '@mui/material';\nimport { logout } from '../utils/nucleus/accountUtils';\nimport { isCloudNotebooks, isLocalNotebooks } from '../utils/environmentType';\nexport function SettingsWrapper() {\n    const [account, enableDataCollection, setEnableDataCollection, _addCodeToNotebook, setAddCodeToNotebook] = useStore(state => [\n        state.account,\n        state.settings.enableDataCollection,\n        state.setEnableDataCollection,\n        state.settings.addCodeToNotebook,\n        state.setAddCodeToNotebook,\n        getActiveChat(state)\n    ]);\n    const isStarterTier = Boolean(account?.metadata?.is_starter_tier);\n    const isProTier = Boolean(account?.metadata?.is_pro_tier);\n    const addCodeToNotebook = _addCodeToNotebook || 'below-active-cell';\n    const theme = createTheme({\n        palette: {\n            primary: {\n                main: '#43B049'\n            }\n        },\n        typography: {\n            fontSize: 11\n        }\n    });\n    const showLogout = () => {\n        if (account && isLocalNotebooks()) {\n            return {\n                logout,\n                accountUserEmail: account?.user.email || ''\n            };\n        }\n        return null;\n    };\n    return (React.createElement(ThemeProvider, { theme: theme },\n        React.createElement(SettingsPage, { showLogout: showLogout, enableDataCollection: enableDataCollection, setEnableDataCollection: setEnableDataCollection, addCodeToNotebook: addCodeToNotebook, setAddCodeToNotebook: setAddCodeToNotebook, isProTier: isProTier, isStarterTier: isStarterTier, isCloudNotebooks: isCloudNotebooks() })));\n}\n","import { sharedCore } from './jupyter/extension-load-utils';\nimport { isLocalDev } from './utils/environmentType';\nexport const LD_KEY_ASSISTANT_USE_DEV_API_ENDPOINT = 'assistant-use-dev-api-endpoint';\nexport const ASSISTANT_EXTENSION_NAMESPACE = 'aext_assistant_server';\n// TODO:\n// Make this dynamic by reading it from the backend\nexport const CLIENT_VERSION = '4.1.0';\n// The maximum amount of input tokens to allow sending up. The current model, gpt-3.5-turbo-0613, supports 4096\n// and so it looks like we will want to adjust this based on the model in the future. We're limiting to 3/4 in the\n// input in order to allow tokens in the response.\nexport const TOKEN_LIMIT = 4096;\n// We can use this to show/hide the settings button\n// which will open the settings page when we have configurable settings in the future\nexport const SHOW_SETTINGS = true;\n// We specify the server URL based on the account we are logged into.\n// We fetch the account only once and cache the response.\nlet serverUrlPromise = null;\nexport function getServerUrl() {\n    if (!serverUrlPromise) {\n        serverUrlPromise = (async () => {\n            if (isLocalDev()) {\n                return 'http://localhost:8000';\n            }\n            const useDevServer = sharedCore.getFeatureFlagBool(LD_KEY_ASSISTANT_USE_DEV_API_ENDPOINT);\n            console.log('[Assistant] Using dev server because of LD feature flag:', useDevServer);\n            if (useDevServer) {\n                return 'https://jupyterassistant.anacondaconnect.com';\n            }\n            else {\n                return (sharedCore.getCoreReady().config.assistant.apiUrl || 'https://assistant.anaconda.cloud');\n            }\n        })();\n    }\n    return serverUrlPromise;\n}\nfunction getHostName() {\n    if (typeof window === 'undefined') {\n        return 'anaconda.cloud';\n    }\n    return window.location.host.replace(/^nb\\./, '');\n}\nexport const ENV = {\n    PROD: {\n        LEGACY_CLOUD_API_BASE_URL: 'https://anaconda.cloud/api',\n        CLOUD_API_BASE_URL: `https://${getHostName()}/api`,\n        STAGING_CLOUD_API_BASE_URL: 'https://nucleus-latest.anacondaconnect.com/api'\n    }\n};\n","import AssistantPlugin from './assistant_plugin';\nexport { AssistantPlugin };\n","import { getSelectedTextAndUpdateStore } from './getSelectedTextAndUpdateStore';\nexport function getActivateAssistantWithCodeSelection(opts) {\n    return async function () {\n        const { assistant, notebookTracker } = opts;\n        getSelectedTextAndUpdateStore(notebookTracker);\n        assistant.showInCellMenuWidget();\n    };\n}\n","import { useStore } from '@anaconda/assistant-components';\nimport { getSelectedTextAndUpdateStore } from './getSelectedTextAndUpdateStore';\nexport function getActivateContextMenuAssistantWithCodeSelection(opts) {\n    return async function () {\n        const { assistant, command, notebookTracker } = opts;\n        const selectedText = getSelectedTextAndUpdateStore(notebookTracker);\n        assistant.activateWidget(false);\n        useStore.getState().resetToHomeScreen();\n        useStore.getState().makeChatRequest({\n            context: {\n                type: command,\n                variables: {\n                    active_cell_code: selectedText?.cell.source ?? '',\n                    selected_code: (selectedText?.text || selectedText?.cell.source) ?? ''\n                }\n            },\n            instruction: ''\n        });\n    };\n}\n","import { Panel, PanelLayout, Widget } from '@lumino/widgets';\nimport { AssistantIcon } from '../components/icon';\nimport { onMessageAccumulator } from './extension-load-utils';\nimport { AssistantPanelWidget } from '../components/assistant-panel-widget';\nimport { showInCellMenuWidget } from '../components/assistant-in-cell-widget';\nexport class AssistantSidebarWidget extends Widget {\n    opts;\n    content = null;\n    manuallyClosed = window.localStorage.getItem('anaconda-assistant-keep-hidden') === 'true';\n    constructor(opts) {\n        super();\n        this.opts = opts;\n        this.initialize();\n        // Menu option name: `Show Anaconda Assistant`\n        this.title.caption = 'Anaconda Assistant';\n        // save a copy of this.processMessage, then overwrite it\n        const oldProcessMessage = this.processMessage.bind(this);\n        this.processMessage = (msg) => {\n            if (this._onMessageFn) {\n                this._onMessageFn(msg);\n            }\n            oldProcessMessage(msg);\n        };\n        // If the user closes the widget, it shouldn't be opened automatically\n        // However, if the system closes the widget, it should be opened automatically.\n        // We detect this by checking if the widget was hidden and detached in the last second.\n        // Also, if the widget is shown, we clear the manuallyClosed flag.\n        const onMessage = (message) => {\n            onMessageAccumulator(message, (messages) => {\n                const recentlyHidden = messages.find(m => m.type === 'after-hide');\n                const recentlyDetached = messages.find(m => m.type === 'after-detach');\n                const recentlyShown = messages.find(m => m.type === 'after-show');\n                if (recentlyHidden && !recentlyDetached) {\n                    this.keepAssistantHidden(true);\n                    // Hack to only track actual close from user interaction\n                    if (messages.length === 2) {\n                        this.hideFirstTimeLoginPage();\n                    }\n                }\n                if (recentlyShown) {\n                    this.keepAssistantHidden(false);\n                }\n            });\n        };\n        this.onMessage(onMessage);\n    }\n    /**\n     * Initializes the widget\n     */\n    initialize() {\n        const layout = (this.layout = new PanelLayout());\n        this.addClass('jp-SidePanel');\n        this.content = new Panel();\n        const assistantPanelWidget = new AssistantPanelWidget(this.opts.notebookTracker);\n        assistantPanelWidget.addClass('as-widget-content');\n        this.content.addWidget(assistantPanelWidget);\n        this.content.node.setAttribute('role', 'region');\n        this.content.node.setAttribute('aria-label', 'Assistant content');\n        this.content.addClass('as-widget-content');\n        this.addClass('as-widget-container');\n        layout.addWidget(this.content);\n        this.id = 'anaconda-assistant';\n        this.title.icon = AssistantIcon;\n        this.title.closable = true;\n    }\n    /**\n     * A function that allows subscribing to messages sent to this this.\n     */\n    _onMessageFn = null;\n    onMessage(fn) {\n        this._onMessageFn = fn;\n    }\n    // Shows the widget\n    // If the widget is visible, we don't do anything.\n    // If the widget is disposed, we regenerate it.\n    // If the widget is not attached, we add it to the main area.\n    // If the main area is not visible, we show it, unless keepHidden is true.\n    // Finally, we activate the widget, if keepHidden is false.\n    activateWidget(keepHidden = this.manuallyClosed) {\n        const app = this.opts.jupyterFrontEnd;\n        // If the widget is visible, don't do anything\n        if (this.isAttached && this.parent?.isVisible) {\n            return;\n        }\n        // Regenerate the widget if disposed\n        if (this.isDisposed) {\n            this.initialize();\n        }\n        // Add the widget to the main work area if it's not there\n        if (!this.isAttached) {\n            app.shell.add(this, 'right');\n            if (this.opts.isJupyterNotebook) {\n                app.shell.addClass('as-notebook-container');\n            }\n        }\n        // If the main area is not visible, and the widget is hidden, show the widget and the main area\n        if (!this.parent?.isVisible && !keepHidden) {\n            this.manuallyClosed = false;\n            this.show();\n            this.parent?.show();\n        }\n        // Activate the widget if keepHidden is false\n        if (!keepHidden) {\n            app.shell.activateById(this.id);\n        }\n    }\n    showInCellMenuWidget() {\n        showInCellMenuWidget({ activateWidget: () => this.activateWidget(false) });\n    }\n    // Hides the widget and the parent widget\n    hideWidget() {\n        this.hide();\n        this.parent?.hide();\n        this.hideFirstTimeLoginPage();\n    }\n    hideFirstTimeLoginPage() {\n        window.localStorage.setItem('anaconda-assistant-opened-once', 'true');\n    }\n    keepAssistantHidden(hide) {\n        window.localStorage.setItem('anaconda-assistant-keep-hidden', hide ? 'true' : 'false');\n        this.manuallyClosed = hide;\n    }\n    // Toggles the widget\n    // If the widget is attached and the parent is visible, we close the parent.\n    // We indicate that this was done manually.\n    // Otherwise, we clear the manuallyClosed flag and activate the widget\n    toggleWidget() {\n        // If the widget is attached and the parent is visible, we close the parent.\n        if (this.isAttached && this.parent?.isVisible) {\n            // Once changed manually, it shouldn't be changed automatically\n            this.manuallyClosed = true;\n            this.hideWidget();\n            return;\n        }\n        this.manuallyClosed = false;\n        return this.activateWidget();\n    }\n}\n","/**\n * This function is used to detect if the user manually closed the widget.\n * It works by accumulating all messages from the widget that happened\n * within the time specified by the timeout parameter.\n * After the timeout, the accumulated messages are passed to the callback.\n */\nlet messagesInTheLastSecond = [];\nlet messageAccumulatorTimeout;\nexport const onMessageAccumulator = (message, callback, timeout = 100) => {\n    messagesInTheLastSecond.push(message);\n    clearTimeout(messageAccumulatorTimeout);\n    messageAccumulatorTimeout = setTimeout(() => {\n        if (messagesInTheLastSecond.length > 0 && callback) {\n            callback(messagesInTheLastSecond);\n        }\n        messagesInTheLastSecond = [];\n    }, timeout);\n};\n/**\n * Helper to load the core plugin\n */\nexport class SharedCorePlugin {\n    corePlugin = null;\n    coreReady = null;\n    constructor() { }\n    async setCore(corePlugin) {\n        this.corePlugin = corePlugin;\n        this.coreReady = await corePlugin.ready();\n    }\n    getCore() {\n        if (!this.corePlugin) {\n            throw new Error('Core not set');\n        }\n        return this.corePlugin;\n    }\n    getCoreReady() {\n        this.getCore();\n        if (!this.coreReady) {\n            throw new Error('Core not ready');\n        }\n        return this.coreReady;\n    }\n    getFeatureFlagBool(name) {\n        return this.getCoreReady().featureFlag.getBool(name, false);\n    }\n}\nexport const sharedCore = new SharedCorePlugin();\n","import { fetchTermsAndConditionsVersion } from '../api/terms-and-conditions-version';\nimport { STATE_VERSION, useStore } from '@anaconda/assistant-components';\nimport { extensionAPIRequest } from '../utils/request';\nimport { logout } from '../utils/nucleus/accountUtils';\nimport { ADD_CODE_TO_NOTEBOOK_TYPES } from '@anaconda/assistant-components';\nexport const DELETED_CHAT_KEYS = [];\nexport function normalizeDiskState(diskState, currentAppState, chatStarters) {\n    // Extract as minimal state as possible\n    let addCodeToNotebook = diskState.settings?.addCodeToNotebook;\n    if (!addCodeToNotebook || !ADD_CODE_TO_NOTEBOOK_TYPES.includes(addCodeToNotebook)) {\n        addCodeToNotebook = currentAppState.settings?.addCodeToNotebook;\n    }\n    let notebooks = [];\n    if (diskState.notebooks) {\n        for (const notebook of diskState.notebooks) {\n            if (typeof notebook.path !== 'string')\n                continue;\n            if (!notebook.path)\n                continue;\n            if (!notebook.chats)\n                continue;\n            const chats = {};\n            for (const chat of Object.values(notebook.chats)) {\n                if (typeof chat.key !== 'string')\n                    continue;\n                if (typeof chat.name !== 'string')\n                    continue;\n                if (DELETED_CHAT_KEYS.includes(chat.key)) {\n                    DELETED_CHAT_KEYS.splice(DELETED_CHAT_KEYS.indexOf(chat.key), 1);\n                    continue;\n                }\n                chats[chat.key] = {\n                    // Being permissive here since the corruption would have to be surgical to break here,\n                    // and chats are of too many types to be able to validate them all\n                    // in this iteration.\n                    ...chat,\n                    lastUpdated: new Date(chat.lastUpdated || 0)\n                };\n            }\n            notebooks.push({\n                path: notebook.path,\n                notebookState: {\n                    dataframes: [],\n                    selectedCell: null,\n                    selectedText: null,\n                    error: null\n                },\n                homeScreen: {\n                    chatStarters: chatStarters,\n                    selectedChatStarter: null\n                },\n                suggestionState: {\n                    loading: false,\n                    suggestions: null,\n                    dataframe: null,\n                    error: null\n                },\n                chats,\n                activeChatKey: null,\n                previousChatKey: null\n            });\n        }\n    }\n    return {\n        terms: {\n            accepted: Boolean(diskState.terms?.accepted || currentAppState.terms?.accepted),\n            version: diskState.terms?.version || currentAppState.terms?.version || null\n        },\n        notebooks,\n        settings: {\n            open: Boolean(diskState.settings?.open),\n            enableDataCollection: Boolean(diskState.settings?.enableDataCollection),\n            addCodeToNotebook\n        }\n    };\n}\n/**\n * Fetches the state from disk.\n * Ignores the state if the received state is not an object (meaning JSON parsing failed).\n * Ignores the state if the version does not match.\n * @returns The state from disk or null if there is no state.\n */\nexport async function fetchAndNormalizeDiskState(currentAppState, chatStarters) {\n    const diskStateResponse = await extensionAPIRequest('get_disk_state');\n    const isObject = Boolean(diskStateResponse && typeof diskStateResponse === 'object');\n    const hasState = Boolean(isObject && diskStateResponse.state && typeof diskStateResponse.state === 'object');\n    const hasVersion = Boolean(isObject && diskStateResponse.version && typeof diskStateResponse.version === 'number');\n    const versionIsUpToDate = Boolean(isObject && diskStateResponse.version && diskStateResponse.version === STATE_VERSION);\n    if (isObject && hasState && hasVersion && versionIsUpToDate) {\n        return normalizeDiskState(diskStateResponse.state, currentAppState, chatStarters);\n    }\n    return null;\n}\n/**\n * Fetches the state from disk and merges it with the app state.\n */\nexport function fetchDiskState(chatStarters) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            // Fetching state from disk\n            const diskState = await fetchAndNormalizeDiskState(useStore.getState(), chatStarters);\n            if (!diskState) {\n                // If we didn't receive a valid state and we are logged in, try to log out\n                if (useStore.getState()?.terms?.accepted) {\n                    console.log('No state found on disk and locally the Assistant is already loaded. Logging out.');\n                    await logout([\n                        'An Assistant in another Jupyter Lab session or browser tab logged out.',\n                        'Do you want to log out as well?',\n                        'Logging out will remove all your Anaconda Assistant data,',\n                        'but if you decide to stay some features will not be available.'\n                    ].join(' '));\n                    resolve(void 0);\n                    return;\n                }\n                console.log('No state found on disk. Skipping state update.');\n                resolve(void 0);\n                return;\n            }\n            // If we can't fetch the terms version, the user doesn't have access to our API.\n            let fetchedVersion = null;\n            try {\n                fetchedVersion = await fetchTermsAndConditionsVersion();\n            }\n            catch (e) {\n                console.error('Error fetching terms and conditions version', e);\n            }\n            if (!fetchedVersion) {\n                console.log('No terms and conditions version found. The user is not allowed to use our API.');\n                useStore.getState()?.setAccess(false);\n            }\n            // Accepting terms locally if they are accepted on disk\n            const version = diskState.terms?.version || useStore.getState()?.terms?.version || fetchedVersion;\n            if (!useStore.getState()?.terms?.accepted && diskState.terms?.accepted && version) {\n                console.log('Terms and conditions accepted on disk. Accepting them locally.');\n                useStore.getState()?.acceptTerms(version, true);\n            }\n            // Syncing chats\n            for (const notebook of diskState.notebooks || []) {\n                const chats = Object.values(notebook.chats);\n                console.log(`Syncing ${chats.length} chats to ${notebook.path}`);\n                useStore.getState()?.addSyncedChats(notebook, chats);\n            }\n            resolve(void 0);\n        }\n        catch (e) {\n            console.error('Error updating state from disk', e);\n            reject(e);\n        }\n    });\n}\n","import { CodeCell } from '@jupyterlab/cells';\nimport { getSelectionFromEditor } from '../utils/text-selection-utils';\nimport { useStore } from '@anaconda/assistant-components';\nexport function getSelectedTextAndUpdateStore(tracker) {\n    const activeCell = tracker.activeCell;\n    const editor = activeCell?.editor;\n    if (!editor) {\n        return;\n    }\n    // If there is a selection, use it\n    const currentSelection = editor?.getSelection();\n    const selectedText = getSelectionFromEditor(editor, currentSelection);\n    if (selectedText.text) {\n        useStore.getState().setTextSelection(selectedText);\n        return selectedText;\n    }\n    // Only select text in code cells\n    if (activeCell instanceof CodeCell) {\n        const lastLine = editor.getLine(editor.lineCount - 1) || '';\n        const totalLines = editor.lineCount - 1;\n        editor.setSelection({\n            start: { line: 0, column: 0 },\n            end: { line: totalLines, column: lastLine.length }\n        });\n        const selection = editor.getSelection();\n        const selectedText = getSelectionFromEditor(editor, selection);\n        useStore.getState().setTextSelection(selectedText);\n    }\n    return selectedText;\n}\n","import { useStore } from '@anaconda/assistant-components';\nimport _ from 'lodash';\nimport { getNewChatStarters } from '../utils/ChatStarters';\n/**\n * Initializes the assistant by hiding it if there's no active notebook.\n * Also, if the current widget is a notebook and has a path,\n * sets the path in the store if it's not set.\n */\nexport function initializeAssistant(opts) {\n    const { assistant, jupyterFrontEnd: app } = opts;\n    const onCurrentWidgetChanged = typeof app.shell?._currentChanged?.connect === 'function';\n    if (!onCurrentWidgetChanged) {\n        return;\n    }\n    let hadUrlParam = false;\n    async function onConnect() {\n        const context = app.shell.currentWidget?.context;\n        const factoryName = context?.factoryName;\n        const isNotebook = factoryName && factoryName.toLowerCase() === 'notebook';\n        // Get ?open_assistant=true from the URL\n        const urlParams = new URLSearchParams(window.location.search);\n        const openAssistant = urlParams.get('open_assistant');\n        // Remove the query param from the URL\n        urlParams.delete('open_assistant');\n        window.history.replaceState({}, '', `${window.location.pathname}?${urlParams}`);\n        if (openAssistant === 'true') {\n            hadUrlParam = true;\n            if (!isNotebook && useStore.getState().account) {\n                // If the user already logged in, but the current widget is not a notebook,\n                // we must create a notebook.\n                // The only view that works without a notebook is the login view.\n                await app.commands.execute('notebook:create-new');\n            }\n            assistant.activateWidget();\n            return;\n        }\n        if ((!hadUrlParam || useStore.getState().account) &&\n            !isNotebook &&\n            Boolean(window.localStorage.getItem('anaconda-assistant-opened-once'))) {\n            assistant.hideWidget();\n            assistant.close();\n            return;\n        }\n        // TODO:\n        // `!assistant.parent` seems to be necessary for JupyterLab v4\n        if (!assistant.parent || !(assistant.isAttached && assistant.parent?.isVisible)) {\n            assistant.activateWidget(assistant.manuallyClosed);\n        }\n        const state = useStore.getState();\n        if (context?.path && (!state.path || state.path !== context.path)) {\n            useStore\n                .getState()\n                .setPath(context?.path || '', { user: state.user || '', dataframes: [] }, getNewChatStarters);\n        }\n    }\n    // TODO: This code seems to be necessary for JupyterLab v4\n    const debouncedOnConnect = _.debounce(onConnect, 100);\n    app.shell._currentChanged.connect(debouncedOnConnect);\n    // TODO:\n    // This code seems to be necessary for JupyterLab v4\n    debouncedOnConnect();\n}\n","import { STATE_VERSION, useStore } from '@anaconda/assistant-components';\nimport { extensionAPIRequest } from '../utils/request';\nimport { getAccessToken } from '../utils/nucleus/auth';\n/**\n * Synchronizes the state of the store with the server.\n * Does so by sending the state to the server,\n * except for the terms and conditions, which\n * are only sent if they have been accepted.\n */\nexport async function syncDiskState(termsAccepted) {\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n        console.log('Could not sync state, no access token');\n        return;\n    }\n    const appState = useStore.getState();\n    const state = {\n        ...appState,\n        terms: {\n            accepted: false,\n            version: appState.terms?.version || null\n        }\n    };\n    // Special case for terms and conditions\n    if (appState.terms?.accepted === true || termsAccepted) {\n        state.terms.accepted = true;\n    }\n    extensionAPIRequest('sync_disk_state', {\n        headers: { 'X-Nucleus-Token': accessToken.accessToken },\n        method: 'POST',\n        body: JSON.stringify({\n            state,\n            version: STATE_VERSION\n        })\n    });\n}\nexport async function clearDiskState() {\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n        console.log('Could not sync state, no access token');\n        return;\n    }\n    extensionAPIRequest('sync_disk_state', {\n        headers: { 'X-Nucleus-Token': accessToken.accessToken },\n        method: 'POST',\n        body: JSON.stringify({})\n    });\n}\n","import { useStore } from '@anaconda/assistant-components';\nimport { fetchDiskState } from './fetchDiskState';\nimport { syncDiskState } from './syncDiskState';\nimport { hasAccess } from '../api/access';\nimport { getNewChatStarters } from '../utils/ChatStarters';\nlet chainedPromise = null;\n/**\n * Synchronizes the state of the store with the server.\n * First, it checks if there is a promise running.\n * If there is, it waits for it to finish.\n * Then, it checks if the user has access to our API.\n * If not, it sets the access to false in the store.\n * If the user has access, it updates the account in the store.\n * Then, it fetches the state from disk and merges it with the app state.\n * Finally, it synchronizes the state with the server.\n */\nexport function syncDiskStateChained(termsAccepted) {\n    chainedPromise = (async () => {\n        if (chainedPromise) {\n            await chainedPromise;\n        }\n        if (!(await hasAccess())) {\n            console.log('The user is not allowed to use our API.');\n            useStore.getState().setAccess(false);\n            return;\n        }\n        try {\n            await useStore.getState().updateAccount();\n        }\n        catch (e) {\n            console.log('Unable to pre-load account. The user is not logged in');\n        }\n        await fetchDiskState(getNewChatStarters(true));\n        await syncDiskState(termsAccepted);\n        chainedPromise = null;\n    })();\n    return chainedPromise;\n}\nexport function syncDiskStateChainedEventFunction() {\n    syncDiskStateChained();\n}\nexport function bindSyncDiskStateChained() {\n    window.addEventListener('blur', syncDiskStateChainedEventFunction);\n    window.addEventListener('focus', syncDiskStateChainedEventFunction);\n}\nexport function unbindSyncDiskStateChained() {\n    try {\n        window.removeEventListener('blur', syncDiskStateChainedEventFunction);\n        window.removeEventListener('focus', syncDiskStateChainedEventFunction);\n    }\n    catch (e) {\n        console.log('Error unbinding syncDiskStateChained', e);\n    }\n}\n","import { isEnterpriseNotebooks } from './environmentType';\nexport const getNewChatStarters = (noDataframes) => {\n    const chatStarters = {\n        categories: [\n            {\n                id: 'tutorial',\n                label: 'Get started',\n                starters: [\n                    {\n                        name: 'load-volcano-data',\n                        label: 'Load volcano data from the Smithsonian Institute',\n                        instruction: `Load 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' in a code block. Use \\`pd.read_csv\\` and show the first 10 rows`\n                    },\n                    {\n                        name: 'plot-fibonacci',\n                        label: 'Plot the first 100 Fibonacci numbers',\n                        instruction: 'Plot the first 100 fibonacci numbers'\n                    },\n                    {\n                        name: 'mask-emails',\n                        label: 'Create a function to mask emails',\n                        instruction: isEnterpriseNotebooks()\n                            ? `Create a Python function called \\`mask_email\\` that takes an email address as input and returns a masked version of the email. The function should:\n\\n1. Replace the local part of the email (before the '@' symbol) with '[MASKED]', while keeping the domain part (after the '@' symbol) unchanged.\n2. Ensure the masked email maintains the same format as a standard email address.\n3. Include error handling to manage invalid email formats gracefully, returning a message indicating the input is not a valid email.\n\\nPlease provide the complete function code, along with at least 3 example function calls demonstrating the function with valid email addresses, an invalid email address, and an email address with a unique domain.`\n                            : `Create a function to mask email addresses, show examples`\n                    }\n                ]\n            },\n            {\n                id: 'dataframes',\n                label: 'Working with dataframes',\n                starters: [\n                    {\n                        name: 'load-a-dataframe',\n                        label: 'Load a DataFrame',\n                        suggestions: [\n                            {\n                                label: 'Generate a DataFrame with random data',\n                                instruction: 'Generate code that creates a DataFrame with random data'\n                            },\n                            {\n                                label: 'Load 2023 NCAA Basketball Results',\n                                instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/KenPomGamesCleaned.csv' and show the first 10 rows\"\n                            },\n                            {\n                                label: 'Load 2023 NCAA Basketball Team Ratings',\n                                instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/TeamRatings.csv' and show the first 10 rows\"\n                            },\n                            {\n                                label: '(FiveThirtyEight) Which US state has the worst drivers?',\n                                instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/bad-drivers/bad-drivers.csv' and show the first 10 rows.\"\n                            },\n                            {\n                                label: '(FiveThirtyEight) Where do people go to check the weather?',\n                                instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/weather-check/weather-check.csv' and show the first 10 rows.\"\n                            },\n                            {\n                                label: '(FiveThirtyEight) District Urbanization Index 2022',\n                                instruction: \"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/district-urbanization-index-2022/urbanization-index-2022.csv' and show the first 10 rows.\"\n                            },\n                            {\n                                label: 'Load the US Wind Turbine Database from usgs.gov',\n                                instruction: \"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/5078f1cb198694274cb708253b0dc210/raw/f90167d071abe328f7f437f3d68dbd5deb6012c8/uswtdb_v5_3_20230113.csv\"\n                            },\n                            {\n                                label: 'Load volcano data from the Smithsonian Institute',\n                                instruction: \"Load 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' in a code block. Use `pd.read_csv` and show the first 10 rows\"\n                            },\n                            {\n                                label: 'Load US population estimates (2010-2019) from census.gov',\n                                instruction: \"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/e3dbe9bde709604252f291e1df92ffa7b3bd098f/nst-est2020.csv' and show the first 10 rows.\"\n                            },\n                            {\n                                label: 'Load US population estimates (2020-2022) from census.gov',\n                                instruction: \"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/f4602d2b9a17eb0d17355897264f4bad80c5528f/NST-EST2022-POPCHG2020_2022.csv' and show the first 10 rows.\"\n                            },\n                            {\n                                label: 'Load Pittsburgh bike-share rides data',\n                                instruction: \"Generate a DataFrame from this url - 'https://gist.github.com/mattkram/16ff06942c100c00466ea5022567bdaa/raw/386da24f5ede4e70496cde1dc9e98c9d02bb177e/bikeshare.csv' and show the first 10 rows.\"\n                            }\n                        ]\n                    },\n                    {\n                        name: 'describe-dataframe',\n                        label: 'Describe the data in a DataFrame',\n                        doNotDisplay: noDataframes,\n                        buttonLabel: 'Describe Dataframe',\n                        contextSelectionRequired: true,\n                        contextType: 'describe-dataframe'\n                    },\n                    {\n                        name: 'graph-dataframe',\n                        label: 'Generate a graph for data in a DataFrame',\n                        doNotDisplay: noDataframes,\n                        buttonLabel: 'Get Code',\n                        contextSelectionRequired: true,\n                        contextType: 'graph-dataframe'\n                    }\n                ]\n            }\n        ]\n    };\n    // Only adding suggestions if the Assistant is not in the enterprise environment\n    if (!isEnterpriseNotebooks()) {\n        chatStarters.categories\n            .find(x => x.id === 'dataframes')\n            ?.starters.push({\n            name: 'data-cleaning-suggestions',\n            label: 'Suggestions for cleaning data',\n            doNotDisplay: noDataframes,\n            buttonLabel: 'Generate cleaning suggestions',\n            contextSelectionRequired: true,\n            suggestionsType: 'data-cleaning-suggestions',\n            generateSuggestions: true\n        }, {\n            name: 'dataframe-suggestions',\n            label: 'More suggestions...',\n            doNotDisplay: noDataframes,\n            buttonLabel: 'Generate suggestions',\n            contextSelectionRequired: true,\n            suggestionsType: 'dataframe-suggestions',\n            generateSuggestions: true\n        });\n    }\n    return chatStarters;\n};\n","export function parsePythonResult(result) {\n    try {\n        if (typeof result !== 'string')\n            return null;\n        const stripped = result.replace(/^'/, '').replace(/'$/, '');\n        const parsed = JSON.parse(stripped);\n        // Transform dataframe to a proper SDK Python Dataframe\n        if (!parsed.dataframes) {\n            parsed.dataframes = [];\n        }\n        parsed.dataframes = parsed.dataframes.map((df) => {\n            const resultingDataframe = {\n                cols: df.cols,\n                hash: df.hash,\n                name: df.name,\n                type: df.type,\n                dtypesStr: df.dtypesStr\n            };\n            return resultingDataframe;\n        });\n        return parsed;\n    }\n    catch (e) {\n        console.error('Could not parse variables', e);\n        return null;\n    }\n}\nexport const dataFrameCheckerPython = `\nimport json\nimport getpass\nimport hashlib\n\ndef import_pandas_safely():\n    try:\n        return __import__('pandas')\n    except ImportError:\n        return False\n\n\n__pandas = import_pandas_safely()\n\n\ndef is_data_frame(v: str):\n    obj = eval(v)\n    if  isinstance(obj, __pandas.core.frame.DataFrame) or isinstance(obj, __pandas.core.series.Series):\n        return True\n\n\ndef dataframe_columns(var):\n    df = eval(var)\n    if isinstance(df, __pandas.core.series.Series):\n        return [[df.name, str(df.dtype)]]\n    return list(map(lambda col: [col, str(df[col].dtype)], df.columns))\n\n\ndef dtypes_str(frame):\n    return str(eval(frame).dtypes)\n\ndef dataframe_hash(var):\n    # Return a hash including the column names and number of rows\n    df = eval(var)\n    if isinstance(df, __pandas.core.series.Series):\n        return hashlib.sha256(f\"{var}-{df.name},{len(df)}\".encode('utf-8')).hexdigest()\n    return hashlib.sha256(f\"{var}-{','.join(df.columns)},{len(df)}\".encode('utf-8')).hexdigest()\n\ndef get_dataframes():\n    if __pandas is None:\n        return []\n    user = getpass.getuser()\n    values = %who_ls\n    dataframes = [\n        {\n            \"name\": var,\n            \"type\": type(eval(var)).__name__,\n            \"hash\": dataframe_hash(var),\n            \"cols\": dataframe_columns(var),\n            \"dtypesStr\": dtypes_str(var),\n        }\n        for var in values if is_data_frame(var)\n    ]\n    result = {\"dataframes\": dataframes, \"user\": user}\n    return json.dumps(result, ensure_ascii=False)\n\n\nget_dataframes()\n`;\n","import { sharedCore } from '../jupyter/extension-load-utils';\nfunction getEnvironmentType() {\n    try {\n        const environmentType = sharedCore.getCoreReady().config.assistant.environmentType;\n        return environmentType;\n    }\n    catch (e) {\n        console.error('Error getting environment type', e);\n        return 'local-notebooks-dev';\n    }\n}\nexport function isLocalDev() {\n    return getEnvironmentType() === 'local-dev';\n}\nexport function isLocalNotebooks() {\n    return getEnvironmentType() === 'local-notebooks-prod' || isLocalNotebooksDev();\n}\nexport function isLocalNotebooksDev() {\n    return getEnvironmentType() === 'local-notebooks-dev';\n}\nexport function isCloudNotebooks() {\n    return getEnvironmentType() === 'cloud-notebooks-prod' || isCloudNotebooksStaging();\n}\nexport function isCloudNotebooksStaging() {\n    return getEnvironmentType() === 'cloud-notebooks-staging';\n}\nexport function isEnterpriseNotebooksDev() {\n    return getEnvironmentType() === 'enterprise-notebooks-dev';\n}\nexport function isEnterpriseNotebooks() {\n    return getEnvironmentType() === 'enterprise-notebooks-prod' || isEnterpriseNotebooksDev();\n}\nexport function getClientSource() {\n    if (isLocalDev())\n        return 'anaconda-local-dev';\n    if (isCloudNotebooksStaging())\n        return 'anaconda-cloud-notebooks-staging';\n    if (isCloudNotebooks())\n        return 'anaconda-cloud-notebooks-prod';\n    if (isLocalNotebooksDev())\n        return 'anaconda-local-notebooks-dev';\n    if (isLocalNotebooks())\n        return 'anaconda-local-notebooks-prod';\n    if (isEnterpriseNotebooksDev())\n        return 'anaconda-enterprise-notebooks-dev';\n    if (isEnterpriseNotebooks())\n        return 'anaconda-enterprise-notebooks-prod';\n    return 'unknown';\n}\n","import { getActiveChat, getActiveNotebook, useStore } from '@anaconda/assistant-components';\nimport { getAccessToken } from './nucleus/auth';\nimport { extensionAPIRequest } from './request';\nimport { getAssistantSdk } from '../assistant-sdk';\n// Calls to the extension server's /monitor_file_changes endpoint\n// to update summarizedFiles with the latest file changes\n// without updating the \"summary\" field.\n// If the file is the current active notebook,\n// calls to the extension server's /summarize_file endpoint\n// to update the \"summary\" field.\nexport async function syncFilesForSummarization() {\n    // We need an access token to summarize files\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n        console.log('Could not sync state, no access token');\n        return;\n    }\n    // If the user isn't a Pro user, we don't summarize files\n    const state = useStore.getState();\n    if (!state.account?.metadata?.is_pro_tier) {\n        return;\n    }\n    // We keep checking for file changes and summarizing files\n    while (useStore.getState().account?.metadata?.is_pro_tier) {\n        try {\n            await fetchAndSummarize();\n        }\n        catch (e) {\n            // We'll try again in a second\n        }\n        // Wait 1 second before checking for file changes again\n        await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n}\nexport async function fetchAndSummarize() {\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n        console.log('Could not sync state, no access token');\n        return;\n    }\n    // Wait for the extension server to notify us of a file change\n    const fileChanged = await extensionAPIRequest('monitor_file_changes');\n    if (fileChanged) {\n        const { path, last_modified } = fileChanged;\n        const state = useStore.getState();\n        const activeNotebook = getActiveNotebook(state);\n        const activeChat = getActiveChat(state);\n        // If the file is the current active notebook, summarize it\n        if (activeNotebook && activeNotebook.path === path) {\n            await fetchFileSummary(activeChat, path, last_modified, state.settings.enableDataCollection, accessToken);\n        }\n        else {\n            useStore.getState().addSummarizedFile(path, '', last_modified);\n        }\n    }\n}\nexport async function fetchFileSummary(activeChat, filePath, last_modified, enableDataCollection, accessToken, abortController) {\n    let _accessToken = accessToken;\n    if (!_accessToken) {\n        _accessToken = await getAccessToken();\n        if (!_accessToken) {\n            console.log('Could not sync state, no access token');\n            throw new Error('Could not sync state, no access token');\n        }\n    }\n    try {\n        const summary = await extensionAPIRequest('summarize_file', {\n            headers: { 'X-Nucleus-Token': _accessToken.accessToken },\n            method: 'POST',\n            body: JSON.stringify({\n                x_client_version: getAssistantSdk().clientVersion,\n                access_token: getAssistantSdk().accessToken.getAccessToken()?.accessToken || '',\n                x_client_source: getAssistantSdk().environmentTypes.getClientSource(),\n                file_path: filePath,\n                session_id: activeChat?.session?.sessionId || '',\n                response_message_id: activeChat?.messages[activeChat?.messages.length - 1]?.messageId || '',\n                skip_logging: !enableDataCollection\n            }),\n            signal: abortController?.signal\n        });\n        useStore.getState().addSummarizedFile(filePath, summary.data.summary, last_modified);\n        return summary.data.summary;\n    }\n    catch (error) {\n        console.log('Error fetching file summary', error);\n        throw error;\n    }\n}\n","let cachedCookies = null;\nexport function getCookies() {\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    if (typeof document === 'undefined') {\n        return {};\n    }\n    const pairs = document.cookie.split(';');\n    const cookies = {};\n    for (let i = 0; i < pairs.length; i++) {\n        const pair = pairs[i].split('=');\n        cookies[(pair[0] + '').trim()] = unescape(pair.slice(1).join('='));\n    }\n    cachedCookies = cookies;\n    return cookies;\n}\n","import { isEnterpriseNotebooks } from '../environmentType';\nimport { getJsonFromExtension, extensionAPIRequest } from '../request';\nimport { getIsProTier, getIsStarterTier } from './accountUtils';\nimport { getAccessToken } from './auth';\n/**\n * Returns the Nucleus account of the current user.\n * This function is memoized, so it will only make one request to the server\n * until the page is reloaded.\n */\nlet nucleusAccountPromise = null;\nexport function getNucleusAccount() {\n    if (isEnterpriseNotebooks()) {\n        return Promise.resolve({\n            metadata: {\n                is_starter_tier: false,\n                is_pro_tier: true,\n                is_enterprise_tier: true\n            },\n            profile: {\n                is_confirmed: true,\n                is_disabled: false\n            },\n            subscriptions: [],\n            user: {\n                id: '0',\n                company: 'Anaconda Enterprise',\n                company_size: 'none',\n                country: null,\n                created_at: '0',\n                email: 'Anaconda Enterprise',\n                external_id: undefined,\n                first_home_visit: false,\n                first_name: undefined,\n                last_name: undefined,\n                industry: undefined,\n                partner_customer_id: undefined,\n                partner_id: undefined,\n                position: undefined,\n                promotional_content: undefined,\n                state: 'TX',\n                updated_at: '0'\n            }\n        });\n    }\n    if (nucleusAccountPromise) {\n        return nucleusAccountPromise;\n    }\n    nucleusAccountPromise = (async () => {\n        const accessToken = await getAccessToken();\n        if (!accessToken) {\n            throw new Error('No access token');\n        }\n        const accountResponse = await extensionAPIRequest('nucleus_user', {\n            headers: { 'X-Nucleus-Token': accessToken.accessToken }\n        });\n        const account = await getJsonFromExtension(accountResponse);\n        const isStarterTier = getIsStarterTier(account);\n        const isProTier = getIsProTier(account);\n        return {\n            ...account,\n            metadata: {\n                is_starter_tier: isStarterTier,\n                is_pro_tier: isProTier\n            }\n        };\n    })();\n    return nucleusAccountPromise;\n}\n/**\n * Clears the memoized Nucleus account.\n */\nexport function clearNucleusAccountPromise() {\n    nucleusAccountPromise = null;\n}\n","import { extensionAPIRequest } from '../request';\nimport { useStore } from '@anaconda/assistant-components';\nimport { clearNucleusAccountPromise } from './account';\nimport { getAccessToken, clearTokenPromise } from './auth';\nimport { getAssistantSdk } from '../../assistant-sdk';\nimport { fetchTermsAndConditionsVersion } from '../../api/terms-and-conditions-version';\nimport { bindSyncDiskStateChained, syncDiskStateChained, unbindSyncDiskStateChained } from '../../jupyter/syncStateDebounced';\nimport { clearDiskState } from '../../jupyter/syncDiskState';\nimport { isEnterpriseNotebooks } from '../environmentType';\nexport const PRO_TIER_SUBSCRIPTIONS = [\n    'commercial_subscription',\n    'security_subscription',\n    'enterprise_subscription'\n];\nexport const STARTER_TIER_SUBSCRIPTION = 'starter_subscription';\nconst defaultMaxTokens = 4096;\nexport async function getAccountMaxTokens(account) {\n    if (isEnterpriseNotebooks() ||\n        account?.metadata?.is_enterprise_tier ||\n        account?.metadata?.is_pro_tier ||\n        getIsProTier(account)) {\n        return 16384;\n    }\n    return defaultMaxTokens;\n}\nexport function getIsProTier(account) {\n    if (!account) {\n        return false;\n    }\n    const subscription = account.subscriptions;\n    if (!subscription.length) {\n        return false;\n    }\n    const productCodes = subscription.map(sub => sub.product_code);\n    return productCodes.some(code => PRO_TIER_SUBSCRIPTIONS.includes(code));\n}\nexport function getIsStarterTier(account) {\n    if (!account) {\n        return false;\n    }\n    const subscription = account.subscriptions;\n    if (!subscription.length) {\n        return false;\n    }\n    const productCodes = subscription.map(sub => sub.product_code);\n    return productCodes.some(code => code === STARTER_TIER_SUBSCRIPTION);\n}\n/**\n * Logs out the current user.\n */\nexport async function logout(message) {\n    if (window.confirm(message ||\n        'Are you sure you want to log out? Logging out will remove all your Anaconda Assistant data.')) {\n        try {\n            await clearDiskState();\n        }\n        catch (e) {\n            console.error('Error clearing disk state', e);\n        }\n        clearNucleusAccountPromise();\n        clearTokenPromise();\n        try {\n            await extensionAPIRequest('logout');\n        }\n        catch (e) {\n            console.error('Error logging out', e);\n        }\n        useStore.getState().logout();\n    }\n}\n/**\n * Logs in the current user.\n */\nexport async function login() {\n    unbindSyncDiskStateChained();\n    clearNucleusAccountPromise();\n    clearTokenPromise();\n    await extensionAPIRequest('login');\n    const accessToken = await getAccessToken();\n    if (!accessToken) {\n        return logout();\n    }\n    const sdk = getAssistantSdk();\n    sdk.accessToken.setAccessToken(accessToken);\n    const version = await fetchTermsAndConditionsVersion();\n    const state = useStore.getState();\n    state.setAccess(Boolean(version));\n    await state.updateAccount();\n    const app = _jupyterFrontEnd;\n    if (!app) {\n        console.error('Could not find Jupyter Front End');\n        return;\n    }\n    const context = app.shell.currentWidget?.context;\n    const factoryName = context?.factoryName;\n    const isNotebook = factoryName && factoryName.toLowerCase() === 'notebook';\n    if (!isNotebook && useStore.getState().account) {\n        // If the user already logged in, but the current widget is not a notebook,\n        // we must create a notebook.\n        // The only view that works without a notebook is the login view.\n        await app.commands.execute('notebook:create-new');\n    }\n    await syncDiskStateChained();\n    state.resetToHomeScreen();\n    bindSyncDiskStateChained();\n}\nlet _jupyterFrontEnd = null;\nexport function shareJupyterFrontEndWithLogin(jupyterFrontEnd) {\n    _jupyterFrontEnd = jupyterFrontEnd;\n}\n","import { getJson, extensionAPIRequest } from '../request';\nimport { getCookies } from '../getCookies';\nimport { isEnterpriseNotebooks, isLocalDev, isLocalNotebooks } from '../environmentType';\nimport { ENV } from '../../config';\nlet statePromise = null;\nconst authenticationMethod = [\n    {\n        unavailable: false,\n        getUrl: () => `${ENV.PROD.LEGACY_CLOUD_API_BASE_URL}/iam/token`,\n        getOptions: () => ({\n            method: 'POST',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ grant_type: 'refresh_token' })\n        })\n    },\n    {\n        unavailable: false,\n        getUrl: () => `${ENV.PROD.CLOUD_API_BASE_URL}/iam/token`,\n        getOptions: () => ({\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                grant_type: 'refresh_token',\n                refresh_token: getCookies().refresh_token\n            })\n        })\n    },\n    {\n        unavailable: false,\n        getUrl: () => `${ENV.PROD.STAGING_CLOUD_API_BASE_URL}/iam/token`,\n        getOptions: () => ({\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                grant_type: 'refresh_token',\n                refresh_token: getCookies().refresh_token\n            })\n        })\n    }\n];\nasync function initState() {\n    let tokenResponse = null;\n    for (const method of authenticationMethod) {\n        if (method.unavailable) {\n            continue;\n        }\n        console.log('[Assistant] Trying to get access token from', method.getUrl());\n        try {\n            tokenResponse = await fetch(method.getUrl(), method.getOptions());\n            if (tokenResponse.status === 200) {\n                break;\n            }\n        }\n        catch (e) {\n            console.error(e);\n            method.unavailable = true;\n        }\n    }\n    if (!tokenResponse || tokenResponse.status !== 200) {\n        throw new Error('Unable to get access token');\n    }\n    const { access_token, expires_in } = await getJson(tokenResponse);\n    const expires = new Date();\n    expires.setSeconds(expires.getSeconds() + expires_in);\n    return { token: access_token, expires };\n}\nlet tokenPromise = null;\nexport function getNucleusAccessToken(path) {\n    if (tokenPromise) {\n        return tokenPromise;\n    }\n    tokenPromise = (async () => {\n        const response = await extensionAPIRequest(path);\n        if (response.access_token === null) {\n            return null;\n        }\n        return {\n            accessToken: response.access_token,\n            expiresAt: response.expires_at\n        };\n    })();\n    return tokenPromise;\n}\nexport function clearTokenPromise() {\n    tokenPromise = null;\n}\nexport async function getAccessToken(loopCount = 0) {\n    // If localhost, don't try to get an access token\n    if (isLocalDev()) {\n        return null;\n    }\n    // If local notebooks\n    if (isLocalNotebooks()) {\n        return getNucleusAccessToken('nucleus_token');\n    }\n    // If enterprise notebooks\n    if (isEnterpriseNotebooks()) {\n        return getNucleusAccessToken('ae5_nucleus_token');\n    }\n    // Otherwise, get the access token\n    if (loopCount > 2) {\n        throw new Error('The access token expires_at is causing a loop');\n    }\n    if (!statePromise) {\n        statePromise = initState();\n    }\n    const state = await statePromise;\n    const now = new Date();\n    // Invalidate the token when it gets within 30 seconds of expiration\n    // to avoid clock drift etc.\n    if (now >= state.expires) {\n        statePromise = null;\n        return getAccessToken(loopCount++);\n    }\n    return {\n        accessToken: state.token,\n        expiresAt: state.expires.getTime()\n    };\n}\n","import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { ASSISTANT_EXTENSION_NAMESPACE } from '../config';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function extensionAPIRequest(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, ASSISTANT_EXTENSION_NAMESPACE, // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\nexport async function getJson(response) {\n    if (!response.ok) {\n        try {\n            const text = await response.text();\n            return Promise.reject(`Failed with status ${response.status} and body ${text}`);\n        }\n        catch (e) {\n            return Promise.reject(`Failed with status ${response.status}`);\n        }\n    }\n    return response.json();\n}\nexport async function getJsonFromExtension(response) {\n    if (response.remote_status_code < 200 || response.remote_status_code >= 300) {\n        throw new Error(`Failed with status ${response.remote_status_code} and body ${response.remote_data}`);\n    }\n    return response.remote_data;\n}\n","export function isSelectionEqual(current, selection) {\n    return (current !== null &&\n        current.uuid === selection.uuid &&\n        current.startColumn === selection.start.column &&\n        current.endColumn === selection.end.column &&\n        current.startRow === selection.start.line &&\n        current.endRow === selection.end.line);\n}\nexport function getSelectionFromEditor(editor, selection) {\n    const startPos = editor.getOffsetAt(selection.start);\n    const endPos = editor.getOffsetAt(selection.end);\n    const source = editor.model.sharedModel.getSource();\n    const text = source.substring(startPos, endPos);\n    const cell = { id: selection.uuid?.toString() || '', source };\n    return { text, cell };\n}\nexport function convertSelection(selection) {\n    return {\n        uuid: selection.uuid?.toString() || '',\n        startColumn: selection.start.column,\n        startRow: selection.start.line,\n        endColumn: selection.end.column,\n        endRow: selection.end.line\n    };\n}\n"],"names":[],"sourceRoot":""}